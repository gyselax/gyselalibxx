cmake_tests_non_periodic:
  only: [ main, merge_requests ]
  stage: test
  needs: []
  image: jbigot/voicexx_env
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script: |
    rm -rf build || true
    mkdir build
    cd build
    cmake -DCMAKE_CXX_FLAGS=-Wall -DBUILD_BENCHMARKS=ON -DVOICEXX_ENABLE_PERIODIC_RDIMX=OFF ..
    make -j 4 VERBOSE=1
    ctest -j 2 --output-on-failure --timeout 5 -LE test_on_Release_only --output-junit tests.xml
  artifacts:
    when: always
    reports:
      junit: ./build/tests.xml
cmake_tests:
  only: [ main, merge_requests ]
  stage: test
  needs: []
  image: jbigot/voicexx_env
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script: |
    rm -rf build || true
    mkdir build
    cd build
    cmake -DCMAKE_CXX_FLAGS=-Wall -DBUILD_BENCHMARKS=ON ..
    make -j 4 VERBOSE=1
    ctest -j 2 --output-on-failure --timeout 5 -LE test_on_Release_only --output-junit tests.xml
  artifacts:
    when: always
    reports:
      junit: ./build/tests.xml
cmake_tests_Release:
  only: [ main, merge_requests ]
  stage: test
  needs: []
  image: jbigot/voicexx_env
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script: |
    rm -rf build || true
    mkdir build
    cd build
    cmake -DCMAKE_CXX_FLAGS=-Wall -DBUILD_BENCHMARKS=ON -DCMAKE_BUILD_TYPE=Release ..
    make -j 4 VERBOSE=1
    ctest -j 2 --output-on-failure --timeout 5 --output-junit tests.xml
  artifacts:
    when: always
    paths:
      - ./build/tests/landau/fft/dampingrate_t0.0to45.0.png
      - ./build/tests/landau/fft/frequency_t0.0to45.0.png
    reports:
      junit: ./build/tests.xml
indentation:
  only: [ main, merge_requests ]
  stage: test
  needs: []
  image: jbigot/voicexx_env
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script: |
    ./bin/indent -td
ddc_sync:
  only: [ triggers ]
  needs: []
  image: jbigot/voicexx_env
  script:
  - git config user.email "${GITLAB_USER_EMAIL}"
  - git config user.name "${GITLAB_USER_NAME}"
  - git checkout "${CI_COMMIT_BRANCH}"
  - ./bin/ddc_sync --commit
  - git push "http://root:${SELF_COMMIT_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git" "HEAD:${CI_COMMIT_BRANCH}"
# public_mirror:
#   only: [ main ]
#   needs: []
#   image: jbigot/voicexx_env
#   script: ./bin/public_mirror
