name: Docker update

inputs:
  always_push:
    description: 'Indicates if the docker should be pushed and tagged with the SHA regardless of whether it was rebuilt or not'
    type: bool
    required: true
  release_tag:
    description: 'A tag for the release version'
    type: string
    required: false
    default: ''
outputs:
  image_tag:
    description: "The image tag that should be used after this action"

runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/changed_files
    - id: rebuild-check
      run: |
        echo cat changed_files.txt
        # Check if docker/gyselalibxx_env/Dockerfile has been modified
        changed_docker_file=$(cat changed_files.txt | grep docker/gyselalibxx_env/Dockerfile || true)
        echo "${changed_docker_file}"
        # Use the modification status of docker/gyselalibxx_env/Dockerfile to decide if the docker should be rebuilt
        if [ -n "${changed_docker_file}" ]
        then
          echo "rebuild=true" >> $GITHUB_OUTPUT
        else
          echo "rebuild=false" >> $GITHUB_OUTPUT
        fi
      shell: bash
    - name: Build final tags
      id: get-tags
      if: inputs.always_push || (steps.rebuild-check.outputs.rebuild == 'true')
      run: |
        import os
        sha_tag = "ghcr.io/gyselax/gyselalibxx_env:${{ github.event.pull_request.head.sha || github.SHA }}"
        release_tag = "ghcr.io/gyselax/gyselalibxx_env:${{ inputs.release_tag }}"
        # Build a CSV representation of the tags
        full_tags = sha_tag + ('' if release_tag.endswith(":") else (','+release_tag))
        # Save the CSV to the outputs for use in the build-push-action
        print("full_tags=", full_tags, file=open(os.environ["GITHUB_OUTPUT"], 'a'), sep='')
      shell: python
    - name: Set up QEMU
      if: inputs.always_push || (steps.rebuild-check.outputs.rebuild == 'true')
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      if: inputs.always_push || (steps.rebuild-check.outputs.rebuild == 'true')
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      if: inputs.always_push || (steps.rebuild-check.outputs.rebuild == 'true')
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}
    - name: Build and push to tag
      if: inputs.always_push || (steps.rebuild-check.outputs.rebuild == 'true')
      uses: docker/build-push-action@v6
      with:
        context: ./docker/gyselalibxx_env
        cache-from: type=registry,ref=ghcr.io/gyselax/gyselalibxx_env:latest
        pull: true
        push: true
        call: ${{ (steps.rebuild-check.outputs.rebuild == 'true') && 'build' || 'check' }}
        tags: ${{ steps.get-tags.outputs.full_tags }}
    - name: Pick image tag for subsequent jobs
      run: |
        if [ "${{ inputs.always_push || (steps.rebuild-check.outputs.rebuild == 'true') }}" == "true" ]
        then
          echo "image_tag=ghcr.io/gyselax/gyselalibxx_env:${{ github.event.pull_request.head.sha || github.SHA }}"
        else
          echo "image_tag=ghcr.io/gyselax/gyselalibxx_env:latest"
        fi
      shell: bash
