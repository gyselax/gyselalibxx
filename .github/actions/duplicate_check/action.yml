name: "Check if CPU/GPU tests can be skipped"
outputs:
  should_skip:
    description: "True if the tests should be run, False otherwise."
    value: ${{ steps.outcome.outputs.should_skip }}

runs:
  using: "composite"
  steps:
    - run: |
        MATCHING_PATHS='["src/**/*.hpp", "src/**/*.cpp", "tests/**/*.hpp", "tests/**/*.cpp", "simulations/**/*.hpp", "simulations/**/*.cpp", "**/CMakeLists.txt", "vendor/**", ".github/actions/**", ".github/workflows/**", "toolchains/docker.gyselalibxx_env/**", "toolchains/v100.persee/**"]'
        echo "MATCHING_PATHS=${MATCHING_PATHS}" >> ${GITHUB_ENV}
      shell: bash
    - id: pr_check
      if: github.event_name == 'pull_request'
      run: |
        gh pr diff ${{ github.event.pull_request.number }} --name-only > changed_files.txt
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
    - id: merge_group_check
      if: github.event_name == 'merge_group'
      run: |
        git diff --name-only origin/devel > changed_files.txt
      shell: bash
    - id: changes_check
      run: |
        import fnmatch
        import os
        with open("changed_files.txt") as f:
          lines = [l.strip() for l in f.readlines()]
        matching_paths = [si.strip('"') for si in os.environ['MATCHING_PATHS'].split('[')[1].split(']')[0].split(', ')]
        matches = [m for pat in matching_paths for m in fnmatch.filter(lines, pat)]
        print(matches)
        with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
          f.write(f'found_match={len(matches)!=0}')
      shell: python
    - id: duplicate_check
      uses: fkirc/skip-duplicate-actions@v5
      with:
        # All of these options are optional, so you can remove them if you are happy with the defaults
        skip_after_successful_duplicate: 'true'
    - id: outcome
      run: |
        echo "Found match : ${{ steps.changes_check.outputs.found_match }}"
        echo "Should skip : ${{ steps.duplicate_check.outputs.should_skip }}"
        SHOULD_SKIP=${{ (steps.changes_check.outputs.found_match == 'False') || (steps.duplicate_check.outputs.should_skip == 'true') }}
        echo "should_skip=${SHOULD_SKIP}" >> $GITHUB_OUTPUT
        echo "should_skip=${SHOULD_SKIP}"
      shell: bash
