name: Acceptance tests

on:
  pull_request:
    branch: [ 'main' ]

jobs:
  docker:
    if: github.repository == 'gyselax/gyselalibxx'
    uses: .github/workflows/docker.yml
    with:
      SHA: ${{ github.sha }}
      update_latest: true
    secrets: inherit

          - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            sll:
              - 'vendor/sll/**'
            poisson_2d:
              - 'src/geometryRTheta/poisson/**'
          base: ${{ inputs.filter_tests_base }}
      - name: 'Setup'
        run: |
          if [ -z "${{ inputs.filter_tests_base }}" ]
          then
            echo "SLL_BUILD_TESTING=ON" >> $GITHUB_ENV
            echo "POISSON_2D_TESTING=ON" >> $GITHUB_ENV
          else
            echo "SLL_BUILD_TESTING=${{ steps.changes.outputs.sll }}" >> $GITHUB_ENV
            echo "POISSON_2D_TESTING=${{ steps.changes.outputs.poisson_2d }}" >> $GITHUB_ENV
          fi
        shell: bash


  cpu_tests:
    runs-on: ubuntu-latest
    needs: docker
    container:
      image: ghcr.io/gyselax/gyselalibxx_env:${{ github.sha }}
      options: --user root
    strategy:
      matrix:
        toolchain: [tests_toolchain.cmake, tests_release_toolchain.cmake, tests_release_omp_toolchain.cmake]
    steps:
    - name: Checkout gyselalibxx
      uses: actions/checkout@v4
      with: { submodules: recursive }
    - name: "Filter tests"
      uses: ./github/actions/test_filter
    - name: Run tests
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_TOOLCHAIN=../toolchains/docker.gyselalibxx_env/${{ matrix.toolchain }} ..
        cmake --build .
        ctest -j 2 --timeout 5 --output-junit tests.xml
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: './build/test.xml'

  gpu_tests:
    runs-on: self-hosted
ï¿¼   environment: development
    steps:
    - name: Checkout gyselalibxx
      uses: actions/checkout@v4
      with: { submodules: recursive }
    - name: "Filter tests"
      uses: ./github/actions/test_filter
    - name: Run tests
      run: |
        . toolchains/v100.persee/environment.sh
        mkdir build
        cd build
        cmake -DCMAKE_TOOLCHAIN=../toolchains/v100.persee/toolchain.cmake ..
        cmake --build .
        ctest -j 2 --timeout 5 --output-junit tests.xml
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: './build/test.xml'
