name: docker

on:
  push:
    branches:
    - 'main'
  pull_request: 
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v4
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Build and push to tag
      uses: docker/build-push-action@v3
      with:
        context: ./docker/gyselalibxx_env
        cache-from: type=registry,ref=ghcr.io/gyselax/gyselalibxx_env:latest
        pull: true
        push: true
        tags: ghcr.io/gyselax/gyselalibxx_env:${{ github.sha }}
    -
      name: Build and push latest
      if: github.event_name == 'push' && github.ref_name == 'main'
      uses: docker/build-push-action@v3
      with:
        context: ./docker/gyselalibxx_env
        cache-from: type=registry,ref=ghcr.io/gyselax/gyselalibxx_env:latest
        pull: true
        push: true
        tags: ghcr.io/gyselax/gyselalibxx_env:latest

  tests:
    runs-on: ubuntu-latest
    needs: docker
    container:
      image: ghcr.io/gyselax/gyselalibxx_env:${{ github.sha }}
      options: --user root
    strategy:
      matrix:
        toolchain: [tests_toolchain.cmake, tests_release_toolchain.cmake]
    steps:
    - 
      name: Checkout gyselalibxx
      uses: actions/checkout@v4
      with: { submodules: recursive }
    - 
      name: Run tests
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/docker.gyselalibxx_env/${{ matrix.toolchain }} ..
        cmake --build . -j 4
        ctest -j 2 --timeout 5 --output-junit tests.xml
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: './build/test.xml'

  Docs:
    if: github.event_name == 'push' && github.ref_name == 'main'
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: code_branch
      - name: Checkout documentation
        uses: actions/checkout@v4
        with:
          ref: documentation
          path: doc_branch
      - name: Install doxygen
        run: |
          sudo apt install doxygen
        shell: bash
      - name: Generate docs
        run: |
          cmake -DGYSELALIBXX_COMPILE_SOURCE=OFF -DBUILD_DOCUMENTATION=1 -B build-docs code_branch
          cmake --build build-docs
        shell: bash
      - name: Update documentation
        run: |
          cd doc_branch
          git rm -r *
          cp -r ../build-docs/docs/html/* .
          git add .
          git config --global user.name "GitHub CI Documentation builder"
          git config --global user.email "username@users.noreply.github.com"
          git commit -m "Update docs" || true
          git push
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
