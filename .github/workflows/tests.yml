name: docker

on:
  push:
    branches:
    - 'main'
  pull_request: 
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Build and push to tag
      uses: docker/build-push-action@v3
      with:
        context: ./docker/voicexx_env
        cache-from: type=registry,ref=ghcr.io/gyselax/voicexx_env:latest
        pull: true
        push: true
        tags: ghcr.io/gyselax/voicexx_env:${{ github.sha }}
    -
      name: Build and push latest
      if: github.event_name == 'push' && github.ref_name == 'main'
      uses: docker/build-push-action@v3
      with:
        context: ./docker/voicexx_env
        cache-from: type=registry,ref=ghcr.io/gyselax/voicexx_env:latest
        pull: true
        push: true
        tags: ghcr.io/gyselax/voicexx_env:latest

  tests:
    runs-on: ubuntu-latest
    needs: docker
    steps:
    - 
      name: Checkout gyselalibxx
      uses: actions/checkout@v3
      with: { submodules: recursive }
    - 
      name: Run tests
      run: |
        cat<<-EOF > run.sh
          set -xe
          cmake -DCMAKE_CXX_FLAGS=-Wall -DBUILD_BENCHMARKS=ON /src
          make -j 2 VERBOSE=1
          ctest --output-on-failure --timeout 5 -LE test_on_Release_only
        EOF
        docker run -v ${PWD}:/src:ro ghcr.io/gyselax/voicexx_env:${{ github.sha }} bash /src/run.sh

  tests_Release:
    runs-on: ubuntu-latest
    needs: docker
    steps:
    - 
      name: Checkout gyselalibxx
      uses: actions/checkout@v3
      with: { submodules: recursive }
    - 
      name: Run tests
      run: |
        cat<<-EOF > run.sh
          set -xe
          cmake -DCMAKE_CXX_FLAGS=-Wall -DBUILD_BENCHMARKS=ON -DCMAKE_BUILD_TYPE=Release /src
          make -j 2 VERBOSE=1
          ctest --output-on-failure --timeout 5
        EOF
        docker run -v ${PWD}:/src:ro ghcr.io/gyselax/voicexx_env:${{ github.sha }} bash /src/run.sh
