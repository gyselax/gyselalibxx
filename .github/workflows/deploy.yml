name: Deploy

on:
  push:
    branches:
    - 'devel'


jobs:
  docker:
    if: github.repository == 'gyselax/gyselalibxx'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: "Check if rebuild is necessary"
        id: rebuild-check
        run: |
          changed_docker_file=$(git show ${{ github.sha }} --name-only --pretty= | grep docker/gyselalibxx_env/Dockerfile || true)
          if [ -n "${changed_docker_file}" ]
          then
            echo "rebuild=true" >> $GITHUB_OUTPUT
          else
            echo "rebuild=false" >> $GITHUB_OUTPUT
          fi
      - name: Checkout
        uses: ./github/actions/docker_update
        with:
          release: true
          rebuild: ${{ steps.rebuild-check.outputs.rebuild }}

  Docs:
    if: github.repository == 'gyselax/gyselalibxx'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: code_branch
      - name: Checkout documentation
        uses: actions/checkout@v4
        with:
          ref: documentation
          path: doc_branch
      - name: Install doxygen
        run: |
          sudo apt-get install doxygen
        shell: bash
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Python dependencies
        run:
          pip install -r requirements.txt
        shell: bash
        working-directory: ./code_branch/docs
      - name: Generate docs
        run: |
          python3 docs/prepare_mkdocs.py . docs/mkdoc vendor/ docs/mkdoc
          cd docs
          mkdocs build
        shell: bash
        working-directory: ./code_branch
      - name: Update documentation
        run: |
          git rm -r *
          cp -r ../code_branch/docs/site/* .
          git add .
          git config --global user.name "GitHub CI Documentation builder"
          git config --global user.email "username@users.noreply.github.com"
          git commit -m "Update docs" || true
          git push
        shell: bash
        working-directory: ./doc_branch
        env:
          GH_TOKEN: ${{ github.token }}

  Mirror:
    if: github.repository == 'gyselax/gyselalibxx'
    runs-on: ubuntu-latest
    environment: 'GitLab GPU trigger'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: gysela-developpers/gyselalibxx
          token: ${{secrets.GITLAB_PAT}}
          ref: public
          github-server-url: https://gitlab.maisondelasimulation.fr
      - name: Update GitLab
        run: |
          git remote add github https://github.com/gyselax/gyselalibxx.git
          git fetch github ${{ github.SHA }}
          git push origin ${{ github.SHA }}:public
        shell: bash
