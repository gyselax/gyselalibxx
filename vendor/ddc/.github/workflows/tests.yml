name: test
on:
  push:
    branches: [ main ]
  pull_request:
jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GHCR.io
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build
      uses: docker/build-push-action@v2
      with:
        context: "{{ defaultContext }}:docker/test_env"
        pull: true
        load: true
        cache-from: type=registry,ref=ghcr.io/maison-de-la-simulation/ddc/test_env:latest
        tags: ghcr.io/maison-de-la-simulation/ddc/test_env:${{ github.sha }}
    - name: Tagged push
      uses: docker/build-push-action@v2
      with:
        context: "{{ defaultContext }}:docker/test_env"
        push: true
        tags: ghcr.io/maison-de-la-simulation/ddc/test_env:${{ github.sha }}
    - name: Publish
      if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
      uses: docker/build-push-action@v2
      with:
        context: "{{ defaultContext }}:docker/test_env"
        cache-from: type=registry,ref=ghcr.io/maison-de-la-simulation/ddc/test_env:${{ github.sha }}
        push: true
        tags: ghcr.io/maison-de-la-simulation/ddc/test_env:latest
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: 'include/ddc/ tests/ examples/'
        exclude: ''
        extensions: 'hpp,cpp'
        clangFormatVersion: 12
  test-Debug:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout built branch
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build
      run: |
        cat<<-EOF > run.sh
          set -xe
          cmake -DCMAKE_CXX_FLAGS="-Wall -fno-omit-frame-pointer -fsanitize=address" -DBUILD_BENCHMARKS=ON -DCMAKE_BUILD_TYPE=Debug /src
          make -j 2 VERBOSE=1
          ctest -j 2 --output-on-failure --timeout 5 --output-junit tests.xml
        EOF
        docker run -v ${PWD}:/src:ro ghcr.io/maison-de-la-simulation/ddc/test_env:${{ github.sha }} bash /src/run.sh
  test-Release:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout built branch
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build
      run: |
        cat<<-EOF > run.sh
          set -xe
          cmake -DCMAKE_CXX_FLAGS="-Wall" -DBUILD_BENCHMARKS=ON -DCMAKE_BUILD_TYPE=Release /src
          make -j 2 VERBOSE=1
          ctest -j 2 --output-on-failure --timeout 5 --output-junit tests.xml
        EOF
        docker run -v ${PWD}:/src:ro ghcr.io/maison-de-la-simulation/ddc/test_env:${{ github.sha }} bash /src/run.sh
