.setup_env:
  stage: .pre
  image: ghcr.io/gyselax/gyselalibxx_env
  needs: []
  timeout: 10 mins
  script:
    - changed_files=$(awk '{printf("%s ",$0)} END { printf "\n" }' changed_files.txt)
    - echo "CHANGED_FILES=\"${changed_files}\"" >> build.env
    - FOUND_SLL=$(grep "vendor/sll/.*" -x changed_files.txt || true)
    - if [ -z "$FOUND_SLL" ]; then echo "SLL_BUILD_TESTING=OFF" >> build.env; else echo "SLL_BUILD_TESTING=ON" >> build.env; fi
    - FOUND_POISSON_2D=$(grep "src/geometryRTheta/poisson/.*" -x changed_files.txt || true)
    - if [ -z "$FOUND_POISSON_2D" ]; then echo "POISSON_2D_BUILD_TESTING=OFF" >> build.env; else echo "POISSON_2D_BUILD_TESTING=ON" >> build.env; fi
    - FOUND_DDC=$(grep "vendor/ddc" changed_files.txt || true)
    - if [ -z "$FOUND_DDC" ]; then echo "DDC_BUILD_TESTING=OFF" >> build.env; else echo "DDC_BUILD_TESTING=ON" >> build.env; fi
  artifacts:
    expire_in: 1 week
    reports:
      dotenv: build.env

setup_env_push:
  extends: .setup_env
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - set -x
    - git config --global --add safe.directory $(pwd)
    - git log -1 --format=%H | git diff --name-only > changed_files.txt

setup_env_mr:
  extends: .setup_env
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  before_script:
    - set -x
    - git config --global --add safe.directory $(pwd)
    - git fetch --no-recurse-submodules origin ${CI_MERGE_REQUEST_DIFF_BASE_SHA}
    - git diff --name-only ${CI_MERGE_REQUEST_DIFF_BASE_SHA} > changed_files.txt


.cmake_tests:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      needs: [ setup_env_push ]
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      needs: [ setup_env_mr ]
  stage: test
  timeout: 2 hours
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script: |
    set -x
    git config --global --add safe.directory /builds/gysela-developpers/gyselalibxx/vendor/kokkos
    rm -rf build || true
    mkdir build
    cd build
    cmake -DCMAKE_TOOLCHAIN_FILE=${TOOLCHAIN} ..
    cmake --build . -j 4
    ctest -j 2 --timeout 5 --output-junit tests.xml --output-on-failure
    ls ./tests/geometryXVx/landau/fft/growthrate_t0.0to45.0.png
    ls ./tests/geometryXVx/landau/fft/frequency_t0.0to45.0.png
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - ./build/tests/geometryXVx/landau/fft/growthrate_t0.0to45.0.png
      - ./build/tests/geometryXVx/landau/fft/frequency_t0.0to45.0.png
    reports:
      junit: ./build/tests.xml

