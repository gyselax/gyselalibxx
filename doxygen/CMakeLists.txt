# SPDX-License-Identifier: MIT

FIND_PACKAGE(Python3 REQUIRED)
message(STATUS "DOXYGEN")

file(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/html")
set(DOXYGEN_PROJECT_NAME "Gyselalib++")
set(DOXYGEN_AUTOLINK_SUPPORT YES)
set(DOXYGEN_BUILTIN_STL_SUPPORT YES)
if("${DOXYGEN_VERSION}" VERSION_GREATER_EQUAL 1.9.4 AND CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND "${CMAKE_EXPORT_COMPILE_COMMANDS}")
# Doxygen <= 1.9.4 suffers from https://github.com/doxygen/doxygen/issues/8784
set(DOXYGEN_CLANG_ASSISTED_PARSING YES)
set(DOXYGEN_CLANG_DATABASE_PATH "${CMAKE_BINARY_DIR}")
endif()
set(DOXYGEN_DISABLE_INDEX YES)
set(DOXYGEN_ENUM_VALUES_PER_LINE 1)
set(DOXYGEN_EXPAND_ONLY_PREDEF NO)
set(DOXYGEN_EXTRACT_ALL NO)
set(DOXYGEN_EXCLUDE_SYMBOLS "detail" "details" "mapping_detail")
set(DOXYGEN_EXTRACT_LOCAL_CLASSES YES)
set(DOXYGEN_FULL_PATH_NAMES YES)
set(DOXYGEN_GENERATE_TREEVIEW YES)
set(DOXYGEN_GENERATE_LATEX NO)
set(DOXYGEN_USE_MATHJAX YES)
#set(DOXYGEN_HTML_FOOTER "${CMAKE_CURRENT_SOURCE_DIR}/_template/footer.html")
#set(DOXYGEN_HTML_HEADER "${CMAKE_CURRENT_SOURCE_DIR}/_template/header.html")
#set(DOXYGEN_HTML_STYLESHEET "${CMAKE_CURRENT_SOURCE_DIR}/_template/style.css")
set(DOXYGEN_HTML_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/html")
set(DOXYGEN_HTML_TIMESTAMP NO)
set(DOXYGEN_INCLUDE_GRAPH NO)
set(DOXYGEN_INCLUDED_BY_GRAPH NO)
set(DOXYGEN_INLINE_SIMPLE_STRUCTS YES)
set(DOXYGEN_JAVADOC_AUTOBRIEF YES)
set(DOXYGEN_LAYOUT_FILE "${CMAKE_CURRENT_SOURCE_DIR}/template/layout.xml")
set(DOXYGEN_MACRO_EXPANSION YES)
set(DOXYGEN_PREDEFINED "DOXYGEN_IGNORE")
set(DOXYGEN_PROJECT_LOGO "${CMAKE_CURRENT_SOURCE_DIR}/images/logo.png")
set(DOXYGEN_PROJECT_NUMBER "${gyselalibxx_VERSION}")
set(DOXYGEN_QT_AUTOBRIEF YES)
set(DOXYGEN_RECURSIVE YES)
set(DOXYGEN_SEARCHENGINE YES)
set(DOXYGEN_SHOW_FILES YES)
set(DOXYGEN_SHOW_INCLUDE_FILES YES)
set(DOXYGEN_SORT_MEMBER_DOCS NO)
set(DOXYGEN_SORT_MEMBERS_CTORS_1ST YES)
set(DOXYGEN_TOC_INCLUDE_HEADINGS 4)
set(DOXYGEN_TYPEDEF_HIDES_STRUCT YES)
set(DOXYGEN_UML_LIMIT_NUM_FIELDS 20)
set(DOXYGEN_UML_LOOK YES)
set(DOXYGEN_WARN_NO_PARAMDOC YES)
set(DOXYGEN_WARN_IF_UNDOCUMENTED YES)
set(DOXYGEN_WARN_IF_DOC_ERROR YES)
set(DOXYGEN_WARN_AS_ERROR NO)
set(DOXYGEN_WARN_LOGFILE "doxygen.log")
set(DOXYGEN_STRIP_FROM_PATH "")
#set(DOXYGEN_IMAGE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/images")
FILE(GLOB_RECURSE MarkdownSources
	"${gyselalibxx_SOURCE_DIR}/src/*README.md"
	"${gyselalibxx_SOURCE_DIR}/tests/*README.md"
	"${gyselalibxx_SOURCE_DIR}/simulations/*README.md"
	"${gyselalibxx_SOURCE_DIR}/vendor/sll/*README.md"
	"${gyselalibxx_SOURCE_DIR}/toolchains/*README.md"
	"${CMAKE_CURRENT_SOURCE_DIR}/*.md")

message(STATUS ${MarkdownSources})

SET(TREATED_MD)

# Generate Doxygen compatible Markdown files
foreach(MD_FILE ${MarkdownSources} "${gyselalibxx_SOURCE_DIR}/README.md")

	file(RELATIVE_PATH relpath ${gyselalibxx_SOURCE_DIR} ${MD_FILE})

	message(STATUS "${Python3_EXECUTABLE} ${gyselalibxx_SOURCE_DIR}/ci_tools/readme_to_doxygen.py ${MD_FILE} ${CMAKE_CURRENT_BINARY_DIR}/${relpath}")

add_custom_command(
        OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${relpath}
	COMMAND ${Python3_EXECUTABLE} ${gyselalibxx_SOURCE_DIR}/ci_tools/readme_to_doxygen.py ${MD_FILE} ${CMAKE_CURRENT_BINARY_DIR}/${relpath}
        DEPENDS ${MD_FILE} ${gyselalibxx_SOURCE_DIR}/ci_tools/readme_to_doxygen.py
        VERBATIM
)

SET(TREATED_MD ${TREATED_MD} ${CMAKE_CURRENT_BINARY_DIR}/${relpath})

endforeach()

FILE(GLOB_RECURSE HPP_SOURCES
	"${gyselalibxx_SOURCE_DIR}/src/*.hpp"
	"${gyselalibxx_SOURCE_DIR}/tests/*.hpp"
	"${gyselalibxx_SOURCE_DIR}/vendor/sll/*.hpp")

message(STATUS ${TREATED_MD})

doxygen_add_docs(doc
	${TREATED_MD}
	${HPP_SOURCES}
        ALL)
