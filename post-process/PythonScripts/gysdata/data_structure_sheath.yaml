# SPDX-License-Identifier: MIT

# one field
fdistribu:
  # the list of HDF5 datasets where this field can be found (this can also be a single dict)
  path:
    # file regex, in the regex we capture values that can be used in filename_coord (?P<NAME>CAPTURE)
    file: 'VOICEXX_\d+.h5'
    # dataset regex
    dataset: 'fdistribu'
  dimensions:
  # ordered set of dimension_name -> how to get the coordinates of this dimension
  - &timed
    # get the coordinates of this dimension from a scalar in the file
    time:    { local_coord: [ 'time_saved' ] }
  - &speciesd
    # get the coordinates of this dimension from a field in another file
    species: { constant_coord: [ "electrons", "ions" ] }
  - &xd
    x:       { global_coord: [ &initstate "VOICEXX_initstate.h5", MeshX ] }
  - &vxd
    v_x:     { global_coord: [ *initstate , MeshVx ] }

electrostatic_potential:
  dimensions: [ *timed , *xd ]
  path: { file: 'VOICEXX_\d+.h5', dataset: 'electrostatic_potential' }

fdistribu_charges:
  dimensions: [ *speciesd ]
  path: { file: 'VOICEXX_initstate.h5', dataset: 'fdistribu_charges' }

fdistribu_masses:
  dimensions: [ *speciesd ]
  path: { file: 'VOICEXX_initstate.h5', dataset: 'fdistribu_masses' }

fdistribu_eq:
  dimensions: [ *speciesd , *vxd ]
  path: { file: 'VOICEXX_initstate.h5', dataset: 'fdistribu_eq' }

krook_sink_constant_amplitude:
  dimensions: [ ]
  path: { file: 'VOICEXX_initstate.h5', dataset: 'krook_sink_constant_amplitude' }

krook_sink_constant_mask:
  dimensions: [ *xd ]
  path: { file: 'VOICEXX_initstate.h5', dataset: 'krook_sink_constant_mask' }

krook_sink_constant_ftarget:
  dimensions: [ *vxd ]
  path: { file: 'VOICEXX_initstate.h5', dataset: 'krook_sink_constant_ftarget' }

kinetic_source_amplitude:
  dimensions: [ ]
  path: { file: 'VOICEXX_initstate.h5', dataset: 'kinetic_source_amplitude' }

kinetic_source_spatial_extent:
  dimensions: [ *xd ]
  path: { file: 'VOICEXX_initstate.h5', dataset: 'kinetic_source_spatial_extent' }

kinetic_source_velocity_shape:
  dimensions: [ *vxd ]
  path: { file: 'VOICEXX_initstate.h5', dataset: 'kinetic_source_velocity_shape' }
