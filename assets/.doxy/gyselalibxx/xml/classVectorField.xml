<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classVectorField" kind="class" language="C++" prot="public">
    <compoundname>VectorField</compoundname>
    <basecompoundref refid="classVectorFieldCommon" prot="public" virt="non-virtual">VectorFieldCommon&lt; Field&lt; ElementType, IdxRangeType, MemorySpace, LayoutStridedPolicy &gt;, VectorIndexSetType &gt;</basecompoundref>
    <includes refid="vector__field_8hpp" local="no">vector_field.hpp</includes>
    <templateparamlist>
      <param>
        <type>class ElementType</type>
      </param>
      <param>
        <type>class IdxRangeType</type>
      </param>
      <param>
        <type>class VectorIndexSetType</type>
      </param>
      <param>
        <type>class MemorySpace</type>
      </param>
      <param>
        <type>class LayoutStridedPolicy</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classVectorField_1a01f8bd0c5d7057416efd5bbade551210" prot="public" static="no">
        <type>Field&lt; ElementType, IdxRangeType, MemorySpace, LayoutStridedPolicy &gt;</type>
        <definition>using VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::field_type =  Field&lt;ElementType, IdxRangeType, MemorySpace, LayoutStridedPolicy&gt;</definition>
        <argsstring></argsstring>
        <name>field_type</name>
        <qualifiedname>VectorField::field_type</qualifiedname>
        <briefdescription>
<para>Type describing the object which can be extracted from this <ref refid="classVectorField" kindref="compound">VectorField</ref> using the get&lt;&gt; function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="83" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVectorField_1a558d1a564902f587f2be70fa119bedf5" prot="public" static="no">
        <type>typename base_type::element_type</type>
        <definition>using VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::element_type =  typename base_type::element_type</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <qualifiedname>VectorField::element_type</qualifiedname>
        <briefdescription>
<para>The type of an element in one of the Fields comprising the <ref refid="classVectorField" kindref="compound">VectorField</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="90" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVectorField_1a26a5aba14a99a5d32086df8e34c89131" prot="public" static="no">
        <type><ref refid="classVectorField" kindref="compound">VectorField</ref>&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;</type>
        <definition>using VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::span_type =  VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy&gt;</definition>
        <argsstring></argsstring>
        <name>span_type</name>
        <qualifiedname>VectorField::span_type</qualifiedname>
        <briefdescription>
<para>A type which can hold a modifiable reference to a <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>A type which can hold a reference to a <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>. If this object is modifiable then so is the span type. This is a DDC keyword used to make this class interchangeable with Field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="105" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVectorField_1a30f93eebda677a7328532e3bfd1464cb" prot="public" static="no">
        <type><ref refid="classVectorField" kindref="compound">VectorField</ref>&lt; const ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;</type>
        <definition>using VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::view_type =  VectorField&lt; const ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy&gt;</definition>
        <argsstring></argsstring>
        <name>view_type</name>
        <qualifiedname>VectorField::view_type</qualifiedname>
        <briefdescription>
<para>A type which can hold a constant reference to a <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>. This is a DDC keyword used to make this class interchangeable with Field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="115" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVectorField_1ae49ce7f9b3a24a4b22f7b247ae0da5bc" prot="public" static="no">
        <type>LayoutStridedPolicy</type>
        <definition>using VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::layout_type =  LayoutStridedPolicy</definition>
        <argsstring></argsstring>
        <name>layout_type</name>
        <qualifiedname>VectorField::layout_type</qualifiedname>
        <briefdescription>
<para>Type describing the way in which the data is laid out in the Field memory. </para>
        </briefdescription>
        <detaileddescription>
<para>Type describing the way in which the data is laid out in the Field memory. I.e. it describes whether it is contiguous or not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="128" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVectorField_1a48c0935cdc49c78dfd4ab49469f159bf" prot="public" static="no">
        <type>typename base_type::discrete_domain_type</type>
        <definition>using VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::discrete_domain_type =  typename base_type::discrete_domain_type</definition>
        <argsstring></argsstring>
        <name>discrete_domain_type</name>
        <qualifiedname>VectorField::discrete_domain_type</qualifiedname>
        <briefdescription>
<para>The type of the index range on which the field is defined. This is a DDC keyword used to make this class interchangeable with Field. In DDC IdxRange types are referred to as DiscreteDomain types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="135" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVectorField_1a9539aca5b29cc5ffac9e20897e131d95" prot="public" static="no">
        <type><ref refid="classVectorField_1a48c0935cdc49c78dfd4ab49469f159bf" kindref="member">discrete_domain_type</ref></type>
        <definition>using VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::index_range_type =  discrete_domain_type</definition>
        <argsstring></argsstring>
        <name>index_range_type</name>
        <qualifiedname>VectorField::index_range_type</qualifiedname>
        <briefdescription>
<para>The IdxRange on which the fields in this object are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="137" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVectorField_1a109ad5f0d78a34d2e51301018265a96b" prot="public" static="no">
        <type>typename field_type::memory_space</type>
        <definition>using VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::memory_space =  typename field_type::memory_space</definition>
        <argsstring></argsstring>
        <name>memory_space</name>
        <qualifiedname>VectorField::memory_space</qualifiedname>
        <briefdescription>
<para>The type of the memory space where the field is saved (CPU vs GPU). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="142" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classVectorField_1a4651b8ab546140871bed855f0eaa2549" prot="private" static="no">
        <type><ref refid="classVectorFieldCommon" kindref="compound">VectorFieldCommon</ref>&lt; <ref refid="classVectorField_1a01f8bd0c5d7057416efd5bbade551210" kindref="member">field_type</ref>, VectorIndexSetType &gt;</type>
        <definition>using VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::base_type =  VectorFieldCommon&lt;field_type, VectorIndexSetType&gt;</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <qualifiedname>VectorField::base_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="86" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classVectorField_1a1eb942e92bf62a37ba2acc657cfb12f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class VectorField</definition>
        <argsstring></argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorField" kindref="compound">VectorField</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="146" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classVectorField_1a41ca335a210ce90086745e968e0fb999" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>class Allocator</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr</type>
        <definition>KOKKOS_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(VectorFieldMem&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; &amp;other, std::index_sequence&lt; Is... &gt; const &amp;) noexcept</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="149" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="149" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a5a8f0b8e0054c95e55fb0750a80a043b" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
          <param>
            <type>class SFINAEElementType</type>
            <defval>ElementType</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::is_const_v&lt;SFINAEElementType&gt;&gt;</defval>
          </param>
          <param>
            <type>class Allocator</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr</type>
        <definition>KOKKOS_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(VectorFieldMem&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; const &amp;other, std::index_sequence&lt; Is... &gt; const &amp;) noexcept</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classVectorField" kindref="compound">VectorField</ref> from a <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>, yields a new view to the same data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref> to view </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="167" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="167" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a760da7060fd373be34d0f3e68be5b17e" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr</type>
        <definition>KOKKOS_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(VectorField&lt; OElementType, index_range_type, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt; const &amp;other, std::index_sequence&lt; Is... &gt; const &amp;) noexcept</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorField" kindref="compound">VectorField</ref>&lt; OElementType, <ref refid="classVectorField_1a9539aca5b29cc5ffac9e20897e131d95" kindref="member">index_range_type</ref>, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classVectorField" kindref="compound">VectorField</ref> by copy of a chunk, yields a new view to the same data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classVectorField" kindref="compound">VectorField</ref> to move </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="179" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="179" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1ae13cea18185c70ae4b1ee8ecd967c7a6" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SliceType</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::get_slice</definition>
        <argsstring>(SliceType const &amp;slice_spec, std::index_sequence&lt; Is... &gt; const &amp;)</argsstring>
        <name>get_slice</name>
        <qualifiedname>VectorField::get_slice</qualifiedname>
        <param>
          <type>SliceType const &amp;</type>
          <declname>slice_spec</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="193" column="20" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="193" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1ab0bbdf046698b01aff1e966d75c789e6" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ODDims</declname>
            <defname>ODDims</defname>
          </param>
          <param>
            <type>typename <ref refid="structT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>T...</type>
            <declname>ints</declname>
            <defname>ints</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION <ref refid="classVectorField_1a558d1a564902f587f2be70fa119bedf5" kindref="member">element_type</ref> const</type>
        <definition>KOKKOS_FUNCTION element_type const VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::operator()</definition>
        <argsstring>(Idx&lt; ODDims... &gt; const &amp;delems, std::integer_sequence&lt; T, ints... &gt;) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>VectorField::operator()</qualifiedname>
        <param>
          <type>Idx&lt; ODDims... &gt; const &amp;</type>
          <declname>delems</declname>
        </param>
        <param>
          <type>std::integer_sequence&lt; <ref refid="structT" kindref="compound">T</ref>, ints... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Element access using a multi-dimensional Idx <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delems</parametername>
</parameternamelist>
<parameterdescription>
<para>discrete coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>copy of this element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="212" column="40" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="212" bodyend="217"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classVectorField_1a59017a80e0e8dd2617f45938848fdcfa" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION constexpr</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>()=default</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <briefdescription>
<para>Empty <ref refid="classVectorField" kindref="compound">VectorField</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="221" column="41"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a2b36131fbfab447bcdc402fc91cf1131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::~VectorField</definition>
        <argsstring>()=default</argsstring>
        <name>~VectorField</name>
        <qualifiedname>VectorField::~VectorField</qualifiedname>
        <briefdescription>
<para><ref refid="classVectorField" kindref="compound">VectorField</ref> destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="224" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1aa8eec4895a4014560afa7dda745c2dda" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION constexpr</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(VectorField const &amp;other)=default</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorField" kindref="compound">VectorField</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classVectorField" kindref="compound">VectorField</ref> by copy, yields a new view to the same data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classVectorField" kindref="compound">VectorField</ref> to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="229" column="41"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a9447492b20bf7116d1d7695faa2321af" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION constexpr</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(VectorField &amp;&amp;other)=default</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorField" kindref="compound">VectorField</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classVectorField" kindref="compound">VectorField</ref> by move <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classVectorField" kindref="compound">VectorField</ref> to move </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="234" column="41"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a3928c161f1d696e2d304fc17f3335a80" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>class Allocator</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr</type>
        <definition>KOKKOS_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(VectorFieldMem&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; &amp;other) noexcept</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classVectorField" kindref="compound">VectorField</ref> from a <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>, yields a new view to the same data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref> to view </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="240" column="40" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="240" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1aac16c73a23faf2699217c48ecfb0c775" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>class SFINAEElementType</type>
            <defval>ElementType</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::is_const_v&lt;SFINAEElementType&gt;&gt;</defval>
          </param>
          <param>
            <type>class Allocator</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr</type>
        <definition>KOKKOS_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(VectorFieldMem&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; const &amp;other) noexcept</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classVectorField" kindref="compound">VectorField</ref> from a <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>, yields a new view to the same data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref> to view </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="256" column="40" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="256" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1ac4b283009bf471c66ff408b5bf4650d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>class Allocator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(VectorFieldMem&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; &amp;&amp;other)=delete</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref>&lt; OElementType, IdxRangeType, VectorIndexSetType, Allocator &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="264" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1acbc5b648ae6509375d9002447c8f1652" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr</type>
        <definition>KOKKOS_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(VectorField&lt; OElementType, index_range_type, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt; const &amp;other) noexcept</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorField" kindref="compound">VectorField</ref>&lt; OElementType, <ref refid="classVectorField_1a9539aca5b29cc5ffac9e20897e131d95" kindref="member">index_range_type</ref>, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classVectorField" kindref="compound">VectorField</ref> by copy of a chunk, yields a new view to the same data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classVectorField" kindref="compound">VectorField</ref> to move </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="271" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="271" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a302b90ce88e5f5b64c08f7734284c387" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>OElementType</declname>
            <defname>OElementType</defname>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;                    std::conjunction_v&lt;std::is_same&lt;OElementType, ElementType&gt;...&gt;&gt;</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;sizeof...(OElementType) == base_type::NDims&gt;</defval>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(index_range_type const &amp;idx_range, OElementType *... ptr)</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type><ref refid="classVectorField_1a9539aca5b29cc5ffac9e20897e131d95" kindref="member">index_range_type</ref> const &amp;</type>
          <declname>idx_range</declname>
        </param>
        <param>
          <type>OElementType *...</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classVectorField" kindref="compound">VectorField</ref> from scratch <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>the allocation pointer to the data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>the index range that sustains the view </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="290" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1ad64ff813a3b5d71388b2f27f1be99e30" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>FieldType</declname>
            <defname>FieldType</defname>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::conjunction_v&lt;std::is_same&lt;FieldType, <ref refid="classVectorField_1a01f8bd0c5d7057416efd5bbade551210" kindref="member">field_type</ref>&gt;...&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr</type>
        <definition>KOKKOS_FUNCTION constexpr VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::VectorField</definition>
        <argsstring>(FieldType... fields)</argsstring>
        <name>VectorField</name>
        <qualifiedname>VectorField::VectorField</qualifiedname>
        <param>
          <type>FieldType...</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classVectorField" kindref="compound">VectorField</ref> containing references to Field. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fields</parametername>
</parameternamelist>
<parameterdescription>
<para>The Fields. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="301" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="301" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a9c798891c4ee5f16d899e61e5353e30e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION constexpr <ref refid="classVectorField" kindref="compound">VectorField</ref> &amp;</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION constexpr VectorField &amp; VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::operator=</definition>
        <argsstring>(VectorField const &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>VectorField::operator=</qualifiedname>
        <param>
          <type><ref refid="classVectorField" kindref="compound">VectorField</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy-assigns a new value to this <ref refid="classVectorField" kindref="compound">VectorField</ref>, yields a new view to the same data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classVectorField" kindref="compound">VectorField</ref> to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>*this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="309" column="53"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1ab3ccb08f4e0e126273e19f8a25fe5d3a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION constexpr <ref refid="classVectorField" kindref="compound">VectorField</ref> &amp;</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION constexpr VectorField &amp; VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::operator=</definition>
        <argsstring>(VectorField &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>VectorField::operator=</qualifiedname>
        <param>
          <type><ref refid="classVectorField" kindref="compound">VectorField</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move-assigns a new value to this <ref refid="classVectorField" kindref="compound">VectorField</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classVectorField" kindref="compound">VectorField</ref> to move </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>*this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="315" column="53"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a7d1c98d30d0a835f4cb2638fd71f90f0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classVectorField_1a30f93eebda677a7328532e3bfd1464cb" kindref="member">view_type</ref></type>
        <definition>constexpr view_type VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::span_cview</definition>
        <argsstring>() const</argsstring>
        <name>span_cview</name>
        <qualifiedname>VectorField::span_cview</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a constant reference to the vector field referred to by this vector field span.</para>
<para>This function is designed to match the equivalent function in DDC. In Gysela it should not be called directly. Instead the global function get_const_field should be used.</para>
<para><simplesect kind="return"><para>A constant reference to the vector field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="325" column="25" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a6fc01406c2f71d080a0b2fc04810af33" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classVectorField_1a26a5aba14a99a5d32086df8e34c89131" kindref="member">span_type</ref></type>
        <definition>constexpr span_type VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::span_view</definition>
        <argsstring>() const</argsstring>
        <name>span_view</name>
        <qualifiedname>VectorField::span_view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a modifiable reference to the vector field referred to by this vector field span.</para>
<para>This function is designed to match the equivalent function in DDC. In Gysela it should not be called directly. Instead the global function get_field should be used.</para>
<para><simplesect kind="return"><para>A constant reference to the vector field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="338" column="25" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a20a0cf6842e82d0c5ac04da69ac984e7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ODDims</declname>
            <defname>ODDims</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION <ref refid="classVectorField_1a558d1a564902f587f2be70fa119bedf5" kindref="member">element_type</ref> const</type>
        <definition>KOKKOS_FUNCTION element_type const VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::operator()</definition>
        <argsstring>(ddc::DiscreteElement&lt; ODDims &gt; const &amp;... delems) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>VectorField::operator()</qualifiedname>
        <param>
          <type>ddc::DiscreteElement&lt; ODDims &gt; const &amp;...</type>
          <declname>delems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Element access using a list of Idxs <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delems</parametername>
</parameternamelist>
<parameterdescription>
<para>1D discrete coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>copy of this element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="348" column="40" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="348" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a5f40f7ef7598f56d57be677682224530" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ODDims</declname>
            <defname>ODDims</defname>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;sizeof...(ODDims) != 1&gt;</defval>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION <ref refid="classVectorField_1a558d1a564902f587f2be70fa119bedf5" kindref="member">element_type</ref> const</type>
        <definition>KOKKOS_FUNCTION element_type const VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::operator()</definition>
        <argsstring>(Idx&lt; ODDims... &gt; const &amp;delems) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>VectorField::operator()</qualifiedname>
        <param>
          <type>Idx&lt; ODDims... &gt; const &amp;</type>
          <declname>delems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Element access using a multi-dimensional Idx <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delems</parametername>
</parameternamelist>
<parameterdescription>
<para>discrete coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>copy of this element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="361" column="40" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a91884e95ae7f44dccbd595274f470426" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>QueryDDims</declname>
            <defname>QueryDDims</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::operator[]</definition>
        <argsstring>(Idx&lt; QueryDDims... &gt; const &amp;slice_spec)</argsstring>
        <name>operator[]</name>
        <qualifiedname>VectorField::operator[]</qualifiedname>
        <param>
          <type>Idx&lt; QueryDDims... &gt; const &amp;</type>
          <declname>slice_spec</declname>
        </param>
        <briefdescription>
<para>Slice out some dimensions. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref> on the reduced index range which is obtained by indexing the dimensions QueryDDims at the position slice_spec.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">slice_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>The slice describing the index range of interest.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the vector field on the sliced index range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="378" column="20" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1ad28c3e424b784451e334e370aee4568c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>QueryDDims</declname>
            <defname>QueryDDims</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::operator[]</definition>
        <argsstring>(IdxRange&lt; QueryDDims... &gt; const &amp;oidx_range)</argsstring>
        <name>operator[]</name>
        <qualifiedname>VectorField::operator[]</qualifiedname>
        <param>
          <type>IdxRange&lt; QueryDDims... &gt; const &amp;</type>
          <declname>oidx_range</declname>
        </param>
        <briefdescription>
<para>Slice out some dimensions. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="classVectorFieldMem" kindref="compound">VectorFieldMem</ref> on the reduced index range passed as an argument.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">oidx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range of interest.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the vector field on the sliced index range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="393" column="20" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classVectorField_1a32ae690f71304ab13847d8f80e42e576" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class QueryTag</type>
          </param>
        </templateparamlist>
        <type>constexpr chunk_span_type</type>
        <definition>constexpr chunk_span_type VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;::get</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get</name>
        <qualifiedname>VectorField::get</qualifiedname>
        <briefdescription>
<para>Get the Field describing the component in the QueryTag direction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The field in the specified direction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="404" column="38" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="404" bodyend="408"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class which holds multiple (scalar) fields in order to represent a vector field. </para>
    </briefdescription>
    <detaileddescription>
<para>Pre-declaration of <ref refid="classVectorField" kindref="compound">VectorField</ref>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ElementType</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type of a scalar element of the vector field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IdxRangeType</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VectorIndexSetType</parametername>
</parameternamelist>
<parameterdescription>
<para>A VectorIndexSet describing the dimensions described by the scalar elements of a vector field element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MemorySpace</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory space (CPU/GPU). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LayoutStridedPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory layout. See DDC. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;</label>
        <link refid="classVectorField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VectorFieldCommon&lt; Field&lt; ElementType, IdxRangeType, MemorySpace, LayoutStridedPolicy &gt;, VectorIndexSetType &gt;</label>
        <link refid="classVectorFieldCommon"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>VectorField&lt; ElementType, IdxRangeType, VectorIndexSetType, MemorySpace, LayoutStridedPolicy &gt;</label>
        <link refid="classVectorField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VectorFieldCommon&lt; Field&lt; ElementType, IdxRangeType, MemorySpace, LayoutStridedPolicy &gt;, VectorIndexSetType &gt;</label>
        <link refid="classVectorFieldCommon"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" line="74" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_field.hpp" bodystart="78" bodyend="409"/>
    <listofallmembers>
      <member refid="classVectorField_1a4651b8ab546140871bed855f0eaa2549" prot="private" virt="non-virtual"><scope>VectorField</scope><name>base_type</name></member>
      <member refid="classVectorField_1a48c0935cdc49c78dfd4ab49469f159bf" prot="public" virt="non-virtual"><scope>VectorField</scope><name>discrete_domain_type</name></member>
      <member refid="classVectorField_1a558d1a564902f587f2be70fa119bedf5" prot="public" virt="non-virtual"><scope>VectorField</scope><name>element_type</name></member>
      <member refid="classVectorField_1a01f8bd0c5d7057416efd5bbade551210" prot="public" virt="non-virtual"><scope>VectorField</scope><name>field_type</name></member>
      <member refid="classVectorField_1a32ae690f71304ab13847d8f80e42e576" prot="public" virt="non-virtual"><scope>VectorField</scope><name>get</name></member>
      <member refid="classVectorField_1ae13cea18185c70ae4b1ee8ecd967c7a6" prot="private" virt="non-virtual"><scope>VectorField</scope><name>get_slice</name></member>
      <member refid="classVectorField_1a9539aca5b29cc5ffac9e20897e131d95" prot="public" virt="non-virtual"><scope>VectorField</scope><name>index_range_type</name></member>
      <member refid="classVectorField_1ae49ce7f9b3a24a4b22f7b247ae0da5bc" prot="public" virt="non-virtual"><scope>VectorField</scope><name>layout_type</name></member>
      <member refid="classVectorField_1a109ad5f0d78a34d2e51301018265a96b" prot="public" virt="non-virtual"><scope>VectorField</scope><name>memory_space</name></member>
      <member refid="classVectorField_1ab0bbdf046698b01aff1e966d75c789e6" prot="private" virt="non-virtual"><scope>VectorField</scope><name>operator()</name></member>
      <member refid="classVectorField_1a20a0cf6842e82d0c5ac04da69ac984e7" prot="public" virt="non-virtual"><scope>VectorField</scope><name>operator()</name></member>
      <member refid="classVectorField_1a5f40f7ef7598f56d57be677682224530" prot="public" virt="non-virtual"><scope>VectorField</scope><name>operator()</name></member>
      <member refid="classVectorField_1a9c798891c4ee5f16d899e61e5353e30e" prot="public" virt="non-virtual"><scope>VectorField</scope><name>operator=</name></member>
      <member refid="classVectorField_1ab3ccb08f4e0e126273e19f8a25fe5d3a" prot="public" virt="non-virtual"><scope>VectorField</scope><name>operator=</name></member>
      <member refid="classVectorField_1a91884e95ae7f44dccbd595274f470426" prot="public" virt="non-virtual"><scope>VectorField</scope><name>operator[]</name></member>
      <member refid="classVectorField_1ad28c3e424b784451e334e370aee4568c" prot="public" virt="non-virtual"><scope>VectorField</scope><name>operator[]</name></member>
      <member refid="classVectorField_1a7d1c98d30d0a835f4cb2638fd71f90f0" prot="public" virt="non-virtual"><scope>VectorField</scope><name>span_cview</name></member>
      <member refid="classVectorField_1a26a5aba14a99a5d32086df8e34c89131" prot="public" virt="non-virtual"><scope>VectorField</scope><name>span_type</name></member>
      <member refid="classVectorField_1a6fc01406c2f71d080a0b2fc04810af33" prot="public" virt="non-virtual"><scope>VectorField</scope><name>span_view</name></member>
      <member refid="classVectorField_1a1eb942e92bf62a37ba2acc657cfb12f6" prot="private" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1a41ca335a210ce90086745e968e0fb999" prot="private" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1a5a8f0b8e0054c95e55fb0750a80a043b" prot="private" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1a760da7060fd373be34d0f3e68be5b17e" prot="private" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1a59017a80e0e8dd2617f45938848fdcfa" prot="public" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1aa8eec4895a4014560afa7dda745c2dda" prot="public" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1a9447492b20bf7116d1d7695faa2321af" prot="public" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1a3928c161f1d696e2d304fc17f3335a80" prot="public" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1aac16c73a23faf2699217c48ecfb0c775" prot="public" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1ac4b283009bf471c66ff408b5bf4650d6" prot="public" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1acbc5b648ae6509375d9002447c8f1652" prot="public" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1a302b90ce88e5f5b64c08f7734284c387" prot="public" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1ad64ff813a3b5d71388b2f27f1be99e30" prot="public" virt="non-virtual"><scope>VectorField</scope><name>VectorField</name></member>
      <member refid="classVectorField_1a30f93eebda677a7328532e3bfd1464cb" prot="public" virt="non-virtual"><scope>VectorField</scope><name>view_type</name></member>
      <member refid="classVectorField_1a2b36131fbfab447bcdc402fc91cf1131" prot="public" virt="non-virtual"><scope>VectorField</scope><name>~VectorField</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
