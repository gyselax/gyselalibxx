<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacegslx_1_1error" kind="namespace" language="C++">
    <compoundname>gslx::error</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="assert_8cpp_1a6ed39ca4c717fcedac91a69fe5d12438" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gslx::error::PresentErrorExplanation</definition>
        <argsstring>(const char *a_category, const char *an_explanation) noexcept</argsstring>
        <name>PresentErrorExplanation</name>
        <qualifiedname>gslx::error::PresentErrorExplanation</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>a_category</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>an_explanation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/utils/assert.cpp" line="8" column="6" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/utils/assert.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="assert_8cpp_1ae96e29834a9be8b4964acd9edaa37989" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gslx::error::AssertionFailure</definition>
        <argsstring>(const char *the_message) noexcept</argsstring>
        <name>AssertionFailure</name>
        <qualifiedname>gslx::error::AssertionFailure</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>the_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/utils/assert.cpp" line="13" column="6" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/utils/assert.cpp" bodystart="13" bodyend="21" declfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/utils/assert.hpp" declline="38" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/utils/assert.cpp" line="6" column="1"/>
  </compounddef>
</doxygen>
