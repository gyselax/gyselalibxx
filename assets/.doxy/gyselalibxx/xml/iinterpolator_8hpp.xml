<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="iinterpolator_8hpp" kind="file" language="C++">
    <compoundname>iinterpolator.hpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">ddc/ddc.hpp</includes>
    <includes local="no">ddc/kernels/splines/deriv.hpp</includes>
    <includes refid="ddc__aliases_8hpp" local="yes">ddc_aliases.hpp</includes>
    <includes refid="ddc__helper_8hpp" local="yes">ddc_helper.hpp</includes>
    <includedby refid="bsl__advection__1d_8hpp" local="yes">/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/bsl_advection_1d.hpp</includedby>
    <includedby refid="bsl__advection__vx_8hpp" local="yes">/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/bsl_advection_vx.hpp</includedby>
    <includedby refid="bsl__advection__x_8hpp" local="yes">/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/bsl_advection_x.hpp</includedby>
    <includedby refid="Lagrange__interpolator_8hpp" local="yes">/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/Lagrange_interpolator.hpp</includedby>
    <includedby refid="spline__interpolator_8hpp" local="yes">/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/spline_interpolator.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp</label>
        <link refid="iinterpolator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ddc_aliases.hpp</label>
        <link refid="ddc__aliases_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ddc_helper.hpp</label>
        <link refid="ddc__helper_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>ddc/ddc.hpp</label>
      </node>
      <node id="6">
        <label>ddc/kernels/splines.hpp</label>
      </node>
      <node id="4">
        <label>ddc/kernels/splines/deriv.hpp</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/bsl_advection_1d.hpp</label>
        <link refid="bsl__advection__1d_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/bsl_advection_vx.hpp</label>
        <link refid="bsl__advection__vx_8hpp_source"/>
      </node>
      <node id="5">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/bsl_advection_x.hpp</label>
        <link refid="bsl__advection__x_8hpp_source"/>
      </node>
      <node id="3">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXY/time_integration/predcorr_RK2.hpp</label>
        <link refid="predcorr__RK2_8hpp_source"/>
      </node>
      <node id="6">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/Lagrange_interpolator.hpp</label>
        <link refid="Lagrange__interpolator_8hpp_source"/>
      </node>
      <node id="1">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp</label>
        <link refid="iinterpolator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/spline_interpolator.hpp</label>
        <link refid="spline__interpolator_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structinterpolator__on__idx__range" prot="public">interpolator_on_idx_range</innerclass>
    <innerclass refid="structinterpolator__on__idx__range_3_01Interp_00_01GridInterp_00_01IdxRange_3_01Grid1D_8_8_8_01_4_01_4" prot="public">interpolator_on_idx_range&lt; Interp, GridInterp, IdxRange&lt; Grid1D... &gt; &gt;</innerclass>
    <innerclass refid="classIInterpolator" prot="public">IInterpolator</innerclass>
    <innerclass refid="classIPreallocatableInterpolator" prot="public">IPreallocatableInterpolator</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="iinterpolator_8hpp_1ab7bc57a697bacb3c9b73b49f6fe94b64" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>template&lt; class... &gt; class</type>
            <declname>Interp</declname>
            <defname>Interp</defname>
          </param>
          <param>
            <type>class GridInterp</type>
          </param>
          <param>
            <type>class IdxRange</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structinterpolator__on__idx__range" kindref="compound">interpolator_on_idx_range</ref>&lt; Interp, GridInterp, IdxRange &gt;::type</type>
        <definition>using interpolator_on_idx_range_t =  typename interpolator_on_idx_range&lt;Interp, GridInterp, IdxRange&gt;::type</definition>
        <argsstring></argsstring>
        <name>interpolator_on_idx_range_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A template function which returns an interpolation type.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Interp</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpolator class being built. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GridInterp</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension along which the operator will interpolate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IdxRange</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range on which the data being interpolated is defined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" line="41" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ddc/ddc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ddc/kernels/splines/deriv.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ddc_aliases.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ddc_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Generalise<sp/>(IDimI<sp/>-&gt;<sp/>Tags...)<sp/>and<sp/>make<sp/>it<sp/>usable<sp/>for<sp/>all<sp/>Gysela<sp/>operators<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Interp,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GridInterp,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IdxRange&gt;</highlight></codeline>
<codeline lineno="15" refid="structinterpolator__on__idx__range" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinterpolator__on__idx__range" kindref="compound">interpolator_on_idx_range</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Interp,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GridInterp,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Grid1D&gt;</highlight></codeline>
<codeline lineno="27" refid="structinterpolator__on__idx__range_3_01Interp_00_01GridInterp_00_01IdxRange_3_01Grid1D_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinterpolator__on__idx__range" kindref="compound">interpolator_on_idx_range</ref>&lt;Interp,<sp/>GridInterp,<sp/>IdxRange&lt;Grid1D...&gt;&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="structinterpolator__on__idx__range_3_01Interp_00_01GridInterp_00_01IdxRange_3_01Grid1D_8_8_8_01_4_01_4_1a3d7bd6ff70bbce6361c363dd77cc76bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structinterpolator__on__idx__range_3_01Interp_00_01GridInterp_00_01IdxRange_3_01Grid1D_8_8_8_01_4_01_4_1a3d7bd6ff70bbce6361c363dd77cc76bd" kindref="member">type</ref><sp/>=<sp/>Interp&lt;GridInterp,<sp/>Grid1D...&gt;;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Interp,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GridInterp,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IdxRange&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">interpolator_on_idx_range_t<sp/>=</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structinterpolator__on__idx__range" kindref="compound">interpolator_on_idx_range&lt;Interp, GridInterp, IdxRange&gt;::type</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GridInterp,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Grid1D&gt;</highlight></codeline>
<codeline lineno="52" refid="classIInterpolator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classIInterpolator" kindref="compound">IInterpolator</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classIInterpolator" kindref="compound">~IInterpolator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classIInterpolator_1add959ac890d1a041cc399eb9a694e8f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classIInterpolator_1add959ac890d1a041cc399eb9a694e8f3" kindref="member">deriv_type</ref><sp/>=<sp/>ddc::Deriv&lt;typename<sp/>GridInterp::continuous_dimension_type&gt;;</highlight></codeline>
<codeline lineno="60" refid="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" kindref="member">batched_derivs_idx_range_type</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ddc::replace_dim_of_t&lt;IdxRange&lt;Grid1D...&gt;,<sp/>GridInterp,<sp/><ref refid="classIInterpolator_1add959ac890d1a041cc399eb9a694e8f3" kindref="member">deriv_type</ref>&gt;;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classIInterpolator_1af664c9db9a794fb1f199ff31f8673bf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" kindref="member">batched_derivs_idx_range_type</ref><sp/><ref refid="classIInterpolator_1af664c9db9a794fb1f199ff31f8673bf8" kindref="member">batched_derivs_idx_range_xmin</ref>(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdxRange&lt;Grid1D...&gt;<sp/>idx_range)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classIInterpolator_1a14f07a9a9cd43939de6acd999d25c195" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" kindref="member">batched_derivs_idx_range_type</ref><sp/><ref refid="classIInterpolator_1a14f07a9a9cd43939de6acd999d25c195" kindref="member">batched_derivs_idx_range_xmax</ref>(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdxRange&lt;Grid1D...&gt;<sp/>idx_range)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classIInterpolator_1a83d8113fe207f0d87a240f6ae3f99498" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Field&lt;double,<sp/>IdxRange&lt;Grid1D...&gt;&gt;<sp/><ref refid="classIInterpolator_1a83d8113fe207f0d87a240f6ae3f99498" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Field&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>IdxRange&lt;Grid1D...&gt;&gt;<sp/>inout_data,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Field&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Coord&lt;typename<sp/>GridInterp::continuous_dimension_type&gt;,<sp/>IdxRange&lt;Grid1D...&gt;&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinates,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;Field&lt;double<sp/>const,<sp/>batched_derivs_idx_range_type&gt;&gt;<sp/>derivs_xmin</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;Field&lt;double<sp/>const,<sp/>batched_derivs_idx_range_type&gt;&gt;<sp/>derivs_xmax</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GridInterp,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Grid1D&gt;</highlight></codeline>
<codeline lineno="133" refid="classIPreallocatableInterpolator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classIPreallocatableInterpolator" kindref="compound">IPreallocatableInterpolator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classIInterpolator" kindref="compound">IInterpolator</ref>&lt;GridInterp,<sp/>Grid1D...&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIPreallocatableInterpolator" kindref="compound">~IPreallocatableInterpolator</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classIPreallocatableInterpolator_1a1cc1863346091416a12a0e3ef210748a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classIPreallocatableInterpolator_1a1cc1863346091416a12a0e3ef210748a" kindref="member">deriv_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classIInterpolator" kindref="compound">IInterpolator</ref>&lt;GridInterp,<sp/>Grid1D...&gt;<ref refid="classIPreallocatableInterpolator_1a1cc1863346091416a12a0e3ef210748a" kindref="member">::deriv_type</ref>;</highlight></codeline>
<codeline lineno="141" refid="classIPreallocatableInterpolator_1a84c8637a225b4aa749251fb6b7217783" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classIPreallocatableInterpolator_1a84c8637a225b4aa749251fb6b7217783" kindref="member">batched_derivs_idx_range_type</ref><sp/>=</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classIInterpolator" kindref="compound">IInterpolator</ref>&lt;GridInterp,<sp/>Grid1D...&gt;<ref refid="classIPreallocatableInterpolator_1a84c8637a225b4aa749251fb6b7217783" kindref="member">::batched_derivs_idx_range_type</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classIPreallocatableInterpolator_1a20012bae921142b3c686f6a4a615e23a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;<ref refid="classIInterpolator" kindref="compound">IInterpolator</ref>&lt;GridInterp,<sp/>Grid1D...&gt;&gt;<sp/><ref refid="classIPreallocatableInterpolator_1a20012bae921142b3c686f6a4a615e23a" kindref="member">preallocate</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classIPreallocatableInterpolator_1a737773f79bd66f394f19a6b7d8045b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIPreallocatableInterpolator_1a84c8637a225b4aa749251fb6b7217783" kindref="member">batched_derivs_idx_range_type</ref><sp/><ref refid="classIPreallocatableInterpolator_1a737773f79bd66f394f19a6b7d8045b52" kindref="member">batched_derivs_idx_range_xmin</ref>(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdxRange&lt;Grid1D...&gt;<sp/>idx_range)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="classIPreallocatableInterpolator_1a20012bae921142b3c686f6a4a615e23a" kindref="member">preallocate</ref>()).batched_derivs_idx_range_xmin(idx_range);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classIPreallocatableInterpolator_1aa5f6e697f47d2e64a7e079a7e0ac9745" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIPreallocatableInterpolator_1a84c8637a225b4aa749251fb6b7217783" kindref="member">batched_derivs_idx_range_type</ref><sp/><ref refid="classIPreallocatableInterpolator_1aa5f6e697f47d2e64a7e079a7e0ac9745" kindref="member">batched_derivs_idx_range_xmax</ref>(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdxRange&lt;Grid1D...&gt;<sp/>idx_range)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="182"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="classIPreallocatableInterpolator_1a20012bae921142b3c686f6a4a615e23a" kindref="member">preallocate</ref>()).batched_derivs_idx_range_xmax(idx_range);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classIPreallocatableInterpolator_1acf51b8cbb5a54ff83ee67c20f538e7e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Field&lt;double,<sp/>IdxRange&lt;Grid1D...&gt;&gt;<sp/><ref refid="classIPreallocatableInterpolator_1acf51b8cbb5a54ff83ee67c20f538e7e3" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Field&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>IdxRange&lt;Grid1D...&gt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>inout_data,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Field&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Coord&lt;typename<sp/>GridInterp::continuous_dimension_type&gt;,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdxRange&lt;Grid1D...&gt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coordinates,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;Field&lt;double<sp/>const,<sp/>batched_derivs_idx_range_type&gt;&gt;<sp/>derivs_xmin</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;Field&lt;double<sp/>const,<sp/>batched_derivs_idx_range_type&gt;&gt;<sp/>derivs_xmax</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="208"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="classIPreallocatableInterpolator_1a20012bae921142b3c686f6a4a615e23a" kindref="member">preallocate</ref>())(inout_data,<sp/>coordinates);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp"/>
  </compounddef>
</doxygen>
