<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classToroidalToCylindrical" kind="class" language="C++" prot="public">
    <compoundname>ToroidalToCylindrical</compoundname>
    <includes refid="toroidal__to__cylindrical_8hpp" local="no">toroidal_to_cylindrical.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Curvilinear2DToCartesian</type>
      </param>
      <param>
        <type>class Zeta</type>
      </param>
      <param>
        <type>class Phi</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a2ba3550e813d634fe3906772d7ae4123" prot="public" static="no">
        <type>typename Curvilinear2DToCartesian::cartesian_tag_x</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::cylindrical_tag_R =  typename Curvilinear2DToCartesian::cartesian_tag_x</definition>
        <argsstring></argsstring>
        <name>cylindrical_tag_R</name>
        <qualifiedname>ToroidalToCylindrical::cylindrical_tag_R</qualifiedname>
        <briefdescription>
<para>Indicate the first physical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="26" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1aa349487d3ca8a2d9b27bbd514d4a7ef1" prot="public" static="no">
        <type>typename Curvilinear2DToCartesian::cartesian_tag_y</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::cylindrical_tag_Z =  typename Curvilinear2DToCartesian::cartesian_tag_y</definition>
        <argsstring></argsstring>
        <name>cylindrical_tag_Z</name>
        <qualifiedname>ToroidalToCylindrical::cylindrical_tag_Z</qualifiedname>
        <briefdescription>
<para>Indicate the second physical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="28" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a6d68f9f6d0c199982bc689102d60aedb" prot="public" static="no">
        <type>Zeta</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::cylindrical_tag_Zeta =  Zeta</definition>
        <argsstring></argsstring>
        <name>cylindrical_tag_Zeta</name>
        <qualifiedname>ToroidalToCylindrical::cylindrical_tag_Zeta</qualifiedname>
        <briefdescription>
<para>Indicate the third physical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="30" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a9b335bee1c6524190b5618445423f947" prot="public" static="no">
        <type>typename Curvilinear2DToCartesian::curvilinear_tag_r</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::toroidal_tag_rho =  typename Curvilinear2DToCartesian::curvilinear_tag_r</definition>
        <argsstring></argsstring>
        <name>toroidal_tag_rho</name>
        <qualifiedname>ToroidalToCylindrical::toroidal_tag_rho</qualifiedname>
        <briefdescription>
<para>Indicate the first logical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="33" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a9ff2dd518c6e78208661c7e7efa2e6f7" prot="public" static="no">
        <type>typename Curvilinear2DToCartesian::curvilinear_tag_theta</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::toroidal_tag_theta =  typename Curvilinear2DToCartesian::curvilinear_tag_theta</definition>
        <argsstring></argsstring>
        <name>toroidal_tag_theta</name>
        <qualifiedname>ToroidalToCylindrical::toroidal_tag_theta</qualifiedname>
        <briefdescription>
<para>Indicate the second logical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="35" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1aa3b5d507e4d1fd654579609d361fd0b1" prot="public" static="no">
        <type>Phi</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::toroidal_tag_phi =  Phi</definition>
        <argsstring></argsstring>
        <name>toroidal_tag_phi</name>
        <qualifiedname>ToroidalToCylindrical::toroidal_tag_phi</qualifiedname>
        <briefdescription>
<para>Indicate the third logical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="37" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a447e9e5af69a413ae8b49f1e1d5f0121" prot="public" static="no">
        <type>Coord&lt; Rho, <ref refid="structTheta" kindref="compound">Theta</ref>, Phi &gt;</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::CoordArg =  Coord&lt;Rho, Theta, Phi&gt;</definition>
        <argsstring></argsstring>
        <name>CoordArg</name>
        <qualifiedname>ToroidalToCylindrical::CoordArg</qualifiedname>
        <briefdescription>
<para>The type of the argument of the function described by this mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="55" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1aaa80750ea092a63a11fab80d5e0054fa" prot="public" static="no">
        <type>Coord&lt; <ref refid="structR" kindref="compound">R</ref>, Z, Zeta &gt;</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::CoordResult =  Coord&lt;R, Z, Zeta&gt;</definition>
        <argsstring></argsstring>
        <name>CoordResult</name>
        <qualifiedname>ToroidalToCylindrical::CoordResult</qualifiedname>
        <briefdescription>
<para>The type of the result of the function described by this mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="57" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a749485e7afd76637d92fae197443cdf4" prot="private" static="no">
        <type><ref refid="classToroidalToCylindrical_1a2ba3550e813d634fe3906772d7ae4123" kindref="member">cylindrical_tag_R</ref></type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::R =  cylindrical_tag_R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>ToroidalToCylindrical::R</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="40" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a5aee53516c1125323be46ba11c9b028b" prot="private" static="no">
        <type>typename <ref refid="structR_1a35006d7e5031a9bd48e5af62534c421f" kindref="member">R::Dual</ref></type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::R_cov =  typename R::Dual</definition>
        <argsstring></argsstring>
        <name>R_cov</name>
        <qualifiedname>ToroidalToCylindrical::R_cov</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="41" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a0541d74eb00f079baaa4831f31dfcee7" prot="private" static="no">
        <type><ref refid="classToroidalToCylindrical_1aa349487d3ca8a2d9b27bbd514d4a7ef1" kindref="member">cylindrical_tag_Z</ref></type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::Z =  cylindrical_tag_Z</definition>
        <argsstring></argsstring>
        <name>Z</name>
        <qualifiedname>ToroidalToCylindrical::Z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="42" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a41b99eb3d84106da6a25dd4c5177b3c8" prot="private" static="no">
        <type>typename Z::Dual</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::Z_cov =  typename Z::Dual</definition>
        <argsstring></argsstring>
        <name>Z_cov</name>
        <qualifiedname>ToroidalToCylindrical::Z_cov</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="43" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1a1a1f09b42df640f983b769c84c3c3bf9" prot="private" static="no">
        <type>typename Zeta::Dual</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::Zeta_cov =  typename Zeta::Dual</definition>
        <argsstring></argsstring>
        <name>Zeta_cov</name>
        <qualifiedname>ToroidalToCylindrical::Zeta_cov</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="44" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1af4ee537db3687038ea1f3739f83ff55d" prot="private" static="no">
        <type><ref refid="classToroidalToCylindrical_1a9b335bee1c6524190b5618445423f947" kindref="member">toroidal_tag_rho</ref></type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::Rho =  toroidal_tag_rho</definition>
        <argsstring></argsstring>
        <name>Rho</name>
        <qualifiedname>ToroidalToCylindrical::Rho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="45" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1ac8c8888e02aaa8a4720a5a584052f047" prot="private" static="no">
        <type>typename Rho::Dual</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::Rho_cov =  typename Rho::Dual</definition>
        <argsstring></argsstring>
        <name>Rho_cov</name>
        <qualifiedname>ToroidalToCylindrical::Rho_cov</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="46" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1aca1530a99965a521773816579ac9f1fb" prot="private" static="no">
        <type><ref refid="classToroidalToCylindrical_1a9ff2dd518c6e78208661c7e7efa2e6f7" kindref="member">toroidal_tag_theta</ref></type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::Theta =  toroidal_tag_theta</definition>
        <argsstring></argsstring>
        <name>Theta</name>
        <qualifiedname>ToroidalToCylindrical::Theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="47" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1ab08e9d4d0348f8e793f721d5804301b8" prot="private" static="no">
        <type>typename <ref refid="structTheta_1a1f99557f831a14c03c9d03e1a5e33d40" kindref="member">Theta::Dual</ref></type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::Theta_cov =  typename Theta::Dual</definition>
        <argsstring></argsstring>
        <name>Theta_cov</name>
        <qualifiedname>ToroidalToCylindrical::Theta_cov</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="48" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1ada4ba2354b0ccaabbd90f9767055c1ec" prot="private" static="no">
        <type>typename Phi::Dual</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::Phi_cov =  typename Phi::Dual</definition>
        <argsstring></argsstring>
        <name>Phi_cov</name>
        <qualifiedname>ToroidalToCylindrical::Phi_cov</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="49" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classToroidalToCylindrical_1ae7e27026cc649d0abd5ebd8f7ea4a9c6" prot="private" static="no">
        <type>Coord&lt; Rho, <ref refid="structTheta" kindref="compound">Theta</ref> &gt;</type>
        <definition>using ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::CoordArg2D =  Coord&lt;Rho, Theta&gt;</definition>
        <argsstring></argsstring>
        <name>CoordArg2D</name>
        <qualifiedname>ToroidalToCylindrical::CoordArg2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="51" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classToroidalToCylindrical_1a7c658672c0f3cbe1d814db5415f165a8" prot="private" static="no" mutable="no">
        <type>Curvilinear2DToCartesian</type>
        <definition>Curvilinear2DToCartesian ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::m_mapping_2d</definition>
        <argsstring></argsstring>
        <name>m_mapping_2d</name>
        <qualifiedname>ToroidalToCylindrical::m_mapping_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="60" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classToroidalToCylindrical_1a7e23755b2802d0cc40a4aa5ff986132b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::ToroidalToCylindrical</definition>
        <argsstring>(Curvilinear2DToCartesian const &amp;mapping_2d)</argsstring>
        <name>ToroidalToCylindrical</name>
        <qualifiedname>ToroidalToCylindrical::ToroidalToCylindrical</qualifiedname>
        <param>
          <type>Curvilinear2DToCartesian const &amp;</type>
          <declname>mapping_2d</declname>
        </param>
        <briefdescription>
<para>Instantiate a <ref refid="classToroidalToCylindrical" kindref="compound">ToroidalToCylindrical</ref> mapping from a 2D Curvilinear2DToCartesian mapping. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mapping_2d</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping governing the transformation from <formula id="302">$(\rho, \theta) $</formula> to <formula id="304">$ (R, Z) $</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="70" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classToroidalToCylindrical_1a7e837689121979e49c6bee7f816072b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION <ref refid="classToroidalToCylindrical_1aaa80750ea092a63a11fab80d5e0054fa" kindref="member">CoordResult</ref></type>
        <definition>KOKKOS_FUNCTION CoordResult ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::operator()</definition>
        <argsstring>(CoordArg const &amp;coord) const</argsstring>
        <name>operator()</name>
        <qualifiedname>ToroidalToCylindrical::operator()</qualifiedname>
        <param>
          <type><ref refid="classToroidalToCylindrical_1a447e9e5af69a413ae8b49f1e1d5f0121" kindref="member">CoordArg</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Convert the <formula id="307">$ (\rho, \theta, \phi) $</formula> coordinate to the equivalent <formula id="303">$ (R, Z, \zeta) $</formula> coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate to be converted.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The equivalent coordinate. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="83" column="33" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classToroidalToCylindrical_1a1f210df30c7fec0889f55b07a0227cba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION double</type>
        <definition>KOKKOS_FUNCTION double ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::jacobian</definition>
        <argsstring>(CoordArg const &amp;coord) const</argsstring>
        <name>jacobian</name>
        <qualifiedname>ToroidalToCylindrical::jacobian</qualifiedname>
        <param>
          <type><ref refid="classToroidalToCylindrical_1a447e9e5af69a413ae8b49f1e1d5f0121" kindref="member">CoordArg</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Compute the Jacobian: the determinant of the Jacobian matrix of the mapping. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where we evaluate the Jacobian.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the determinant of the Jacobian matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="96" column="28" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classToroidalToCylindrical_1a705d91d857d3586ada5086670cb812fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION <ref refid="classTensor" kindref="compound">DTensor</ref>&lt; VectorIndexSet&lt; <ref refid="structR" kindref="compound">R</ref>, Z, Zeta &gt;, VectorIndexSet&lt; Rho_cov, <ref refid="structTheta__cov" kindref="compound">Theta_cov</ref>, Phi_cov &gt; &gt;</type>
        <definition>KOKKOS_FUNCTION DTensor&lt; VectorIndexSet&lt; R, Z, Zeta &gt;, VectorIndexSet&lt; Rho_cov, Theta_cov, Phi_cov &gt; &gt; ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::jacobian_matrix</definition>
        <argsstring>(CoordArg const &amp;coord) const</argsstring>
        <name>jacobian_matrix</name>
        <qualifiedname>ToroidalToCylindrical::jacobian_matrix</qualifiedname>
        <param>
          <type><ref refid="classToroidalToCylindrical_1a447e9e5af69a413ae8b49f1e1d5f0121" kindref="member">CoordArg</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Compute the Jacobian matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>For different computations, we need either the complete Jacobian matrix or some of the coefficients of the matrix. The coefficients can be obtained independently with the function jacobian_component.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where we evaluate the Jacobian matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Jacobian matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="113" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="113" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classToroidalToCylindrical_1a69d3910660fac6d49270c25b10d59f4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IndexTag1</type>
          </param>
          <param>
            <type>class IndexTag2</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION double</type>
        <definition>KOKKOS_INLINE_FUNCTION double ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::jacobian_component</definition>
        <argsstring>(CoordArg const &amp;coord) const</argsstring>
        <name>jacobian_component</name>
        <qualifiedname>ToroidalToCylindrical::jacobian_component</qualifiedname>
        <param>
          <type><ref refid="classToroidalToCylindrical_1a447e9e5af69a413ae8b49f1e1d5f0121" kindref="member">CoordArg</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Compute the (i,j) coefficient of the Jacobian matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where we evaluate the Jacobian matrix.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>tag representing the index i. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>tag representing the index j.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the (i,j) coefficient of the Jacobian matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="142" column="35" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="142" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classToroidalToCylindrical_1aef3f106f64f51d2b6706c8eb34e5c054" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION <ref refid="classTensor" kindref="compound">DTensor</ref>&lt; VectorIndexSet&lt; Rho, <ref refid="structTheta" kindref="compound">Theta</ref>, Phi &gt;, VectorIndexSet&lt; <ref refid="structR__cov" kindref="compound">R_cov</ref>, Z_cov, Zeta_cov &gt; &gt;</type>
        <definition>KOKKOS_FUNCTION DTensor&lt; VectorIndexSet&lt; Rho, Theta, Phi &gt;, VectorIndexSet&lt; R_cov, Z_cov, Zeta_cov &gt; &gt; ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::inv_jacobian_matrix</definition>
        <argsstring>(CoordArg const &amp;coord) const</argsstring>
        <name>inv_jacobian_matrix</name>
        <qualifiedname>ToroidalToCylindrical::inv_jacobian_matrix</qualifiedname>
        <param>
          <type><ref refid="classToroidalToCylindrical_1a447e9e5af69a413ae8b49f1e1d5f0121" kindref="member">CoordArg</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Compute the inverse of the Jacobian matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>For different computations, we need either the complete Jacobian matrix or some of the coefficients of the matrix. The coefficients can be obtained independently with the function inv_jacobian_component.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where we evaluate the Jacobian matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Jacobian matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="170" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="170" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classToroidalToCylindrical_1a1e3dcf7af3561dbeb9262c578c9e8e40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IndexTag1</type>
          </param>
          <param>
            <type>class IndexTag2</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION double</type>
        <definition>KOKKOS_INLINE_FUNCTION double ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::inv_jacobian_component</definition>
        <argsstring>(CoordArg const &amp;coord) const</argsstring>
        <name>inv_jacobian_component</name>
        <qualifiedname>ToroidalToCylindrical::inv_jacobian_component</qualifiedname>
        <param>
          <type><ref refid="classToroidalToCylindrical_1a447e9e5af69a413ae8b49f1e1d5f0121" kindref="member">CoordArg</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Compute the (i,j) coefficient of the inverse of the Jacobian matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where we evaluate the Jacobian matrix.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>tag representing the index i. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>tag representing the index j.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the (i,j) coefficient of the Jacobian matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="201" column="35" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="201" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classToroidalToCylindrical_1adaa7338c681257be7aac6f83998e30fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Curvilinear2DToCartesian</type>
        <definition>Curvilinear2DToCartesian ToroidalToCylindrical&lt; Curvilinear2DToCartesian, Zeta, Phi &gt;::get_2d_polar_mapping</definition>
        <argsstring>() const</argsstring>
        <name>get_2d_polar_mapping</name>
        <qualifiedname>ToroidalToCylindrical::get_2d_polar_mapping</qualifiedname>
        <briefdescription>
<para>Get the mapping describing the polar plane. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The mapping describing the polar plane. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="223" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="223" bodyend="226"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class describing a coordinate change from a toroidal system of coordinates to a cylindrical system of coordinates. The toroidal coordinates are described by a polar plane <formula id="302">$(\rho, \theta) $</formula> and a perpendicular dimension <formula id="36">$ \phi $</formula>. The cylindrical coordinates are <formula id="303">$ (R, Z, \zeta) $</formula>. <formula id="304">$ (R, Z) $</formula> describe a Cartesian slice. <formula id="302">$(\rho, \theta) $</formula> are therefore defined from this slice with a 2D coordinate change operator. <formula id="305">$ \zeta $</formula> is chosen to be equal to <formula id="306">$ -\phi $</formula> to preserve the orientation of the axes (following the right-hand rule). </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Curvilinear2DToCartesian</parametername>
</parameternamelist>
<parameterdescription>
<para>An operator describing the coordinate change from <formula id="302">$(\rho, \theta) $</formula> to <formula id="304">$ (R, Z) $</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>The angle of the cylindrical coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Phi</parametername>
</parameternamelist>
<parameterdescription>
<para>The toroidal component of the toroidal coordinates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" line="19" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/toroidal_to_cylindrical.hpp" bodystart="20" bodyend="227"/>
    <listofallmembers>
      <member refid="classToroidalToCylindrical_1a447e9e5af69a413ae8b49f1e1d5f0121" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>CoordArg</name></member>
      <member refid="classToroidalToCylindrical_1ae7e27026cc649d0abd5ebd8f7ea4a9c6" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>CoordArg2D</name></member>
      <member refid="classToroidalToCylindrical_1aaa80750ea092a63a11fab80d5e0054fa" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>CoordResult</name></member>
      <member refid="classToroidalToCylindrical_1a2ba3550e813d634fe3906772d7ae4123" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>cylindrical_tag_R</name></member>
      <member refid="classToroidalToCylindrical_1aa349487d3ca8a2d9b27bbd514d4a7ef1" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>cylindrical_tag_Z</name></member>
      <member refid="classToroidalToCylindrical_1a6d68f9f6d0c199982bc689102d60aedb" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>cylindrical_tag_Zeta</name></member>
      <member refid="classToroidalToCylindrical_1adaa7338c681257be7aac6f83998e30fe" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>get_2d_polar_mapping</name></member>
      <member refid="classToroidalToCylindrical_1a1e3dcf7af3561dbeb9262c578c9e8e40" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>inv_jacobian_component</name></member>
      <member refid="classToroidalToCylindrical_1aef3f106f64f51d2b6706c8eb34e5c054" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>inv_jacobian_matrix</name></member>
      <member refid="classToroidalToCylindrical_1a1f210df30c7fec0889f55b07a0227cba" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>jacobian</name></member>
      <member refid="classToroidalToCylindrical_1a69d3910660fac6d49270c25b10d59f4b" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>jacobian_component</name></member>
      <member refid="classToroidalToCylindrical_1a705d91d857d3586ada5086670cb812fb" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>jacobian_matrix</name></member>
      <member refid="classToroidalToCylindrical_1a7c658672c0f3cbe1d814db5415f165a8" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>m_mapping_2d</name></member>
      <member refid="classToroidalToCylindrical_1a7e837689121979e49c6bee7f816072b1" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>operator()</name></member>
      <member refid="classToroidalToCylindrical_1ada4ba2354b0ccaabbd90f9767055c1ec" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>Phi_cov</name></member>
      <member refid="classToroidalToCylindrical_1a749485e7afd76637d92fae197443cdf4" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>R</name></member>
      <member refid="classToroidalToCylindrical_1a5aee53516c1125323be46ba11c9b028b" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>R_cov</name></member>
      <member refid="classToroidalToCylindrical_1af4ee537db3687038ea1f3739f83ff55d" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>Rho</name></member>
      <member refid="classToroidalToCylindrical_1ac8c8888e02aaa8a4720a5a584052f047" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>Rho_cov</name></member>
      <member refid="classToroidalToCylindrical_1aca1530a99965a521773816579ac9f1fb" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>Theta</name></member>
      <member refid="classToroidalToCylindrical_1ab08e9d4d0348f8e793f721d5804301b8" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>Theta_cov</name></member>
      <member refid="classToroidalToCylindrical_1aa3b5d507e4d1fd654579609d361fd0b1" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>toroidal_tag_phi</name></member>
      <member refid="classToroidalToCylindrical_1a9b335bee1c6524190b5618445423f947" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>toroidal_tag_rho</name></member>
      <member refid="classToroidalToCylindrical_1a9ff2dd518c6e78208661c7e7efa2e6f7" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>toroidal_tag_theta</name></member>
      <member refid="classToroidalToCylindrical_1a7e23755b2802d0cc40a4aa5ff986132b" prot="public" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>ToroidalToCylindrical</name></member>
      <member refid="classToroidalToCylindrical_1a0541d74eb00f079baaa4831f31dfcee7" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>Z</name></member>
      <member refid="classToroidalToCylindrical_1a41b99eb3d84106da6a25dd4c5177b3c8" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>Z_cov</name></member>
      <member refid="classToroidalToCylindrical_1a1a1f09b42df640f983b769c84c3c3bf9" prot="private" virt="non-virtual"><scope>ToroidalToCylindrical</scope><name>Zeta_cov</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
