<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classCartesianToCircular" kind="class" language="C++" prot="public">
    <compoundname>CartesianToCircular</compoundname>
    <includes refid="cartesian__to__circular_8hpp" local="no">cartesian_to_circular.hpp</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="structX" kindref="compound">X</ref></type>
      </param>
      <param>
        <type>class <ref refid="structY" kindref="compound">Y</ref></type>
      </param>
      <param>
        <type>class <ref refid="structR" kindref="compound">R</ref></type>
      </param>
      <param>
        <type>class <ref refid="structTheta" kindref="compound">Theta</ref></type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCartesianToCircular_1a3a8d1753956c80af0e2069197560b3a5" prot="public" static="no">
        <type><ref refid="structX" kindref="compound">X</ref></type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::cartesian_tag_x =  X</definition>
        <argsstring></argsstring>
        <name>cartesian_tag_x</name>
        <qualifiedname>CartesianToCircular::cartesian_tag_x</qualifiedname>
        <briefdescription>
<para>Indicate the first physical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="44" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1a177d7877c5bf73f643f771a91613ce15" prot="public" static="no">
        <type><ref refid="structY" kindref="compound">Y</ref></type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::cartesian_tag_y =  Y</definition>
        <argsstring></argsstring>
        <name>cartesian_tag_y</name>
        <qualifiedname>CartesianToCircular::cartesian_tag_y</qualifiedname>
        <briefdescription>
<para>Indicate the second physical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="46" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1a97b27a4e4e766216d76ce150a2903345" prot="public" static="no">
        <type><ref refid="structR" kindref="compound">R</ref></type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::curvilinear_tag_r =  R</definition>
        <argsstring></argsstring>
        <name>curvilinear_tag_r</name>
        <qualifiedname>CartesianToCircular::curvilinear_tag_r</qualifiedname>
        <briefdescription>
<para>Indicate the first logical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="48" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1a22c0b5fa2d5952f5bd9e9db9045226e9" prot="public" static="no">
        <type><ref refid="structTheta" kindref="compound">Theta</ref></type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::curvilinear_tag_theta =  Theta</definition>
        <argsstring></argsstring>
        <name>curvilinear_tag_theta</name>
        <qualifiedname>CartesianToCircular::curvilinear_tag_theta</qualifiedname>
        <briefdescription>
<para>Indicate the second logical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="50" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1addc99b0a3bea0e7444bc512a1e9e3d58" prot="public" static="no">
        <type>Coord&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref> &gt;</type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::CoordArg =  Coord&lt;X, Y&gt;</definition>
        <argsstring></argsstring>
        <name>CoordArg</name>
        <qualifiedname>CartesianToCircular::CoordArg</qualifiedname>
        <briefdescription>
<para>The type of the argument of the function described by this mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="53" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1a96445d5169722628a035e142fbf516d5" prot="public" static="no">
        <type>Coord&lt; <ref refid="structR" kindref="compound">R</ref>, <ref refid="structTheta" kindref="compound">Theta</ref> &gt;</type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::CoordResult =  Coord&lt;R, Theta&gt;</definition>
        <argsstring></argsstring>
        <name>CoordResult</name>
        <qualifiedname>CartesianToCircular::CoordResult</qualifiedname>
        <briefdescription>
<para>The type of the result of the function described by this mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="55" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1a75204018afa14536ac1ee9e385d3e513" prot="public" static="no">
        <type><ref refid="classCartesianToCircular_1addc99b0a3bea0e7444bc512a1e9e3d58" kindref="member">CoordArg</ref></type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::CoordJacobian =  CoordArg</definition>
        <argsstring></argsstring>
        <name>CoordJacobian</name>
        <qualifiedname>CartesianToCircular::CoordJacobian</qualifiedname>
        <briefdescription>
<para>The type of the coordinate that can be used to evaluate the Jacobian of this mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="57" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1ad8e1bbab5fe5d419953f4250237260e7" prot="public" static="no">
        <type>typename <ref refid="structX_1a11361f8ff006d764ec79d4b06fa3f45f" kindref="member">X::Dual</ref></type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::X_cov =  typename X::Dual</definition>
        <argsstring></argsstring>
        <name>X_cov</name>
        <qualifiedname>CartesianToCircular::X_cov</qualifiedname>
        <briefdescription>
<para>The covariant form of the first physical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="60" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1a2fac6fc2bff81a582bd4089fc6b0344f" prot="public" static="no">
        <type>typename <ref refid="structY_1aad98c6afa465f3fb654029648420df1f" kindref="member">Y::Dual</ref></type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::Y_cov =  typename Y::Dual</definition>
        <argsstring></argsstring>
        <name>Y_cov</name>
        <qualifiedname>CartesianToCircular::Y_cov</qualifiedname>
        <briefdescription>
<para>The covariant form of the second physical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="62" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1a3af040539c015e89917c4a4194c8b9e2" prot="public" static="no">
        <type>typename <ref refid="structR_1a35006d7e5031a9bd48e5af62534c421f" kindref="member">R::Dual</ref></type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::R_cov =  typename R::Dual</definition>
        <argsstring></argsstring>
        <name>R_cov</name>
        <qualifiedname>CartesianToCircular::R_cov</qualifiedname>
        <briefdescription>
<para>The covariant form of the first logical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="64" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCartesianToCircular_1a1d38114e75c30437baa95e8fb3e27fd0" prot="public" static="no">
        <type>typename <ref refid="structTheta_1a1f99557f831a14c03c9d03e1a5e33d40" kindref="member">Theta::Dual</ref></type>
        <definition>using CartesianToCircular&lt; X, Y, R, Theta &gt;::Theta_cov =  typename Theta::Dual</definition>
        <argsstring></argsstring>
        <name>Theta_cov</name>
        <qualifiedname>CartesianToCircular::Theta_cov</qualifiedname>
        <briefdescription>
<para>The covariant form of the second logical coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="66" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCartesianToCircular_1af9234716ccc3a28021edcf9d5f11ff89" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double CartesianToCircular&lt; X, Y, R, Theta &gt;::m_x0</definition>
        <argsstring></argsstring>
        <name>m_x0</name>
        <qualifiedname>CartesianToCircular::m_x0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="69" column="12" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCartesianToCircular_1a24ff268bdd1e392afdd5ce4a38f90738" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double CartesianToCircular&lt; X, Y, R, Theta &gt;::m_y0</definition>
        <argsstring></argsstring>
        <name>m_y0</name>
        <qualifiedname>CartesianToCircular::m_y0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="70" column="12" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classCartesianToCircular_1af148dba09e25aca287f087d27642bfc4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION CartesianToCircular&lt; X, Y, R, Theta &gt;::CartesianToCircular</definition>
        <argsstring>(double x0=0.0, double y0=0.0)</argsstring>
        <name>CartesianToCircular</name>
        <qualifiedname>CartesianToCircular::CartesianToCircular</qualifiedname>
        <param>
          <type>double</type>
          <declname>x0</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>y0</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Instantiate a <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> from parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x0</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-coordinate of the centre of the circle (0 by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y0</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-coordinate of the centre of the circle (0 by default). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="79" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1ae176c056f6c47a7228d5f694121f3bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION CartesianToCircular&lt; X, Y, R, Theta &gt;::CartesianToCircular</definition>
        <argsstring>(CartesianToCircular const &amp;other)=default</argsstring>
        <name>CartesianToCircular</name>
        <qualifiedname>CartesianToCircular::CartesianToCircular</qualifiedname>
        <param>
          <type><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Instantiate a <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> from another <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> (lvalue). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> mapping used to instantiate the new one. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="91" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1abe8adddabf03ac964a31590c69e89f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CartesianToCircular&lt; X, Y, R, Theta &gt;::CartesianToCircular</definition>
        <argsstring>(CartesianToCircular &amp;&amp;x)=default</argsstring>
        <name>CartesianToCircular</name>
        <qualifiedname>CartesianToCircular::CartesianToCircular</qualifiedname>
        <param>
          <type><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Instantiate a Curvilinear2DToCartesian from another temporary <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> (rvalue). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Curvilinear2DToCartesian mapping used to instantiate the new one. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="99" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1ab44f97fd7abb545237a399a54ab1d00f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION CartesianToCircular&lt; X, Y, R, Theta &gt;::~CartesianToCircular</definition>
        <argsstring>()=default</argsstring>
        <name>~CartesianToCircular</name>
        <qualifiedname>CartesianToCircular::~CartesianToCircular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="101" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1ad149af07eb1a3c309c02797b1eeb1099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> &amp;</type>
        <definition>CartesianToCircular &amp; CartesianToCircular&lt; X, Y, R, Theta &gt;::operator=</definition>
        <argsstring>(CartesianToCircular const &amp;x)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>CartesianToCircular::operator=</qualifiedname>
        <param>
          <type><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Assign a <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> from another <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> (lvalue). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> mapping used to assign.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> assigned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="111" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1a37380fa46ba2613b3082a6c3b302af61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> &amp;</type>
        <definition>CartesianToCircular &amp; CartesianToCircular&lt; X, Y, R, Theta &gt;::operator=</definition>
        <argsstring>(CartesianToCircular &amp;&amp;x)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>CartesianToCircular::operator=</qualifiedname>
        <param>
          <type><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Assign a <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> from another temporary <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> (rvalue). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> mapping used to assign.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref> assigned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="121" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1ac7328c386b3ece480b67c475eb9d281a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION Coord&lt; <ref refid="structR" kindref="compound">R</ref>, <ref refid="structTheta" kindref="compound">Theta</ref> &gt;</type>
        <definition>KOKKOS_FUNCTION Coord&lt; R, Theta &gt; CartesianToCircular&lt; X, Y, R, Theta &gt;::operator()</definition>
        <argsstring>(Coord&lt; X, Y &gt; const &amp;coord) const</argsstring>
        <name>operator()</name>
        <qualifiedname>CartesianToCircular::operator()</qualifiedname>
        <param>
          <type>Coord&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref> &gt; const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Convert the coordinate (x,y) to the equivalent <formula id="186">$ (r, \theta) $</formula> coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate to be converted.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The equivalent coordinate. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="130" column="27" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="130" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1a275832f34d53e29ba6a1304819d040fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION double</type>
        <definition>KOKKOS_FUNCTION double CartesianToCircular&lt; X, Y, R, Theta &gt;::jacobian</definition>
        <argsstring>(Coord&lt; X, Y &gt; const &amp;coord)</argsstring>
        <name>jacobian</name>
        <qualifiedname>CartesianToCircular::jacobian</qualifiedname>
        <param>
          <type>Coord&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref> &gt; const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Compute the Jacobian, the determinant of the Jacobian matrix of the mapping. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where we evaluate the Jacobian.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double with the value of the determinant of the Jacobian matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="149" column="28" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="149" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1a15d8b8ccc837c4e57c000ac4307713f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION <ref refid="classTensor" kindref="compound">DTensor</ref>&lt; VectorIndexSet&lt; <ref refid="structR" kindref="compound">R</ref>, <ref refid="structTheta" kindref="compound">Theta</ref> &gt;, VectorIndexSet&lt; <ref refid="classCartesianToCircular_1ad8e1bbab5fe5d419953f4250237260e7" kindref="member">X_cov</ref>, <ref refid="classCartesianToCircular_1a2fac6fc2bff81a582bd4089fc6b0344f" kindref="member">Y_cov</ref> &gt; &gt;</type>
        <definition>KOKKOS_FUNCTION DTensor&lt; VectorIndexSet&lt; R, Theta &gt;, VectorIndexSet&lt; X_cov, Y_cov &gt; &gt; CartesianToCircular&lt; X, Y, R, Theta &gt;::jacobian_matrix</definition>
        <argsstring>(Coord&lt; X, Y &gt; const &amp;coord) const</argsstring>
        <name>jacobian_matrix</name>
        <qualifiedname>CartesianToCircular::jacobian_matrix</qualifiedname>
        <param>
          <type>Coord&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref> &gt; const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Compute full Jacobian matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>For some computations, we need the complete Jacobian matrix or just the coefficients. The coefficients can be given independently with the function jacobian_component.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where we evaluate the Jacobian matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Jacobian matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="167" column="29" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="167" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1af69ebbdc58f56c521d3c25589fe16769" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IndexTag1</type>
          </param>
          <param>
            <type>class IndexTag2</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION double</type>
        <definition>KOKKOS_INLINE_FUNCTION double CartesianToCircular&lt; X, Y, R, Theta &gt;::jacobian_component</definition>
        <argsstring>(Coord&lt; X, Y &gt; const &amp;coord) const</argsstring>
        <name>jacobian_component</name>
        <qualifiedname>CartesianToCircular::jacobian_component</qualifiedname>
        <param>
          <type>Coord&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref> &gt; const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Compute the (i,j) coefficient of the Jacobian matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where we evaluate the Jacobian matrix.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double with the value of the (1,1) coefficient of the Jacobian matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="192" column="35" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="192" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classCartesianToCircular_1a2abacca05657095a5f3747031b92fef6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classCircularToCartesian" kindref="compound">CircularToCartesian</ref>&lt; <ref refid="structR" kindref="compound">R</ref>, <ref refid="structTheta" kindref="compound">Theta</ref>, <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref> &gt;</type>
        <definition>KOKKOS_INLINE_FUNCTION CircularToCartesian&lt; R, Theta, X, Y &gt; CartesianToCircular&lt; X, Y, R, Theta &gt;::get_inverse_mapping</definition>
        <argsstring>() const</argsstring>
        <name>get_inverse_mapping</name>
        <qualifiedname>CartesianToCircular::get_inverse_mapping</qualifiedname>
        <briefdescription>
<para>Get the inverse mapping. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The inverse mapping. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="219" column="48" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="219" bodyend="222"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class for describing the circular 2D mapping. </para>
    </briefdescription>
    <detaileddescription>
<para>The mapping <formula id="178">$ (x,y)\mapsto (r,\theta) $</formula> is defined as follow :</para>
<para><formula id="179">$ r(x,y) = \sqrt (x-x_0)^2+(y-y_0)^2 ,$</formula></para>
<para><formula id="180">$ \theta(x,y) = atan2(\frac{y-y_0}{x-x_0}) .$</formula></para>
<para>It and its Jacobian matrix are invertible everywhere except for <formula id="18">$ r = 0 $</formula>.</para>
<para>The Jacobian matrix coefficients are defined as follow</para>
<para><formula id="181">$ J_{11}(x,y)  =\frac{x-x_0}{\sqrt{(x-x_0)^2+(y-y_0)^2}}  $</formula></para>
<para><formula id="182">$ J_{12}(x,y)  =\frac{y-y_0}{\sqrt{(x-x_0)^2+(y-y_0)^2}}  $</formula></para>
<para><formula id="183">$ J_{21}(x,y)  =\frac{-(y-y_0)}{(x-x_0)^2+(y-y_0)^2}  $</formula></para>
<para><formula id="184">$ J_{22}(x,y)  =\frac{x-x_0}{(x-x_0)^2+(y-y_0)^2}  $</formula></para>
<para>and the matrix determinant: <formula id="185">$ det(J) = 1/((x-x_0)^2+(y-y_0)^2) $</formula>. </para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" line="40" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/mapping/cartesian_to_circular.hpp" bodystart="41" bodyend="223"/>
    <listofallmembers>
      <member refid="classCartesianToCircular_1a3a8d1753956c80af0e2069197560b3a5" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>cartesian_tag_x</name></member>
      <member refid="classCartesianToCircular_1a177d7877c5bf73f643f771a91613ce15" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>cartesian_tag_y</name></member>
      <member refid="classCartesianToCircular_1af148dba09e25aca287f087d27642bfc4" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>CartesianToCircular</name></member>
      <member refid="classCartesianToCircular_1ae176c056f6c47a7228d5f694121f3bcd" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>CartesianToCircular</name></member>
      <member refid="classCartesianToCircular_1abe8adddabf03ac964a31590c69e89f29" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>CartesianToCircular</name></member>
      <member refid="classCartesianToCircular_1addc99b0a3bea0e7444bc512a1e9e3d58" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>CoordArg</name></member>
      <member refid="classCartesianToCircular_1a75204018afa14536ac1ee9e385d3e513" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>CoordJacobian</name></member>
      <member refid="classCartesianToCircular_1a96445d5169722628a035e142fbf516d5" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>CoordResult</name></member>
      <member refid="classCartesianToCircular_1a97b27a4e4e766216d76ce150a2903345" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>curvilinear_tag_r</name></member>
      <member refid="classCartesianToCircular_1a22c0b5fa2d5952f5bd9e9db9045226e9" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>curvilinear_tag_theta</name></member>
      <member refid="classCartesianToCircular_1a2abacca05657095a5f3747031b92fef6" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>get_inverse_mapping</name></member>
      <member refid="classCartesianToCircular_1a275832f34d53e29ba6a1304819d040fe" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>jacobian</name></member>
      <member refid="classCartesianToCircular_1af69ebbdc58f56c521d3c25589fe16769" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>jacobian_component</name></member>
      <member refid="classCartesianToCircular_1a15d8b8ccc837c4e57c000ac4307713f5" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>jacobian_matrix</name></member>
      <member refid="classCartesianToCircular_1af9234716ccc3a28021edcf9d5f11ff89" prot="private" virt="non-virtual"><scope>CartesianToCircular</scope><name>m_x0</name></member>
      <member refid="classCartesianToCircular_1a24ff268bdd1e392afdd5ce4a38f90738" prot="private" virt="non-virtual"><scope>CartesianToCircular</scope><name>m_y0</name></member>
      <member refid="classCartesianToCircular_1ac7328c386b3ece480b67c475eb9d281a" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>operator()</name></member>
      <member refid="classCartesianToCircular_1ad149af07eb1a3c309c02797b1eeb1099" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>operator=</name></member>
      <member refid="classCartesianToCircular_1a37380fa46ba2613b3082a6c3b302af61" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>operator=</name></member>
      <member refid="classCartesianToCircular_1a3af040539c015e89917c4a4194c8b9e2" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>R_cov</name></member>
      <member refid="classCartesianToCircular_1a1d38114e75c30437baa95e8fb3e27fd0" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>Theta_cov</name></member>
      <member refid="classCartesianToCircular_1ad8e1bbab5fe5d419953f4250237260e7" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>X_cov</name></member>
      <member refid="classCartesianToCircular_1a2fac6fc2bff81a582bd4089fc6b0344f" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>Y_cov</name></member>
      <member refid="classCartesianToCircular_1ab44f97fd7abb545237a399a54ab1d00f" prot="public" virt="non-virtual"><scope>CartesianToCircular</scope><name>~CartesianToCircular</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
