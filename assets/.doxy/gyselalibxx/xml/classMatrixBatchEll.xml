<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classMatrixBatchEll" kind="class" language="C++" prot="public">
    <compoundname>MatrixBatchEll</compoundname>
    <basecompoundref refid="classMatrixBatch" prot="public" virt="non-virtual">MatrixBatch&lt; ExecSpace &gt;</basecompoundref>
    <includes refid="matrix__batch__ell_8hpp" local="no">matrix_batch_ell.hpp</includes>
    <templateparamlist>
      <param>
        <type>class ExecSpace</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classMatrixBatchEll_1a30c88e7189252194c871907eaa2cc452" prot="private" static="no">
        <type>gko::batch::matrix::Ell&lt; double, int &gt;</type>
        <definition>using MatrixBatchEll&lt; ExecSpace &gt;::batch_sparse_type =  gko::batch::matrix::Ell&lt;double, int&gt;</definition>
        <argsstring></argsstring>
        <name>batch_sparse_type</name>
        <qualifiedname>MatrixBatchEll::batch_sparse_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="32" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMatrixBatchEll_1a0af3c0cd64e22375c9a7001995c49e14" prot="private" static="no">
        <type>gko::batch::solver::Bicgstab&lt; double &gt;</type>
        <definition>using MatrixBatchEll&lt; ExecSpace &gt;::solver_type =  gko::batch::solver::Bicgstab&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>solver_type</name>
        <qualifiedname>MatrixBatchEll::solver_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="33" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMatrixBatchEll_1a6ba8e2fff70dfd281218a3f3e0cada27" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; batch_sparse_type &gt;</type>
        <definition>std::shared_ptr&lt;batch_sparse_type&gt; MatrixBatchEll&lt; ExecSpace &gt;::m_batch_matrix_ell</definition>
        <argsstring></argsstring>
        <name>m_batch_matrix_ell</name>
        <qualifiedname>MatrixBatchEll::m_batch_matrix_ell</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="35" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrixBatchEll_1abcd5c621488437c545c8d2e3277dedfd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; solver_type &gt;</type>
        <definition>std::shared_ptr&lt;solver_type&gt; MatrixBatchEll&lt; ExecSpace &gt;::m_solver</definition>
        <argsstring></argsstring>
        <name>m_solver</name>
        <qualifiedname>MatrixBatchEll::m_solver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="36" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrixBatchEll_1a7bf9e018082a902f15b2fc92b18c553b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int MatrixBatchEll&lt; ExecSpace &gt;::m_max_iter</definition>
        <argsstring></argsstring>
        <name>m_max_iter</name>
        <qualifiedname>MatrixBatchEll::m_max_iter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="37" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrixBatchEll_1ae2255fcb6a46000c229d67e0b8658654" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double MatrixBatchEll&lt; ExecSpace &gt;::m_tol</definition>
        <argsstring></argsstring>
        <name>m_tol</name>
        <qualifiedname>MatrixBatchEll::m_tol</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="38" column="12" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrixBatchEll_1a78ab002e14c4b3f449009a20b3f25635" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MatrixBatchEll&lt; ExecSpace &gt;::m_with_logger</definition>
        <argsstring></argsstring>
        <name>m_with_logger</name>
        <qualifiedname>MatrixBatchEll::m_with_logger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="39" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classMatrixBatchEll_1aaef2264db89e99beb1a012d190e95ecc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MatrixBatchEll&lt; ExecSpace &gt;::MatrixBatchEll</definition>
        <argsstring>(const int batch_size, const int mat_size, const int non_zeros_per_row, std::optional&lt; int &gt; max_iter=std::nullopt, std::optional&lt; double &gt; res_tol=std::nullopt, std::optional&lt; bool &gt; logger=std::nullopt)</argsstring>
        <name>MatrixBatchEll</name>
        <qualifiedname>MatrixBatchEll::MatrixBatchEll</qualifiedname>
        <param>
          <type>const int</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>mat_size</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>non_zeros_per_row</declname>
        </param>
        <param>
          <type>std::optional&lt; int &gt;</type>
          <declname>max_iter</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>res_tol</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>logger</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>The constructor for <ref refid="classMatrixBatchEll" kindref="compound">MatrixBatchEll</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of linear systems to solve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mat_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Common matrix size for all the systems. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">non_zeros_per_row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of non zero components per line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_iter</parametername>
</parameternamelist>
<parameterdescription>
<para>maximal number of iterations for the solver </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">res_tol</parametername>
</parameternamelist>
<parameterdescription>
<para>residual tolerance parameter, to ensure convergence. Be careful! the relative residual provided here, will be used as &quot;implicit residual&quot; in ginkgo solver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">logger</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean parameter for saving log information such residual and interactions count. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="54" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="54" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classMatrixBatchEll_1a2311f80607b4ed72e59c4bc94e8f75e7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MatrixBatchEll&lt; ExecSpace &gt;::MatrixBatchEll</definition>
        <argsstring>(Kokkos::View&lt; int **, Kokkos::LayoutLeft, ExecSpace &gt; cols_idx, Kokkos::View&lt; double ***, Kokkos::LayoutStride, ExecSpace &gt; batch_values, std::optional&lt; int &gt; max_iter=std::nullopt, std::optional&lt; double &gt; res_tol=std::nullopt, std::optional&lt; bool &gt; logger=std::nullopt)</argsstring>
        <name>MatrixBatchEll</name>
        <qualifiedname>MatrixBatchEll::MatrixBatchEll</qualifiedname>
        <param>
          <type>Kokkos::View&lt; int **, Kokkos::LayoutLeft, ExecSpace &gt;</type>
          <declname>cols_idx</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; double ***, Kokkos::LayoutStride, ExecSpace &gt;</type>
          <declname>batch_values</declname>
        </param>
        <param>
          <type>std::optional&lt; int &gt;</type>
          <declname>max_iter</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>res_tol</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>logger</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classMatrixBatchEll" kindref="compound">MatrixBatchEll</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cols_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>A Kokkos view which stores the column indices of non-zero components. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">batch_values</parametername>
</parameternamelist>
<parameterdescription>
<para>A Kokkos view which stores the values of non-zero elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_iter</parametername>
</parameternamelist>
<parameterdescription>
<para>maximal number of iterations for the solver, default 500. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">res_tol</parametername>
</parameternamelist>
<parameterdescription>
<para>residual tolerance parameter, to ensure convergence. Be careful! The residual provided here, set as relative residual, will be used as &quot;implicit residual&quot; in ginkgo solver. Default value is set to 1e-15. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">logger</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean parameter to save logger information. Default value false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="85" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="85" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classMatrixBatchEll_1ab25cdb8934847161731b83de4784dad7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; Kokkos::View&lt; int **, Kokkos::LayoutLeft, ExecSpace &gt;, Kokkos::View&lt; double ***, Kokkos::LayoutStride, ExecSpace &gt; &gt;</type>
        <definition>std::pair&lt; Kokkos::View&lt; int **, Kokkos::LayoutLeft, ExecSpace &gt;, Kokkos::View&lt; double ***, Kokkos::LayoutStride, ExecSpace &gt; &gt; MatrixBatchEll&lt; ExecSpace &gt;::get_batch_ell</definition>
        <argsstring>()</argsstring>
        <name>get_batch_ell</name>
        <qualifiedname>MatrixBatchEll::get_batch_ell</qualifiedname>
        <briefdescription>
<para>A function to get information about values and indices for the whole batch. Data is managed by two Kokkos Views stored on the host. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>idx_view Column indices for the non-zero values. </para>
</simplesect>
<simplesect kind="return"><para>vals_view The non-zero values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="118" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="118" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classMatrixBatchEll_1ad844ef96e8bc9033c931eb318d1f1e54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double MatrixBatchEll&lt; ExecSpace &gt;::get_ell_element</definition>
        <argsstring>(int batch_idx, int line_idx, int non_zero_col_idx) const</argsstring>
        <name>get_ell_element</name>
        <qualifiedname>MatrixBatchEll::get_ell_element</qualifiedname>
        <param>
          <type>int</type>
          <declname>batch_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>non_zero_col_idx</declname>
        </param>
        <briefdescription>
<para>A getter function for a value located at a specified place. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index in the batch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Line index inside the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">non_zero_col_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-zero index element in the line. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value of the component. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="143" column="12" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="143" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classMatrixBatchEll_1aa3d7d4b0603c631839070708ff574ba6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MatrixBatchEll&lt; ExecSpace &gt;::set_ell_element</definition>
        <argsstring>(int batch_idx, int line_idx, int non_zero_col_idx, double aij)</argsstring>
        <name>set_ell_element</name>
        <qualifiedname>MatrixBatchEll::set_ell_element</qualifiedname>
        <param>
          <type>int</type>
          <declname>batch_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>non_zero_col_idx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>aij</declname>
        </param>
        <briefdescription>
<para>A setter function to modify a value located at a specified place. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index in the batch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Line index inside the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">non_zero_col_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-zero index element in the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aij</parametername>
</parameternamelist>
<parameterdescription>
<para>New value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="160" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="160" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classMatrixBatchEll_1a85a10595895f36e45701697a6b3d2c59" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void MatrixBatchEll&lt; ExecSpace &gt;::setup_solver</definition>
        <argsstring>() final</argsstring>
        <name>setup_solver</name>
        <qualifiedname>MatrixBatchEll::setup_solver</qualifiedname>
        <reimplements refid="classMatrixBatch_1a9d2068033157c94e632788300a43c884">setup_solver</reimplements>
        <briefdescription>
<para>Perform a pre-process operation on the solver. Must be called after filling the matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>It uses parameters like maximum number of iterations and tolerance are used to instantiate a Ginkgo solver.</para>
<para>The stopping criterion is a reduction factor ||Ax-b||/||b||&lt;tol with max_iter maximum iterations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="178" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="178" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classMatrixBatchEll_1a899ef38788cbc5cb077519b6f71d51dd" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void MatrixBatchEll&lt; ExecSpace &gt;::solve</definition>
        <argsstring>(BatchedRHS const b) const final</argsstring>
        <name>solve</name>
        <qualifiedname>MatrixBatchEll::solve</qualifiedname>
        <reimplements refid="classMatrixBatch_1aed90bf340060a7bc8c24cf61771e212e">solve</reimplements>
        <param>
          <type><ref refid="classMatrixBatch_1aaefa005779305b357172ff993db97030" kindref="member">BatchedRHS</ref> const</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Solve the batched linear problem Ax=b. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">b</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D Kokkos::View storing the batched right-hand sides of the problem and receiving the corresponding solutions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="197" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="197" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classMatrixBatchEll_1a972e124276cf81e393a6590d53986a41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double MatrixBatchEll&lt; ExecSpace &gt;::norm</definition>
        <argsstring>(int batch_idx) const</argsstring>
        <name>norm</name>
        <qualifiedname>MatrixBatchEll::norm</qualifiedname>
        <param>
          <type>int</type>
          <declname>batch_idx</declname>
        </param>
        <briefdescription>
<para>A function returns the norm of a matrix located at batch_idx. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>integer, index of the matrix in the batch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value of the matrix infinite-norm. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="228" column="12" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="228" bodyend="259"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="classMatrix" kindref="compound">Matrix</ref> class which is able to manage and solve a batch of sparse linear systems. Executes on either CPU or GPU. It takes advantage of the sparse structure, and the only batched solver available in Ginkgo : Stabilised Bicg. The sparsity pattern is assumed to be the same for all matrices. ie the non-zero components are located at the same places for all matrices. This class uses the ELL storage format which needs two 1D arrays, one stores values the other column indices. The class returns these arrays (as Kokkos views) with the get_batch_idx_and_vals function, it is then possible to fill them outside the class. Tolerance and maximal number of iterations, which are parameters for the iterative solver, are set in the constructor. It is possible to get convergence information by activating the logger at constructor call. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ExecSpace</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution space,needed by Kokkos for allocations and parallelism. The simplest choice is to follow Kokkos, for that: specify Kokkos::DefaultExecutionSpace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>MatrixBatch&lt; ExecSpace &gt;</label>
        <link refid="classMatrixBatch"/>
      </node>
      <node id="1">
        <label>MatrixBatchEll&lt; ExecSpace &gt;</label>
        <link refid="classMatrixBatchEll"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>MatrixBatch&lt; ExecSpace &gt;</label>
        <link refid="classMatrixBatch"/>
      </node>
      <node id="1">
        <label>MatrixBatchEll&lt; ExecSpace &gt;</label>
        <link refid="classMatrixBatchEll"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" line="24" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix_batch_ell.hpp" bodystart="25" bodyend="260"/>
    <listofallmembers>
      <member refid="classMatrixBatch_1a4ca6fc98c1b218c3aa0a534d04b2a06a" prot="public" virt="non-virtual"><scope>MatrixBatchEll</scope><name>batch_size</name></member>
      <member refid="classMatrixBatchEll_1a30c88e7189252194c871907eaa2cc452" prot="private" virt="non-virtual"><scope>MatrixBatchEll</scope><name>batch_sparse_type</name></member>
      <member refid="classMatrixBatch_1aaefa005779305b357172ff993db97030" prot="public" virt="non-virtual"><scope>MatrixBatchEll</scope><name>BatchedRHS</name></member>
      <member refid="classMatrixBatchEll_1ab25cdb8934847161731b83de4784dad7" prot="public" virt="non-virtual"><scope>MatrixBatchEll</scope><name>get_batch_ell</name></member>
      <member refid="classMatrixBatchEll_1ad844ef96e8bc9033c931eb318d1f1e54" prot="public" virt="non-virtual"><scope>MatrixBatchEll</scope><name>get_ell_element</name></member>
      <member refid="classMatrixBatchEll_1a6ba8e2fff70dfd281218a3f3e0cada27" prot="private" virt="non-virtual"><scope>MatrixBatchEll</scope><name>m_batch_matrix_ell</name></member>
      <member refid="classMatrixBatchEll_1a7bf9e018082a902f15b2fc92b18c553b" prot="private" virt="non-virtual"><scope>MatrixBatchEll</scope><name>m_max_iter</name></member>
      <member refid="classMatrixBatchEll_1abcd5c621488437c545c8d2e3277dedfd" prot="private" virt="non-virtual"><scope>MatrixBatchEll</scope><name>m_solver</name></member>
      <member refid="classMatrixBatchEll_1ae2255fcb6a46000c229d67e0b8658654" prot="private" virt="non-virtual"><scope>MatrixBatchEll</scope><name>m_tol</name></member>
      <member refid="classMatrixBatchEll_1a78ab002e14c4b3f449009a20b3f25635" prot="private" virt="non-virtual"><scope>MatrixBatchEll</scope><name>m_with_logger</name></member>
      <member refid="classMatrixBatch_1aa36e5c69da8c424b977aae7ac390715c" prot="protected" virt="non-virtual"><scope>MatrixBatchEll</scope><name>MatrixBatch</name></member>
      <member refid="classMatrixBatchEll_1aaef2264db89e99beb1a012d190e95ecc" prot="public" virt="non-virtual"><scope>MatrixBatchEll</scope><name>MatrixBatchEll</name></member>
      <member refid="classMatrixBatchEll_1a2311f80607b4ed72e59c4bc94e8f75e7" prot="public" virt="non-virtual"><scope>MatrixBatchEll</scope><name>MatrixBatchEll</name></member>
      <member refid="classMatrixBatchEll_1a972e124276cf81e393a6590d53986a41" prot="public" virt="non-virtual"><scope>MatrixBatchEll</scope><name>norm</name></member>
      <member refid="classMatrixBatchEll_1aa3d7d4b0603c631839070708ff574ba6" prot="public" virt="non-virtual"><scope>MatrixBatchEll</scope><name>set_ell_element</name></member>
      <member refid="classMatrixBatchEll_1a85a10595895f36e45701697a6b3d2c59" prot="public" virt="virtual"><scope>MatrixBatchEll</scope><name>setup_solver</name></member>
      <member refid="classMatrixBatch_1a62a55966b021f64906841fb38764dbc0" prot="public" virt="non-virtual"><scope>MatrixBatchEll</scope><name>size</name></member>
      <member refid="classMatrixBatchEll_1a899ef38788cbc5cb077519b6f71d51dd" prot="public" virt="virtual"><scope>MatrixBatchEll</scope><name>solve</name></member>
      <member refid="classMatrixBatchEll_1a0af3c0cd64e22375c9a7001995c49e14" prot="private" virt="non-virtual"><scope>MatrixBatchEll</scope><name>solver_type</name></member>
      <member refid="classMatrixBatch_1ad51f64ea5ba9ccd34f7bb1aa2993f547" prot="public" virt="virtual"><scope>MatrixBatchEll</scope><name>~MatrixBatch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
