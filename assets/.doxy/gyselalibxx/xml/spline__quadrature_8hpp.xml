<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="spline__quadrature_8hpp" kind="file" language="C++">
    <compoundname>spline_quadrature.hpp</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">ddc/ddc.hpp</includes>
    <includes refid="ddc__aliases_8hpp" local="yes">ddc_aliases.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/spline_quadrature.hpp</label>
        <link refid="spline__quadrature_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ddc_aliases.hpp</label>
        <link refid="ddc__aliases_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="3">
        <label>ddc/ddc.hpp</label>
      </node>
      <node id="5">
        <label>ddc/kernels/splines.hpp</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="spline__quadrature_8hpp_1a7ba2798b4e65365dc3ddf922cad024ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Grid1D</type>
          </param>
          <param>
            <type>class SplineBuilder</type>
          </param>
        </templateparamlist>
        <type>host_t&lt; DFieldMem&lt; IdxRange&lt; Grid1D &gt; &gt; &gt;</type>
        <definition>host_t&lt; DFieldMem&lt; IdxRange&lt; Grid1D &gt; &gt; &gt; spline_quadrature_coefficients_1d</definition>
        <argsstring>(IdxRange&lt; Grid1D &gt; const &amp;idx_range, SplineBuilder const &amp;builder)</argsstring>
        <name>spline_quadrature_coefficients_1d</name>
        <param>
          <type>IdxRange&lt; Grid1D &gt; const &amp;</type>
          <declname>idx_range</declname>
        </param>
        <param>
          <type>SplineBuilder const &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Get the spline quadrature coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>To integrate a function with a spline quadrature, we use:</para>
<para><formula id="310">$ \int_a^b f(x)dx
\simeq \sum_{i = 0}^{N_{\text{basis}} -1 } c_i  \int_a^b b_{i,d}()x dx $</formula>,</para>
<para>which rewritten gives</para>
<para><formula id="311">$ \int_a^b f(x)dx
\simeq \sum_{i = 0}^{N_{\text{basis}} - 1} q_i f_i $</formula>,</para>
<para>with<itemizedlist>
<listitem><para><formula id="312">$\{ f_i\}_i $</formula> the values of the function at the interpolation points;</para>
</listitem><listitem><para><formula id="313">$ q = \{ q_i\}_i $</formula> the quadrature coefficients we compute thanks to <formula id="314">$ q B^T = I_b $</formula>,<itemizedlist>
<listitem><para>with <formula id="277">$ B $</formula> the matrix of B-splines <formula id="315">$ B_{ij} = b_{j,d}(x_i)$</formula>,</para>
</listitem><listitem><para>and <formula id="316">$ I_b = \int_a^b b_{i,d}(x)dx $</formula> the integrated B-splines.</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para>More details are given in Emily Bourne&apos;s thesis &quot;Non-Uniform Numerical Schemes for the Modelling of Turbulence
in the 5D GYSELA Code&quot;. December 2022.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range where the functions we want to integrate are defined. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">builder</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline builder describing the way in which splines would be constructed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A chunk with the quadrature coefficients <formula id="317">$ q $</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/spline_quadrature.hpp" line="58" column="8" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/spline_quadrature.hpp" bodystart="58" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="spline__quadrature_8hpp_1a23fc7a03f5433595ee746bbddafded55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecSpace</type>
          </param>
          <param>
            <type>class...</type>
            <declname>DDims</declname>
            <defname>DDims</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>SplineBuilders</declname>
            <defname>SplineBuilders</defname>
          </param>
        </templateparamlist>
        <type>DFieldMem&lt; IdxRange&lt; DDims... &gt;, typename ExecSpace::memory_space &gt;</type>
        <definition>DFieldMem&lt; IdxRange&lt; DDims... &gt;, typename ExecSpace::memory_space &gt; spline_quadrature_coefficients</definition>
        <argsstring>(IdxRange&lt; DDims... &gt; const &amp;idx_range, SplineBuilders const &amp;... builders)</argsstring>
        <name>spline_quadrature_coefficients</name>
        <param>
          <type>IdxRange&lt; DDims... &gt; const &amp;</type>
          <declname>idx_range</declname>
        </param>
        <param>
          <type>SplineBuilders const &amp;...</type>
          <declname>builders</declname>
        </param>
        <briefdescription>
<para>Get the spline quadrature coefficients in ND from N 1D quadrature coefficient. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculate the quadrature coefficients for the spline quadrature method defined on the provided index range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range on which the coefficients will be defined. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">builders</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline builder used for the quadrature coefficients in the different dimensions.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The coefficients which define the spline quadrature method in ND. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/spline_quadrature.hpp" line="97" column="11" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/spline_quadrature.hpp" bodystart="97" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File providing quadrature coefficients via a spline quadrature. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ddc/ddc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ddc_aliases.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Gr</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">1D&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">CoefficientFieldMem1D_host<sp/>=<sp/>host_t&lt;DFieldMem&lt;IdxRange&lt;Grid1D&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Gr</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">1D,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SplineBuilder&gt;</highlight></codeline>
<codeline lineno="58" refid="spline__quadrature_8hpp_1a7ba2798b4e65365dc3ddf922cad024ae" refkind="member"><highlight class="normal">host_t&lt;DFieldMem&lt;IdxRange&lt;Grid1D&gt;&gt;&gt;<sp/><ref refid="spline__quadrature_8hpp_1a7ba2798b4e65365dc3ddf922cad024ae" kindref="member">spline_quadrature_coefficients_1d</ref>(</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdxRange&lt;Grid1D&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>idx_range,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplineBuilder<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>builder)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplineBuilder::s_nbc_xmin<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>spline<sp/>quadrature<sp/>requires<sp/>a<sp/>builder<sp/>which<sp/>can<sp/>construct<sp/>the<sp/>coefficients<sp/>using<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;only<sp/>the<sp/>values<sp/>at<sp/>the<sp/>interpolation<sp/>points.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplineBuilder::s_nbc_xmax<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>spline<sp/>quadrature<sp/>requires<sp/>a<sp/>builder<sp/>which<sp/>can<sp/>construct<sp/>the<sp/>coefficients<sp/>using<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;only<sp/>the<sp/>values<sp/>at<sp/>the<sp/>interpolation<sp/>points.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>spline<sp/>builder<sp/>quadrature<sp/>coeffs<sp/>are<sp/>not<sp/>available<sp/>on<sp/>device,<sp/>need<sp/>host<sp/>allocated<sp/>builder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/CExA-project/ddc/issues/598</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::is_same_v&lt;typename<sp/>SplineBuilder::memory_space,<sp/>Kokkos::HostSpace&gt;),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SplineBuilder<sp/>must<sp/>be<sp/>host<sp/>allocated.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>DFieldMem&lt;IdxRange&lt;Grid1D&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SplineBuilder::memory_space&gt;<sp/>quadrature_coefficients(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.interpolation_domain());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(std::ignore,<sp/>quadrature_coefficients,<sp/>std::ignore)<sp/>=<sp/>builder.quadrature_coefficients();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ddc::create_mirror_and_copy(quadrature_coefficients[idx_range]);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ExecSpace,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>DDims,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>SplineBuilders&gt;</highlight></codeline>
<codeline lineno="97" refid="spline__quadrature_8hpp_1a23fc7a03f5433595ee746bbddafded55" refkind="member"><highlight class="normal">DFieldMem&lt;IdxRange&lt;DDims...&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExecSpace::memory_space&gt;<sp/><ref refid="spline__quadrature_8hpp_1a23fc7a03f5433595ee746bbddafded55" kindref="member">spline_quadrature_coefficients</ref>(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdxRange&lt;DDims...&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>idx_range,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplineBuilders<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;...<sp/>builders)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((std::is_same_v&lt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DDims::continuous_dimension_type,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SplineBuilders::continuous_dimension_type&gt;<sp/>and<sp/>...));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>coefficients<sp/>for<sp/>each<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;CoefficientFieldMem1D_host&lt;DDims&gt;...&gt;<sp/>current_dim_coeffs(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spline__quadrature_8hpp_1a7ba2798b4e65365dc3ddf922cad024ae" kindref="member">spline_quadrature_coefficients_1d</ref>(ddc::select&lt;DDims&gt;(idx_range),<sp/>builders)...);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>ND<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>DFieldMem&lt;IdxRange&lt;DDims...&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExecSpace::memory_space&gt;<sp/>coefficients(idx_range);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>coefficients_host<sp/>=<sp/>ddc::create_mirror(get_field(coefficients));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial<sp/>loop<sp/>is<sp/>used<sp/>due<sp/>to<sp/>nvcc<sp/>bug<sp/>concerning<sp/>functions<sp/>with<sp/>variadic<sp/>template<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(see<sp/>https://github.com/kokkos/kokkos/pull/7059)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ddc::for_each(idx_range,<sp/>[&amp;](Idx&lt;DDims...&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idim)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply<sp/>the<sp/>1D<sp/>coefficients<sp/>by<sp/>one<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefficients_host(idim)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(std::get&lt;CoefficientFieldMem1D_host&lt;DDims&gt;&gt;(current_dim_coeffs)(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddc::select&lt;DDims&gt;(idim))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>...<sp/>*<sp/>1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ddc::parallel_deepcopy(coefficients,<sp/>coefficients_host);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coefficients;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/spline_quadrature.hpp"/>
  </compounddef>
</doxygen>
