<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classSplinePolarFootFinder" kind="class" language="C++" prot="public">
    <compoundname>SplinePolarFootFinder</compoundname>
    <basecompoundref refid="classIPolarFootFinder" prot="public" virt="non-virtual">IPolarFootFinder&lt; SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type1, SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type2, ddc::to_type_seq_t&lt; LogicalToPhysicalMapping::CoordResult &gt;, IdxRangeBatched, SplineRThetaBuilderAdvection::memory_space &gt;</basecompoundref>
    <includes refid="spline__polar__foot__finder_8hpp" local="no">spline_polar_foot_finder.hpp</includes>
    <templateparamlist>
      <param>
        <type>class IdxRangeBatched</type>
      </param>
      <param>
        <type>class TimeStepperBuilder</type>
      </param>
      <param>
        <type>class LogicalToPhysicalMapping</type>
      </param>
      <param>
        <type>class LogicalToPseudoPhysicalMapping</type>
      </param>
      <param>
        <type>class SplineRThetaBuilderAdvection</type>
      </param>
      <param>
        <type>class SplineRThetaEvaluatorAdvection</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1aea7bc16fdc724a4d2cee1076dc58f95d" prot="private" static="no">
        <type><ref refid="classIPolarFootFinder" kindref="compound">IPolarFootFinder</ref>&lt; typename SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type1, typename SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type2, ddc::to_type_seq_t&lt; typename LogicalToPhysicalMapping::CoordResult &gt;, IdxRangeBatched, typename SplineRThetaBuilderAdvection::memory_space &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::base_type =  IPolarFootFinder&lt; typename SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type1, typename SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type2, ddc::to_type_seq_t&lt;typename LogicalToPhysicalMapping::CoordResult&gt;, IdxRangeBatched, typename SplineRThetaBuilderAdvection::memory_space&gt;</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <qualifiedname>SplinePolarFootFinder::base_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="82" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a583f7299c6887d40a5ec363549e89ba9" prot="private" static="no">
        <type>inverse_mapping_t&lt; LogicalToPseudoPhysicalMapping &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::PseudoPhysicalToLogicalMapping =  inverse_mapping_t&lt;LogicalToPseudoPhysicalMapping&gt;</definition>
        <argsstring></argsstring>
        <name>PseudoPhysicalToLogicalMapping</name>
        <qualifiedname>SplinePolarFootFinder::PseudoPhysicalToLogicalMapping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="99" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1adc90a7a89091b5ae0dff71697666b57d" prot="private" static="no">
        <type>typename SplineRThetaBuilderAdvection::exec_space</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::ExecSpace =  typename SplineRThetaBuilderAdvection::exec_space</definition>
        <argsstring></argsstring>
        <name>ExecSpace</name>
        <qualifiedname>SplinePolarFootFinder::ExecSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="102" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a41cccd0c523184a0385fd810ac0bb852" prot="private" static="no">
        <type>typename ExecSpace::memory_space</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::MemSpace =  typename ExecSpace::memory_space</definition>
        <argsstring></argsstring>
        <name>MemSpace</name>
        <qualifiedname>SplinePolarFootFinder::MemSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="103" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a92638aa678780ecb35339709edf6c8ed" prot="private" static="no">
        <type>typename LogicalToPseudoPhysicalMapping::cartesian_tag_x</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::X_adv =  typename LogicalToPseudoPhysicalMapping::cartesian_tag_x</definition>
        <argsstring></argsstring>
        <name>X_adv</name>
        <qualifiedname>SplinePolarFootFinder::X_adv</qualifiedname>
        <briefdescription>
<para>Tag the first dimension in the advection domain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="107" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1aa5bdd1105b7fefc51f520a1e573561ab" prot="private" static="no">
        <type>typename LogicalToPseudoPhysicalMapping::cartesian_tag_y</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::Y_adv =  typename LogicalToPseudoPhysicalMapping::cartesian_tag_y</definition>
        <argsstring></argsstring>
        <name>Y_adv</name>
        <qualifiedname>SplinePolarFootFinder::Y_adv</qualifiedname>
        <briefdescription>
<para>Tag the second dimension in the advection domain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="111" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1abc1e2fdffb10bf667b803e59302c1e33" prot="private" static="no">
        <type>typename LogicalToPseudoPhysicalMapping::CoordResult</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::CoordXY_adv =  typename LogicalToPseudoPhysicalMapping::CoordResult</definition>
        <argsstring></argsstring>
        <name>CoordXY_adv</name>
        <qualifiedname>SplinePolarFootFinder::CoordXY_adv</qualifiedname>
        <briefdescription>
<para>The coordinate type associated to the dimensions in the advection domain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="115" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a5f940bf9c6a3bacedcf0a64490193eab" prot="private" static="no">
        <type>ddc::to_type_seq_t&lt; CoordXY_adv &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::PseudoCartesianBasis =  ddc::to_type_seq_t&lt;CoordXY_adv&gt;</definition>
        <argsstring></argsstring>
        <name>PseudoCartesianBasis</name>
        <qualifiedname>SplinePolarFootFinder::PseudoCartesianBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="117" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1ad1831b40ec656daa4ab67826a13b61d4" prot="private" static="no">
        <type>Coord&lt; <ref refid="classSplinePolarFootFinder_1ace88cae6d3bedc6053d79f8b1489566c" kindref="member">R</ref>, <ref refid="classSplinePolarFootFinder_1a62a4d72ada8c3cad0dc33f0637568793" kindref="member">Theta</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::CoordRTheta =  Coord&lt;R, Theta&gt;</definition>
        <argsstring></argsstring>
        <name>CoordRTheta</name>
        <qualifiedname>SplinePolarFootFinder::CoordRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="119" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a2ec51a7c30387d6ac531352768a9f2ba" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="classSplinePolarFootFinder_1a51e91cc4664a2e74009c09a44cbe61fe" kindref="member">GridR</ref>, <ref refid="classSplinePolarFootFinder_1aa0be268c091cead51c2ca1368f95ee76" kindref="member">GridTheta</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::IdxRangeRTheta =  IdxRange&lt;GridR, GridTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeRTheta</name>
        <qualifiedname>SplinePolarFootFinder::IdxRangeRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="121" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1abfb99e756e53309eab48e31c07d79f8a" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="classSplinePolarFootFinder_1a51e91cc4664a2e74009c09a44cbe61fe" kindref="member">GridR</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::IdxRangeR =  IdxRange&lt;GridR&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeR</name>
        <qualifiedname>SplinePolarFootFinder::IdxRangeR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="122" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1ae68b5e8f83571ca243efd7d0d0195d7e" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="classSplinePolarFootFinder_1aa0be268c091cead51c2ca1368f95ee76" kindref="member">GridTheta</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::IdxRangeTheta =  IdxRange&lt;GridTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeTheta</name>
        <qualifiedname>SplinePolarFootFinder::IdxRangeTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="123" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a2373f04a62dab3f7fada0b6c6d8ed082" prot="private" static="no">
        <type>Idx&lt; <ref refid="classSplinePolarFootFinder_1a51e91cc4664a2e74009c09a44cbe61fe" kindref="member">GridR</ref>, <ref refid="classSplinePolarFootFinder_1aa0be268c091cead51c2ca1368f95ee76" kindref="member">GridTheta</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::IdxRTheta =  Idx&lt;GridR, GridTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRTheta</name>
        <qualifiedname>SplinePolarFootFinder::IdxRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="124" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1aab1eb09e44e2626910dbb7e36321d6cc" prot="private" static="no">
        <type>Idx&lt; <ref refid="classSplinePolarFootFinder_1a51e91cc4664a2e74009c09a44cbe61fe" kindref="member">GridR</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::IdxR =  Idx&lt;GridR&gt;</definition>
        <argsstring></argsstring>
        <name>IdxR</name>
        <qualifiedname>SplinePolarFootFinder::IdxR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="125" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1af90b24a4664d3d635e2ea859a8356ac5" prot="private" static="no">
        <type>Idx&lt; <ref refid="classSplinePolarFootFinder_1aa0be268c091cead51c2ca1368f95ee76" kindref="member">GridTheta</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::IdxTheta =  Idx&lt;GridTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxTheta</name>
        <qualifiedname>SplinePolarFootFinder::IdxTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="126" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1adec2782ed7ecdff09e6940f13bc0e52c" prot="private" static="no">
        <type>typename IdxRangeOperator::discrete_element_type</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::IdxOperator =  typename IdxRangeOperator::discrete_element_type</definition>
        <argsstring></argsstring>
        <name>IdxOperator</name>
        <qualifiedname>SplinePolarFootFinder::IdxOperator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="127" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a6730b616673dd6d5475d04ef6805f5cc" prot="private" static="no">
        <type><ref refid="classCartesianToCircular" kindref="compound">CartesianToCircular</ref>&lt; X_adv, Y_adv, <ref refid="classSplinePolarFootFinder_1ace88cae6d3bedc6053d79f8b1489566c" kindref="member">R</ref>, <ref refid="classSplinePolarFootFinder_1a62a4d72ada8c3cad0dc33f0637568793" kindref="member">Theta</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::PseudoCartesianToCircular =  CartesianToCircular&lt;X_adv, Y_adv, R, Theta&gt;</definition>
        <argsstring></argsstring>
        <name>PseudoCartesianToCircular</name>
        <qualifiedname>SplinePolarFootFinder::PseudoCartesianToCircular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="129" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a527685c0362c862a43f8ee7775d94d80" prot="private" static="no">
        <type><ref refid="classCombinedMapping" kindref="compound">CombinedMapping</ref>&lt; LogicalToPhysicalMapping, <ref refid="classCartesianToCircular" kindref="compound">PseudoCartesianToCircular</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::PseudoPhysicalToPhysicalMapping =  CombinedMapping&lt;LogicalToPhysicalMapping, PseudoCartesianToCircular&gt;</definition>
        <argsstring></argsstring>
        <name>PseudoPhysicalToPhysicalMapping</name>
        <qualifiedname>SplinePolarFootFinder::PseudoPhysicalToPhysicalMapping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="130" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1ac4cbe709d1cb35200bcc9966bcad5026" prot="private" static="no">
        <type>typename SplineRThetaBuilderAdvection::bsplines_type1</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::BSplinesR =  typename SplineRThetaBuilderAdvection::bsplines_type1</definition>
        <argsstring></argsstring>
        <name>BSplinesR</name>
        <qualifiedname>SplinePolarFootFinder::BSplinesR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="133" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1ae5abd972e6dd0a0877f48234354d85d4" prot="private" static="no">
        <type>typename SplineRThetaBuilderAdvection::bsplines_type2</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::BSplinesTheta =  typename SplineRThetaBuilderAdvection::bsplines_type2</definition>
        <argsstring></argsstring>
        <name>BSplinesTheta</name>
        <qualifiedname>SplinePolarFootFinder::BSplinesTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="134" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a30d3c2a5477eebd67cf96d90d71fc2b3" prot="private" static="no">
        <type>ddc::detail::convert_type_seq_to_discrete_domain_t&lt; ddc::type_seq_replace_t&lt; ddc::to_type_seq_t&lt; <ref refid="classSplinePolarFootFinder_1a592e542edca9e79dd8786ce11327582a" kindref="member">IdxRangeOperator</ref> &gt;, ddc::detail::TypeSeq&lt; <ref refid="classSplinePolarFootFinder_1a51e91cc4664a2e74009c09a44cbe61fe" kindref="member">GridR</ref>, <ref refid="classSplinePolarFootFinder_1aa0be268c091cead51c2ca1368f95ee76" kindref="member">GridTheta</ref> &gt;, ddc::detail::TypeSeq&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref>, <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt; &gt; &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::IdxRangeSplineBatched =  ddc::detail::convert_type_seq_to_discrete_domain_t&lt;ddc::type_seq_replace_t&lt; ddc::to_type_seq_t&lt;IdxRangeOperator&gt;, ddc::detail::TypeSeq&lt;GridR, GridTheta&gt;, ddc::detail::TypeSeq&lt;BSplinesR, BSplinesTheta&gt; &gt;&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeSplineBatched</name>
        <qualifiedname>SplinePolarFootFinder::IdxRangeSplineBatched</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="136" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1ad9757fb91afefddf169426ae59204f6b" prot="private" static="no">
        <type>typename TimeStepperBuilder::template time_stepper_t&lt; FieldMem&lt; CoordRTheta, IdxRangeBatched, MemSpace &gt;, <ref refid="classVectorFieldMem" kindref="compound">DVectorFieldMem</ref>&lt; IdxRangeBatched, VectorIndexSet&lt; X_adv, Y_adv &gt;, MemSpace &gt;, ExecSpace &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::TimeStepper =  typename TimeStepperBuilder::template time_stepper_t&lt; FieldMem&lt;CoordRTheta, IdxRangeBatched, MemSpace&gt;, DVectorFieldMem&lt;IdxRangeBatched, VectorIndexSet&lt;X_adv, Y_adv&gt;, MemSpace&gt;, ExecSpace&gt;</definition>
        <argsstring></argsstring>
        <name>TimeStepper</name>
        <qualifiedname>SplinePolarFootFinder::TimeStepper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="142" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1ad07796a01c78348d540d9f80a404d1dc" prot="public" static="no">
        <type>Field&lt; CoordRTheta, <ref refid="classSplinePolarFootFinder_1a592e542edca9e79dd8786ce11327582a" kindref="member">IdxRangeOperator</ref>, <ref refid="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" kindref="member">memory_space</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::CFieldFeet =  Field&lt;CoordRTheta, IdxRangeOperator, memory_space&gt;</definition>
        <argsstring></argsstring>
        <name>CFieldFeet</name>
        <qualifiedname>SplinePolarFootFinder::CFieldFeet</qualifiedname>
        <briefdescription>
<para>The type of a field of (r, theta) coordinates at every grid point, saved on a compatible memory space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="161" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a2039ffcb222e9318d4b65a78f66f30b4" prot="public" static="no">
        <type>ConstField&lt; CoordRTheta, <ref refid="classSplinePolarFootFinder_1a592e542edca9e79dd8786ce11327582a" kindref="member">IdxRangeOperator</ref>, <ref refid="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" kindref="member">memory_space</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::CConstFieldFeet =  ConstField&lt;CoordRTheta, IdxRangeOperator, memory_space&gt;</definition>
        <argsstring></argsstring>
        <name>CConstFieldFeet</name>
        <qualifiedname>SplinePolarFootFinder::CConstFieldFeet</qualifiedname>
        <briefdescription>
<para>The type of a constant field of (r, theta) coordinates at every grid point, saved on a compatible memory space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="167" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1adbf76668dde4d640ee4fe9a541904c32" prot="public" static="no">
        <type><ref refid="classVectorField" kindref="compound">DVectorField</ref>&lt; <ref refid="classSplinePolarFootFinder_1a592e542edca9e79dd8786ce11327582a" kindref="member">IdxRangeOperator</ref>, PseudoCartesianBasis, <ref refid="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" kindref="member">memory_space</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::DVectorFieldAdvection =  DVectorField&lt;IdxRangeOperator, PseudoCartesianBasis, memory_space&gt;</definition>
        <argsstring></argsstring>
        <name>DVectorFieldAdvection</name>
        <qualifiedname>SplinePolarFootFinder::DVectorFieldAdvection</qualifiedname>
        <briefdescription>
<para>The type of a vector field defined on the pseudo-Cartesian basis at every grid point, saved on a compatible memory space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="173" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a473fb430dbdadb3e420074a6ef137811" prot="public" static="no">
        <type><ref refid="classVectorField" kindref="compound">DVectorConstField</ref>&lt; <ref refid="classSplinePolarFootFinder_1a592e542edca9e79dd8786ce11327582a" kindref="member">IdxRangeOperator</ref>, PseudoCartesianBasis, <ref refid="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" kindref="member">memory_space</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::DVectorConstFieldAdvection =  DVectorConstField&lt;IdxRangeOperator, PseudoCartesianBasis, memory_space&gt;</definition>
        <argsstring></argsstring>
        <name>DVectorConstFieldAdvection</name>
        <qualifiedname>SplinePolarFootFinder::DVectorConstFieldAdvection</qualifiedname>
        <briefdescription>
<para>The type of a constant vector field defined on the pseudo-Cartesian basis at every grid point, saved on a compatible memory space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="180" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a5c95805a7ed946296977d376561395e7" prot="public" static="no">
        <type><ref refid="classVectorFieldMem" kindref="compound">DVectorFieldMem</ref>&lt; IdxRangeSplineBatched, PseudoCartesianBasis, <ref refid="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" kindref="member">memory_space</ref> &gt;</type>
        <definition>using SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::VectorSplineCoeffsMem =  DVectorFieldMem&lt;IdxRangeSplineBatched, PseudoCartesianBasis, memory_space&gt;</definition>
        <argsstring></argsstring>
        <name>VectorSplineCoeffsMem</name>
        <qualifiedname>SplinePolarFootFinder::VectorSplineCoeffsMem</qualifiedname>
        <briefdescription>
<para>The type of 2 batched splines representing the x and y components of a vector on the polar plane on a compatible memory space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="187" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a51e91cc4664a2e74009c09a44cbe61fe" prot="public" static="no">
        <type>GridRadial</type>
        <definition>using IPolarFootFinder&lt; GridRadial, GridPoloidal, VectorIndexSetAdvDims, IdxRangeBatched, MemorySpace &gt;::GridR =  GridRadial</definition>
        <argsstring></argsstring>
        <name>GridR</name>
        <qualifiedname>SplinePolarFootFinder::GridR</qualifiedname>
        <briefdescription>
<para>The continuous radial dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="90" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/ipolar_foot_finder.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1aa0be268c091cead51c2ca1368f95ee76" prot="public" static="no">
        <type>GridPoloidal</type>
        <definition>using IPolarFootFinder&lt; GridRadial, GridPoloidal, VectorIndexSetAdvDims, IdxRangeBatched, MemorySpace &gt;::GridTheta =  GridPoloidal</definition>
        <argsstring></argsstring>
        <name>GridTheta</name>
        <qualifiedname>SplinePolarFootFinder::GridTheta</qualifiedname>
        <briefdescription>
<para>The continuous poloidal dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="91" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/ipolar_foot_finder.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a592e542edca9e79dd8786ce11327582a" prot="public" static="no">
        <type>IdxRangeBatched</type>
        <definition>using IPolarFootFinder&lt; GridRadial, GridPoloidal, VectorIndexSetAdvDims, IdxRangeBatched, MemorySpace &gt;::IdxRangeOperator =  IdxRangeBatched</definition>
        <argsstring></argsstring>
        <name>IdxRangeOperator</name>
        <qualifiedname>SplinePolarFootFinder::IdxRangeOperator</qualifiedname>
        <briefdescription>
<para>The type of the index range over which the operator works. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="92" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/ipolar_foot_finder.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" prot="public" static="no">
        <type>MemorySpace</type>
        <definition>using IPolarFootFinder&lt; GridRadial, GridPoloidal, VectorIndexSetAdvDims, IdxRangeBatched, MemorySpace &gt;::memory_space =  MemorySpace</definition>
        <argsstring></argsstring>
        <name>memory_space</name>
        <qualifiedname>SplinePolarFootFinder::memory_space</qualifiedname>
        <briefdescription>
<para>The type of the memory space where the field is saved (CPU vs GPU). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="93" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/ipolar_foot_finder.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1ace88cae6d3bedc6053d79f8b1489566c" prot="public" static="no">
        <type>typename GridR::continuous_dimension_type</type>
        <definition>using IPolarFootFinder&lt; GridRadial, GridPoloidal, VectorIndexSetAdvDims, IdxRangeBatched, MemorySpace &gt;::R =  typename GridR::continuous_dimension_type</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>SplinePolarFootFinder::R</qualifiedname>
        <briefdescription>
<para>The continuous radial dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="94" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/ipolar_foot_finder.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a62a4d72ada8c3cad0dc33f0637568793" prot="public" static="no">
        <type>typename GridTheta::continuous_dimension_type</type>
        <definition>using IPolarFootFinder&lt; GridRadial, GridPoloidal, VectorIndexSetAdvDims, IdxRangeBatched, MemorySpace &gt;::Theta =  typename GridTheta::continuous_dimension_type</definition>
        <argsstring></argsstring>
        <name>Theta</name>
        <qualifiedname>SplinePolarFootFinder::Theta</qualifiedname>
        <briefdescription>
<para>The continuous poloidal dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="95" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/ipolar_foot_finder.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSplinePolarFootFinder_1a8a0925a2865c4685111cc1d5ff7bff4c" prot="public" static="no">
        <type>VectorIndexSetAdvDims</type>
        <definition>using IPolarFootFinder&lt; GridRadial, GridPoloidal, VectorIndexSetAdvDims, IdxRangeBatched, MemorySpace &gt;::VectorIndexSetAdvectionDims =  VectorIndexSetAdvDims</definition>
        <argsstring></argsstring>
        <name>VectorIndexSetAdvectionDims</name>
        <qualifiedname>SplinePolarFootFinder::VectorIndexSetAdvectionDims</qualifiedname>
        <briefdescription>
<para>The continuous radial dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="96" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/ipolar_foot_finder.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classSplinePolarFootFinder_1aa34618ceff859c9532754a4295f35b36" prot="private" static="no" mutable="no">
        <type>TimeStepperBuilder const  &amp;</type>
        <definition>TimeStepperBuilder const&amp; SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::m_time_stepper_builder</definition>
        <argsstring></argsstring>
        <name>m_time_stepper_builder</name>
        <qualifiedname>SplinePolarFootFinder::m_time_stepper_builder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="147" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSplinePolarFootFinder_1a9b088c0e7e7cd0d837d38718cfdb6c9c" prot="private" static="no" mutable="no">
        <type>LogicalToPseudoPhysicalMapping</type>
        <definition>LogicalToPseudoPhysicalMapping SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::m_logical_to_pseudo_physical</definition>
        <argsstring></argsstring>
        <name>m_logical_to_pseudo_physical</name>
        <qualifiedname>SplinePolarFootFinder::m_logical_to_pseudo_physical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="149" column="36" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSplinePolarFootFinder_1aab1186eff57dce5e9ef175fe6d16e351" prot="private" static="no" mutable="no">
        <type>PseudoPhysicalToLogicalMapping</type>
        <definition>PseudoPhysicalToLogicalMapping SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::m_pseudo_physical_to_logical</definition>
        <argsstring></argsstring>
        <name>m_pseudo_physical_to_logical</name>
        <qualifiedname>SplinePolarFootFinder::m_pseudo_physical_to_logical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="150" column="36" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSplinePolarFootFinder_1a56d2f3dabe971daf5e8de82417d1cbe9" prot="private" static="no" mutable="no">
        <type><ref refid="classCombinedMapping" kindref="compound">PseudoPhysicalToPhysicalMapping</ref></type>
        <definition>PseudoPhysicalToPhysicalMapping SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::m_pseudo_physical_to_physical</definition>
        <argsstring></argsstring>
        <name>m_pseudo_physical_to_physical</name>
        <qualifiedname>SplinePolarFootFinder::m_pseudo_physical_to_physical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="151" column="37" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSplinePolarFootFinder_1a2070c2208ecf9c2426269db6ec8f7254" prot="private" static="no" mutable="no">
        <type>SplineRThetaBuilderAdvection const  &amp;</type>
        <definition>SplineRThetaBuilderAdvection const&amp; SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::m_builder_advection_field</definition>
        <argsstring></argsstring>
        <name>m_builder_advection_field</name>
        <qualifiedname>SplinePolarFootFinder::m_builder_advection_field</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="153" column="40" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSplinePolarFootFinder_1a042eaa82d42cf9060fa4029cff1bfd99" prot="private" static="no" mutable="no">
        <type>SplineRThetaEvaluatorAdvection const  &amp;</type>
        <definition>SplineRThetaEvaluatorAdvection const&amp; SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::m_evaluator_advection_field</definition>
        <argsstring></argsstring>
        <name>m_evaluator_advection_field</name>
        <qualifiedname>SplinePolarFootFinder::m_evaluator_advection_field</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="154" column="42" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classSplinePolarFootFinder_1a9253aaee6ab75941419a5020398757f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::SplinePolarFootFinder</definition>
        <argsstring>(IdxRangeBatched const &amp;idx_range_operator, TimeStepperBuilder const &amp;time_stepper_builder, LogicalToPhysicalMapping const &amp;logical_to_physical_mapping, LogicalToPseudoPhysicalMapping const &amp;logical_to_pseudo_physical_mapping, SplineRThetaBuilderAdvection const &amp;builder_advection_field, SplineRThetaEvaluatorAdvection const &amp;evaluator_advection_field, double epsilon=1e-12)</argsstring>
        <name>SplinePolarFootFinder</name>
        <qualifiedname>SplinePolarFootFinder::SplinePolarFootFinder</qualifiedname>
        <param>
          <type>IdxRangeBatched const &amp;</type>
          <declname>idx_range_operator</declname>
        </param>
        <param>
          <type>TimeStepperBuilder const &amp;</type>
          <declname>time_stepper_builder</declname>
        </param>
        <param>
          <type>LogicalToPhysicalMapping const &amp;</type>
          <declname>logical_to_physical_mapping</declname>
        </param>
        <param>
          <type>LogicalToPseudoPhysicalMapping const &amp;</type>
          <declname>logical_to_pseudo_physical_mapping</declname>
        </param>
        <param>
          <type>SplineRThetaBuilderAdvection const &amp;</type>
          <declname>builder_advection_field</declname>
        </param>
        <param>
          <type>SplineRThetaEvaluatorAdvection const &amp;</type>
          <declname>evaluator_advection_field</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>1e-12</defval>
        </param>
        <briefdescription>
<para>Instantiate a time integration method for the advection operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_range_operator</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range on which the operator should act. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time_stepper_builder</parametername>
</parameternamelist>
<parameterdescription>
<para>A builder for the time integration method used for the characteristic equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">logical_to_physical_mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping from the logical domain to the physical domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">logical_to_pseudo_physical_mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping from the logical domain to the pseudo-physical domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">builder_advection_field</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline builder which computes the spline representation of the advection field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">evaluator_advection_field</parametername>
</parameternamelist>
<parameterdescription>
<para>The B-splines evaluator to evaluate the advection field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="17">$ \varepsilon $</formula> parameter used for the linearisation of the advection field around the central point.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classITimeStepper" kindref="compound">ITimeStepper</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="215" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="215" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classSplinePolarFootFinder_1acd4731e29b30f28ded8b3e9a98b995ee" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::operator()</definition>
        <argsstring>(CFieldFeet feet, DVectorConstField&lt; IdxRangeOperator, VectorIndexSetAdvectionDims, memory_space &gt; advection_field, double dt) const final</argsstring>
        <name>operator()</name>
        <qualifiedname>SplinePolarFootFinder::operator()</qualifiedname>
        <param>
          <type><ref refid="classSplinePolarFootFinder_1ad07796a01c78348d540d9f80a404d1dc" kindref="member">CFieldFeet</ref></type>
          <declname>feet</declname>
        </param>
        <param>
          <type><ref refid="classVectorField" kindref="compound">DVectorConstField</ref>&lt; <ref refid="classSplinePolarFootFinder_1a592e542edca9e79dd8786ce11327582a" kindref="member">IdxRangeOperator</ref>, <ref refid="classSplinePolarFootFinder_1a8a0925a2865c4685111cc1d5ff7bff4c" kindref="member">VectorIndexSetAdvectionDims</ref>, <ref refid="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" kindref="member">memory_space</ref> &gt;</type>
          <declname>advection_field</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Advect the feet over <formula id="16">$ dt $</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para>From the advection field in the physical domain, compute the advection field in the right domain an compute its B-splines coefficients. Then, use the given time integration method (time_stepper) to solve the characteristic equation over <formula id="16">$ dt $</formula>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">feet</parametername>
</parameternamelist>
<parameterdescription>
<para>On input: the mesh points. On output: the characteristic feet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">advection_field</parametername>
</parameternamelist>
<parameterdescription>
<para>The advection field in the physical domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="251" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="251" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classSplinePolarFootFinder_1a124851469507722a115dd4d443ffdf1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="structT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::is_unified</definition>
        <argsstring>(Field&lt; T, IdxRangeRTheta, memory_space &gt; const &amp;values) const</argsstring>
        <name>is_unified</name>
        <qualifiedname>SplinePolarFootFinder::is_unified</qualifiedname>
        <param>
          <type>Field&lt; <ref refid="structT" kindref="compound">T</ref>, IdxRangeRTheta, <ref refid="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" kindref="member">memory_space</ref> &gt; const &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Check if the values at the centre point are the same. </para>
        </briefdescription>
        <detaileddescription>
<para>For polar geometry, to ensure continuity at the centre point, we have to be sure that all the points for <formula id="18">$ r = 0 $</formula> have the same value. This function check if for <formula id="19">$ r= 0 $</formula>, the values <formula id="20">$ \forall \theta $</formula> are the same.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>A table of values we want to check if the centre point has an unique value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="352" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="352" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classSplinePolarFootFinder_1a233cea99033352973d7864a8e356c7ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="structT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;::unify_value_at_centre_pt</definition>
        <argsstring>(Field&lt; T, IdxRangeRTheta, memory_space &gt; values) const</argsstring>
        <name>unify_value_at_centre_pt</name>
        <qualifiedname>SplinePolarFootFinder::unify_value_at_centre_pt</qualifiedname>
        <param>
          <type>Field&lt; <ref refid="structT" kindref="compound">T</ref>, IdxRangeRTheta, <ref refid="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" kindref="member">memory_space</ref> &gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Replace the value at <formula id="21">$  (r=0, \theta)$</formula> point by the value at <formula id="22">$ (r=0,0) $</formula> for all <formula id="23">$ \theta $</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para>For polar geometry, to ensure continuity at the centre point, we have to be sure that all the points for <formula id="18">$ r = 0 $</formula> have the same value. As the computation of the values of a table can induces machine errors, this function is useful to reset the values at the central point at the same value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">values</parametername>
</parameternamelist>
<parameterdescription>
<para>The table of values we want to unify at the central point. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="389" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="389" bodyend="402"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class to find the foot of the characteristics on the <formula id="15">$ (r,\theta) $</formula> plane. </para>
    </briefdescription>
    <detaileddescription>
<para>The natural advection domain is the physical domain, where the studied equation is given. However, not all the mappings used are analytically invertible and inverting the Jacobian matrix of the mapping could be costly and could introduce numerical errors. That is why, we also introduce a pseudo-Cartesian domain.</para>
<para>More details can be found in Edoardo Zoni&apos;s article (<ulink url="https://doi.org/10.1016/j.jcp.2019.108889">https://doi.org/10.1016/j.jcp.2019.108889</ulink>).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TimeStepperBuilder</parametername>
</parameternamelist>
<parameterdescription>
<para>A time stepper builder indicating which time integration method should be applied to solve the characteristic equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LogicalToPhysicalMapping</parametername>
</parameternamelist>
<parameterdescription>
<para>A mapping from the logical domain to the physical domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LogicalToPseudoPhysicalMapping</parametername>
</parameternamelist>
<parameterdescription>
<para>A mapping from the logical domain to the domain where the advection is carried out. This may be a pseudo-physical domain or the physical domain itself. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SplineRThetaBuilderAdvection</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D SplineBuilder to construct a spline on a polar domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SplineRThetaEvaluatorAdvection</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D SplineEvaluator to evaluate a spline on a polar domain. A boundary condition must be provided in case the foot of the characteristic is found outside the domain.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBslAdvectionPolar" kindref="compound">BslAdvectionPolar</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IPolarFootFinder&lt; SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type1, SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type2, ddc::to_type_seq_t&lt; LogicalToPhysicalMapping::CoordResult &gt;, IdxRangeBatched, SplineRThetaBuilderAdvection::memory_space &gt;</label>
        <link refid="classIPolarFootFinder"/>
      </node>
      <node id="1">
        <label>SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;</label>
        <link refid="classSplinePolarFootFinder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IPolarFootFinder&lt; SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type1, SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type2, ddc::to_type_seq_t&lt; LogicalToPhysicalMapping::CoordResult &gt;, IdxRangeBatched, SplineRThetaBuilderAdvection::memory_space &gt;</label>
        <link refid="classIPolarFootFinder"/>
      </node>
      <node id="1">
        <label>SplinePolarFootFinder&lt; IdxRangeBatched, TimeStepperBuilder, LogicalToPhysicalMapping, LogicalToPseudoPhysicalMapping, SplineRThetaBuilderAdvection, SplineRThetaEvaluatorAdvection &gt;</label>
        <link refid="classSplinePolarFootFinder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" line="54" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/spline_polar_foot_finder.hpp" bodystart="61" bodyend="403"/>
    <listofallmembers>
      <member refid="classSplinePolarFootFinder_1aea7bc16fdc724a4d2cee1076dc58f95d" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>base_type</name></member>
      <member refid="classSplinePolarFootFinder_1ac4cbe709d1cb35200bcc9966bcad5026" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>BSplinesR</name></member>
      <member refid="classSplinePolarFootFinder_1ae5abd972e6dd0a0877f48234354d85d4" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>BSplinesTheta</name></member>
      <member refid="classSplinePolarFootFinder_1a2039ffcb222e9318d4b65a78f66f30b4" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>CConstFieldFeet</name></member>
      <member refid="classSplinePolarFootFinder_1ad07796a01c78348d540d9f80a404d1dc" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>CFieldFeet</name></member>
      <member refid="classSplinePolarFootFinder_1ad1831b40ec656daa4ab67826a13b61d4" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>CoordRTheta</name></member>
      <member refid="classSplinePolarFootFinder_1abc1e2fdffb10bf667b803e59302c1e33" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>CoordXY_adv</name></member>
      <member refid="classSplinePolarFootFinder_1a473fb430dbdadb3e420074a6ef137811" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>DVectorConstFieldAdvection</name></member>
      <member refid="classSplinePolarFootFinder_1adbf76668dde4d640ee4fe9a541904c32" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>DVectorFieldAdvection</name></member>
      <member refid="classSplinePolarFootFinder_1adc90a7a89091b5ae0dff71697666b57d" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>ExecSpace</name></member>
      <member refid="classSplinePolarFootFinder_1a51e91cc4664a2e74009c09a44cbe61fe" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>GridR</name></member>
      <member refid="classSplinePolarFootFinder_1aa0be268c091cead51c2ca1368f95ee76" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>GridTheta</name></member>
      <member refid="classSplinePolarFootFinder_1adec2782ed7ecdff09e6940f13bc0e52c" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>IdxOperator</name></member>
      <member refid="classSplinePolarFootFinder_1aab1eb09e44e2626910dbb7e36321d6cc" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>IdxR</name></member>
      <member refid="classSplinePolarFootFinder_1a592e542edca9e79dd8786ce11327582a" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>IdxRangeOperator</name></member>
      <member refid="classSplinePolarFootFinder_1abfb99e756e53309eab48e31c07d79f8a" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>IdxRangeR</name></member>
      <member refid="classSplinePolarFootFinder_1a2ec51a7c30387d6ac531352768a9f2ba" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>IdxRangeRTheta</name></member>
      <member refid="classSplinePolarFootFinder_1a30d3c2a5477eebd67cf96d90d71fc2b3" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>IdxRangeSplineBatched</name></member>
      <member refid="classSplinePolarFootFinder_1ae68b5e8f83571ca243efd7d0d0195d7e" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>IdxRangeTheta</name></member>
      <member refid="classSplinePolarFootFinder_1a2373f04a62dab3f7fada0b6c6d8ed082" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>IdxRTheta</name></member>
      <member refid="classSplinePolarFootFinder_1af90b24a4664d3d635e2ea859a8356ac5" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>IdxTheta</name></member>
      <member refid="classSplinePolarFootFinder_1a124851469507722a115dd4d443ffdf1b" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>is_unified</name></member>
      <member refid="classSplinePolarFootFinder_1a2070c2208ecf9c2426269db6ec8f7254" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>m_builder_advection_field</name></member>
      <member refid="classSplinePolarFootFinder_1a042eaa82d42cf9060fa4029cff1bfd99" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>m_evaluator_advection_field</name></member>
      <member refid="classSplinePolarFootFinder_1a9b088c0e7e7cd0d837d38718cfdb6c9c" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>m_logical_to_pseudo_physical</name></member>
      <member refid="classSplinePolarFootFinder_1aab1186eff57dce5e9ef175fe6d16e351" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>m_pseudo_physical_to_logical</name></member>
      <member refid="classSplinePolarFootFinder_1a56d2f3dabe971daf5e8de82417d1cbe9" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>m_pseudo_physical_to_physical</name></member>
      <member refid="classSplinePolarFootFinder_1aa34618ceff859c9532754a4295f35b36" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>m_time_stepper_builder</name></member>
      <member refid="classSplinePolarFootFinder_1a89a4b20b79c346032013798317f6b9a7" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>memory_space</name></member>
      <member refid="classSplinePolarFootFinder_1a41cccd0c523184a0385fd810ac0bb852" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>MemSpace</name></member>
      <member refid="classSplinePolarFootFinder_1acd4731e29b30f28ded8b3e9a98b995ee" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>operator()</name></member>
      <member refid="classIPolarFootFinder_1a3da1ab44c93598dee39faac9557db18c" prot="public" virt="pure-virtual" ambiguityscope="IPolarFootFinder&lt; SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type1, SplineRThetaBuilderAdvection::interpolation_discrete_dimension_type2, ddc::to_type_seq_t&lt; LogicalToPhysicalMapping::CoordResult &gt;, IdxRangeBatched, SplineRThetaBuilderAdvection::memory_space &gt;::"><scope>SplinePolarFootFinder</scope><name>operator()</name></member>
      <member refid="classSplinePolarFootFinder_1a5f940bf9c6a3bacedcf0a64490193eab" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>PseudoCartesianBasis</name></member>
      <member refid="classSplinePolarFootFinder_1a6730b616673dd6d5475d04ef6805f5cc" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>PseudoCartesianToCircular</name></member>
      <member refid="classSplinePolarFootFinder_1a583f7299c6887d40a5ec363549e89ba9" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>PseudoPhysicalToLogicalMapping</name></member>
      <member refid="classSplinePolarFootFinder_1a527685c0362c862a43f8ee7775d94d80" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>PseudoPhysicalToPhysicalMapping</name></member>
      <member refid="classSplinePolarFootFinder_1ace88cae6d3bedc6053d79f8b1489566c" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>R</name></member>
      <member refid="classSplinePolarFootFinder_1a9253aaee6ab75941419a5020398757f2" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>SplinePolarFootFinder</name></member>
      <member refid="classSplinePolarFootFinder_1a62a4d72ada8c3cad0dc33f0637568793" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>Theta</name></member>
      <member refid="classSplinePolarFootFinder_1ad9757fb91afefddf169426ae59204f6b" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>TimeStepper</name></member>
      <member refid="classSplinePolarFootFinder_1a233cea99033352973d7864a8e356c7ec" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>unify_value_at_centre_pt</name></member>
      <member refid="classSplinePolarFootFinder_1a8a0925a2865c4685111cc1d5ff7bff4c" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>VectorIndexSetAdvectionDims</name></member>
      <member refid="classSplinePolarFootFinder_1a5c95805a7ed946296977d376561395e7" prot="public" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>VectorSplineCoeffsMem</name></member>
      <member refid="classSplinePolarFootFinder_1a92638aa678780ecb35339709edf6c8ed" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>X_adv</name></member>
      <member refid="classSplinePolarFootFinder_1aa5bdd1105b7fefc51f520a1e573561ab" prot="private" virt="non-virtual"><scope>SplinePolarFootFinder</scope><name>Y_adv</name></member>
      <member refid="classIPolarFootFinder_1aac7862984f8ba9387ea2d94c1e971901" prot="public" virt="virtual"><scope>SplinePolarFootFinder</scope><name>~IPolarFootFinder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
