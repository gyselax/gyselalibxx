<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classTriangularBernsteinPolynomialBasis_1_1Impl" kind="class" language="C++" prot="public">
    <compoundname>TriangularBernsteinPolynomialBasis::Impl</compoundname>
    <includes refid="bernstein_8hpp" local="no">bernstein.hpp</includes>
    <templateparamlist>
      <param>
        <type>class DDim</type>
      </param>
      <param>
        <type>class MemorySpace</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1a63bcc9ebdf4914eaffdc9fb3fa15d873" prot="public" static="no">
        <type><ref refid="classTriangularBernsteinPolynomialBasis" kindref="compound">TriangularBernsteinPolynomialBasis</ref></type>
        <definition>using TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::discrete_dimension_type =  TriangularBernsteinPolynomialBasis</definition>
        <argsstring></argsstring>
        <name>discrete_dimension_type</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::discrete_dimension_type</qualifiedname>
        <briefdescription>
<para>The tag which identifies the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="82" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1a408488bf707bb2678905cb845fc57765" prot="public" static="no">
        <type>Idx&lt; DDim &gt;</type>
        <definition>using TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::discrete_element_type =  Idx&lt;DDim&gt;</definition>
        <argsstring></argsstring>
        <name>discrete_element_type</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::discrete_element_type</qualifiedname>
        <briefdescription>
<para>The type of an index of an element of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="85" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1aa6e3244ac6b9b4d1427b01bd0b9357bc" prot="public" static="no">
        <type>IdxRange&lt; DDim &gt;</type>
        <definition>using TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::discrete_domain_type =  IdxRange&lt;DDim&gt;</definition>
        <argsstring></argsstring>
        <name>discrete_domain_type</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::discrete_domain_type</qualifiedname>
        <briefdescription>
<para>The type of the index range of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="88" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1a87262d09f449e4b7a76ea38807a034fc" prot="public" static="no">
        <type>IdxStep&lt; DDim &gt;</type>
        <definition>using TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::discrete_vector_type =  IdxStep&lt;DDim&gt;</definition>
        <argsstring></argsstring>
        <name>discrete_vector_type</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::discrete_vector_type</qualifiedname>
        <briefdescription>
<para>The type of an index step from one element of the basis to another. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="91" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1adcaf2527acc2c7a0a18f741240082b56" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ODDim</type>
          </param>
          <param>
            <type>class OMemorySpace</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class Impl</definition>
        <argsstring></argsstring>
        <name>Impl</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="75" column="22" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1a2d3dac6a4e22fab1e7ac94ce857874d8" prot="private" static="no" mutable="no">
        <type><ref refid="classCartesianToBarycentric" kindref="compound">CartesianToBarycentric</ref>&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref>, Corner1Tag, Corner2Tag, Corner3Tag &gt;</type>
        <definition>CartesianToBarycentric&lt;X, Y, Corner1Tag, Corner2Tag, Corner3Tag&gt; TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::m_coord_changer</definition>
        <argsstring></argsstring>
        <name>m_coord_changer</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::m_coord_changer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="78" column="32" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1ab628a878e7d858a429dd6a2de850447f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::Impl</definition>
        <argsstring>(CartesianToBarycentric&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag &gt; const &amp;coord_changer)</argsstring>
        <name>Impl</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="classCartesianToBarycentric" kindref="compound">CartesianToBarycentric</ref>&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref>, Corner1Tag, Corner2Tag, Corner3Tag &gt; const &amp;</type>
          <declname>coord_changer</declname>
        </param>
        <briefdescription>
<para>Construct the basis from the barycentric coordinate mapping. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord_changer</parametername>
</parameternamelist>
<parameterdescription>
<para>The class which converts Cartesian coordinates to barycentric coordinates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="98" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1ae33d1d61323db71d5d5a5089473e3b67" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OriginMemorySpace</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::Impl</definition>
        <argsstring>(Impl&lt; DDim, OriginMemorySpace &gt; const &amp;impl)</argsstring>
        <name>Impl</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref>&lt; DDim, OriginMemorySpace &gt; const &amp;</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
<para>Construct the basis by copy. This constructor is used to create the class on a different memory space. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">impl</parametername>
</parameternamelist>
<parameterdescription>
<para>The implementation of the origin memory space. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="110" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1a49ed43bd10c8c5ea683b799a4106e3d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::Impl</definition>
        <argsstring>(Impl const &amp;x)=default</argsstring>
        <name>Impl</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Construct the basis by copy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The basis to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="119" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1a4a5bf93f1e18841db8b6c010e7a1bcde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::Impl</definition>
        <argsstring>(Impl &amp;&amp;x)=default</argsstring>
        <name>Impl</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Construct the basis from an r-value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The temporary basis to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="125" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1aa23464e0c3ff483287273a733d9ccf72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::~Impl</definition>
        <argsstring>()=default</argsstring>
        <name>~Impl</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::~Impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="127" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1a12c6307c7bcf19a28e9822ec3670324f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref> &amp;</type>
        <definition>Impl &amp; TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::operator=</definition>
        <argsstring>(Impl const &amp;x)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::operator=</qualifiedname>
        <param>
          <type><ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Copy-assign the class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>An reference to another <ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to this object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="135" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1aa9472f9e52588af85652f93907a6a27a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref> &amp;</type>
        <definition>Impl &amp; TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::operator=</definition>
        <argsstring>(Impl &amp;&amp;x)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::operator=</qualifiedname>
        <param>
          <type><ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Move-assign the class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>An rvalue to another <ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to this object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="143" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classTriangularBernsteinPolynomialBasis_1_1Impl_1a8b0e07fde6ca3d85eb5530591b80ff3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangularBernsteinPolynomialBasis&lt; X, Y, Corner1Tag, Corner2Tag, Corner3Tag, D &gt;::Impl&lt; DDim, MemorySpace &gt;::eval_basis</definition>
        <argsstring>(host_t&lt; DField&lt; IdxRange&lt; DDim &gt; &gt; &gt; values, Coord&lt; X, Y &gt; const &amp;x) const</argsstring>
        <name>eval_basis</name>
        <qualifiedname>TriangularBernsteinPolynomialBasis::Impl::eval_basis</qualifiedname>
        <param>
          <type>host_t&lt; DField&lt; IdxRange&lt; DDim &gt; &gt; &gt;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>Coord&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref> &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Evaluate the basis at the given coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>The values of the basis functions at the coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where the polynomials should be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="150" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="158" bodyend="175"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classTriangularBernsteinPolynomialBasis_1_1Impl" kindref="compound">Impl</ref> class holds the implementation of the <ref refid="classTriangularBernsteinPolynomialBasis" kindref="compound">TriangularBernsteinPolynomialBasis</ref>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MemorySpace</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates where the object is saved. This is either on the host or the device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" line="72" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/bernstein.hpp" bodystart="73" bodyend="151"/>
    <listofallmembers>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1a63bcc9ebdf4914eaffdc9fb3fa15d873" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>discrete_dimension_type</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1aa6e3244ac6b9b4d1427b01bd0b9357bc" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>discrete_domain_type</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1a408488bf707bb2678905cb845fc57765" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>discrete_element_type</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1a87262d09f449e4b7a76ea38807a034fc" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>discrete_vector_type</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1a8b0e07fde6ca3d85eb5530591b80ff3c" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>eval_basis</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1adcaf2527acc2c7a0a18f741240082b56" prot="private" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>Impl</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1ab628a878e7d858a429dd6a2de850447f" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>Impl</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1ae33d1d61323db71d5d5a5089473e3b67" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>Impl</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1a49ed43bd10c8c5ea683b799a4106e3d2" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>Impl</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1a4a5bf93f1e18841db8b6c010e7a1bcde" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>Impl</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1a2d3dac6a4e22fab1e7ac94ce857874d8" prot="private" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>m_coord_changer</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1a12c6307c7bcf19a28e9822ec3670324f" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>operator=</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1aa9472f9e52588af85652f93907a6a27a" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>operator=</name></member>
      <member refid="classTriangularBernsteinPolynomialBasis_1_1Impl_1aa23464e0c3ff483287273a733d9ccf72" prot="public" virt="non-virtual"><scope>TriangularBernsteinPolynomialBasis::Impl</scope><name>~Impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
