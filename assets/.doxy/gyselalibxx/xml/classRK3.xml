<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classRK3" kind="class" language="C++" prot="public">
    <compoundname>RK3</compoundname>
    <basecompoundref refid="classITimeStepper" prot="public" virt="non-virtual">ITimeStepper&lt; FieldMem, FieldMem, Kokkos::DefaultExecutionSpace &gt;</basecompoundref>
    <includes refid="rk3_8hpp" local="no">rk3.hpp</includes>
    <templateparamlist>
      <param>
        <type>class FieldMem</type>
      </param>
      <param>
        <type>class <ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref></type>
        <defval>FieldMem</defval>
      </param>
      <param>
        <type>class ExecSpace</type>
        <defval>Kokkos::DefaultExecutionSpace</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classRK3_1a4e035359670b272d53dff67d9e7c0716" prot="private" static="no">
        <type><ref refid="classITimeStepper" kindref="compound">ITimeStepper</ref>&lt; FieldMem, <ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref>, ExecSpace &gt;</type>
        <definition>using RK3&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::base_type =  ITimeStepper&lt;FieldMem, DerivFieldMem, ExecSpace&gt;</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <qualifiedname>RK3::base_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="38" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classRK3_1adf9f896127748637d8afca8c22104c61" prot="private" static="no" mutable="no">
        <type><ref refid="classRK3_1a468e0909ac8b50f109dc810879253134" kindref="member">IdxRange</ref> const</type>
        <definition>IdxRange const RK3&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::m_idx_range</definition>
        <argsstring></argsstring>
        <name>m_idx_range</name>
        <qualifiedname>RK3::m_idx_range</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="50" column="20" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classRK3_1aa007e2d8c88c0213ead0a9159a03e054" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RK3&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::RK3</definition>
        <argsstring>(IdxRange idx_range)</argsstring>
        <name>RK3</name>
        <qualifiedname>RK3::RK3</qualifiedname>
        <param>
          <type><ref refid="classRK3_1a468e0909ac8b50f109dc810879253134" kindref="member">IdxRange</ref></type>
          <declname>idx_range</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classRK3" kindref="compound">RK3</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range on which the points which evolve over time are defined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="60" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classRK3_1a5b66359b6132c575734d8970fda25a56" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void RK3&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::update</definition>
        <argsstring>(ExecSpace const &amp;exec_space, ValField y, double dt, std::function&lt; void(DerivField, ValConstField)&gt; dy_calculator, std::function&lt; void(ValField, DerivConstField, double)&gt; y_update) const final</argsstring>
        <name>update</name>
        <qualifiedname>RK3::update</qualifiedname>
        <reimplements refid="classITimeStepper_1aa431ffdb2dd991945d59d5d94adf4bef">update</reimplements>
        <param>
          <type>ExecSpace const &amp;</type>
          <declname>exec_space</declname>
        </param>
        <param>
          <type><ref refid="classRK3_1aaba53f61442e763c05fbd7614c3e1c05" kindref="member">ValField</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="classRK3_1a58d11b9c1e57348b94e50b1ea284886f" kindref="member">DerivField</ref>, <ref refid="classRK3_1ad0949984fa0c2d0004f6b7a10e19cd69" kindref="member">ValConstField</ref>)&gt;</type>
          <declname>dy_calculator</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="classRK3_1aaba53f61442e763c05fbd7614c3e1c05" kindref="member">ValField</ref>, <ref refid="classRK3_1a7ee2d8a1e9031e625d0861031891bd52" kindref="member">DerivConstField</ref>, double)&gt;</type>
          <declname>y_update</declname>
        </param>
        <briefdescription>
<para>Carry out one step of the Runge-Kutta scheme. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">exec_space</parametername>
</parameternamelist>
<parameterdescription>
<para>The space on which the function is executed (CPU/GPU). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The value(s) which should be evolved over time defined on each of the dimensions at each point of the index range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time step over which the values should be evolved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dy_calculator</parametername>
</parameternamelist>
<parameterdescription>
<para>The function describing how the derivative of the evolve function is calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y_update</parametername>
</parameternamelist>
<parameterdescription>
<para>The function describing how the value(s) are updated using the derivative. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="77" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" bodystart="77" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classRK3_1abf7ce877cffa5f112975e0c8ebaf5b28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::update</definition>
        <argsstring>(ValField y, double dt, std::function&lt; void(DerivField, ValConstField)&gt; dy_calculator) const</argsstring>
        <name>update</name>
        <qualifiedname>RK3::update</qualifiedname>
        <param>
          <type><ref refid="classRK3_1aaba53f61442e763c05fbd7614c3e1c05" kindref="member">ValField</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="classRK3_1a58d11b9c1e57348b94e50b1ea284886f" kindref="member">DerivField</ref>, <ref refid="classRK3_1ad0949984fa0c2d0004f6b7a10e19cd69" kindref="member">ValConstField</ref>)&gt;</type>
          <declname>dy_calculator</declname>
        </param>
        <briefdescription>
<para>Carry out one step of the timestepping scheme. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is a wrapper around the update function below. The values of the function are updated using the trivial method $f += df * dt$. This is the standard method however some cases may need a more complex update function which is why the more explicit method is also provided.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The value(s) which should be evolved over time defined on each of the dimensions at each point of the index range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time step over which the values should be evolved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dy_calculator</parametername>
</parameternamelist>
<parameterdescription>
<para>The function describing how the derivative of the evolve function is calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="53" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/itimestepper.hpp" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classRK3_1a9a7f95c2396c54b9f6323cbd444dd8c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::update</definition>
        <argsstring>(ExecSpace const &amp;exec_space, ValField y, double dt, std::function&lt; void(DerivField, ValConstField)&gt; dy_calculator) const</argsstring>
        <name>update</name>
        <qualifiedname>RK3::update</qualifiedname>
        <param>
          <type>ExecSpace const &amp;</type>
          <declname>exec_space</declname>
        </param>
        <param>
          <type><ref refid="classRK3_1aaba53f61442e763c05fbd7614c3e1c05" kindref="member">ValField</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="classRK3_1a58d11b9c1e57348b94e50b1ea284886f" kindref="member">DerivField</ref>, <ref refid="classRK3_1ad0949984fa0c2d0004f6b7a10e19cd69" kindref="member">ValConstField</ref>)&gt;</type>
          <declname>dy_calculator</declname>
        </param>
        <briefdescription>
<para>Carry out one step of the timestepping scheme. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is a wrapper around the update function below. The values of the function are updated using the trivial method $f += df * dt$. This is the standard method however some cases may need a more complex update function which is why the more explicit method is also provided.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">exec_space</parametername>
</parameternamelist>
<parameterdescription>
<para>The space on which the function is executed (CPU/GPU). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The value(s) which should be evolved over time defined on each of the dimensions at each point of the index range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time step over which the values should be evolved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dy_calculator</parametername>
</parameternamelist>
<parameterdescription>
<para>The function describing how the derivative of the evolve function is calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="53" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/itimestepper.hpp" bodystart="102" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classRK3_1afdf22291a9a2f9180e1904d3a0728737" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::update</definition>
        <argsstring>(ExecSpace const &amp;exec_space, ValField y, double dt, std::function&lt; void(DerivField, ValConstField)&gt; dy_calculator, std::function&lt; void(ValField, DerivConstField, double)&gt; y_update) const=0</argsstring>
        <name>update</name>
        <qualifiedname>RK3::update</qualifiedname>
        <reimplements refid="classITimeStepper_1aa431ffdb2dd991945d59d5d94adf4bef">update</reimplements>
        <param>
          <type>ExecSpace const &amp;</type>
          <declname>exec_space</declname>
        </param>
        <param>
          <type><ref refid="classRK3_1aaba53f61442e763c05fbd7614c3e1c05" kindref="member">ValField</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="classRK3_1a58d11b9c1e57348b94e50b1ea284886f" kindref="member">DerivField</ref>, <ref refid="classRK3_1ad0949984fa0c2d0004f6b7a10e19cd69" kindref="member">ValConstField</ref>)&gt;</type>
          <declname>dy_calculator</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="classRK3_1aaba53f61442e763c05fbd7614c3e1c05" kindref="member">ValField</ref>, <ref refid="classRK3_1a7ee2d8a1e9031e625d0861031891bd52" kindref="member">DerivConstField</ref>, double)&gt;</type>
          <declname>y_update</declname>
        </param>
        <briefdescription>
<para>Carry out one step of the timestepping scheme. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">exec_space</parametername>
</parameternamelist>
<parameterdescription>
<para>The space on which the function is executed (CPU/GPU). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The value(s) which should be evolved over time defined on each of the dimensions at each point of the index range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time step over which the values should be evolved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dy_calculator</parametername>
</parameternamelist>
<parameterdescription>
<para>The function describing how the derivative of the evolve function is calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y_update</parametername>
</parameternamelist>
<parameterdescription>
<para>The function describing how the value(s) are updated using the derivative. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="53" column="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classRK3_1a468e0909ac8b50f109dc810879253134" prot="public" static="no">
        <type>typename FieldMem::discrete_domain_type</type>
        <definition>using ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::IdxRange =  typename FieldMem::discrete_domain_type</definition>
        <argsstring></argsstring>
        <name>IdxRange</name>
        <qualifiedname>RK3::IdxRange</qualifiedname>
        <briefdescription>
<para>The type of the index range on which the values of the function are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="41" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/itimestepper.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRK3_1ad0949984fa0c2d0004f6b7a10e19cd69" prot="public" static="no">
        <type>typename FieldMem::view_type</type>
        <definition>using ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::ValConstField =  typename FieldMem::view_type</definition>
        <argsstring></argsstring>
        <name>ValConstField</name>
        <qualifiedname>RK3::ValConstField</qualifiedname>
        <briefdescription>
<para>The constant type of the values of the function being evolved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="43" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/itimestepper.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRK3_1aaba53f61442e763c05fbd7614c3e1c05" prot="public" static="no">
        <type>typename FieldMem::span_type</type>
        <definition>using ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::ValField =  typename FieldMem::span_type</definition>
        <argsstring></argsstring>
        <name>ValField</name>
        <qualifiedname>RK3::ValField</qualifiedname>
        <briefdescription>
<para>The type of the values of the function being evolved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="44" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/itimestepper.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRK3_1a7ee2d8a1e9031e625d0861031891bd52" prot="public" static="no">
        <type>typename DerivFieldMem::view_type</type>
        <definition>using ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::DerivConstField =  typename DerivFieldMem::view_type</definition>
        <argsstring></argsstring>
        <name>DerivConstField</name>
        <qualifiedname>RK3::DerivConstField</qualifiedname>
        <briefdescription>
<para>The constant type of the derivatives values of the function being evolved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="46" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/itimestepper.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRK3_1a58d11b9c1e57348b94e50b1ea284886f" prot="public" static="no">
        <type>typename DerivFieldMem::span_type</type>
        <definition>using ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;::DerivField =  typename DerivFieldMem::span_type</definition>
        <argsstring></argsstring>
        <name>DerivField</name>
        <qualifiedname>RK3::DerivField</qualifiedname>
        <briefdescription>
<para>The type of the derivatives of the function being evolved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="47" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/itimestepper.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class which provides an implementation of a third-order Runge-Kutta method. </para>
    </briefdescription>
    <detaileddescription>
<para>A class which provides an implementation of a third-order Runge-Kutta method in order to evolve values over time. The values may be either scalars or vectors. In the case of vectors the appropriate dimensions must be passed as template parameters. The values which evolve are defined on an index range.</para>
<para>For the following ODE : <formula id="360">$\partial_t y(t) = f(t, y(t)) $</formula>,</para>
<para>the Runge-Kutta 3 method is given by : <formula id="368">$ y^{n+1} =  y^{n} + \frac{dt}{6} \left(k_1 + 4 k_2 + k_3 \right) $</formula>,</para>
<para>with</para>
<para><itemizedlist>
<listitem><para><formula id="366">$ k_1 = f(t^{n}, y^{n}) $</formula>,</para>
</listitem><listitem><para><formula id="367">$ k_2 = f(t^{n+1/2}, y^{n} + \frac{dt}{2} k_1 ) $</formula>,</para>
</listitem><listitem><para><formula id="369">$ k_3 = f(t^{n+1/2}, y^{n} + dt ( 2 k_2 - k_1) ) $</formula>. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;</label>
        <link refid="classITimeStepper"/>
      </node>
      <node id="1">
        <label>RK3&lt; FieldMem, DerivFieldMem, ExecSpace &gt;</label>
        <link refid="classRK3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ITimeStepper&lt; FieldMem, DerivFieldMem, ExecSpace &gt;</label>
        <link refid="classITimeStepper"/>
      </node>
      <node id="1">
        <label>RK3&lt; FieldMem, DerivFieldMem, ExecSpace &gt;</label>
        <link refid="classRK3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" line="36" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp" bodystart="37" bodyend="152"/>
    <listofallmembers>
      <member refid="classITimeStepper_1ace32467b0d2e375becbfe913755d5851" prot="public" virt="non-virtual"><scope>RK3</scope><name>assemble_field_k_total</name></member>
      <member refid="classITimeStepper_1a7d94fc389aad94e1af939a5f32c81edd" prot="protected" virt="non-virtual"><scope>RK3</scope><name>assemble_k_total</name></member>
      <member refid="classITimeStepper_1a7047fa6fd6122b8dcea1f283461aa2ee" prot="public" virt="non-virtual"><scope>RK3</scope><name>assemble_vector_field_k_total</name></member>
      <member refid="classRK3_1a4e035359670b272d53dff67d9e7c0716" prot="private" virt="non-virtual"><scope>RK3</scope><name>base_type</name></member>
      <member refid="classITimeStepper_1ac976ff8bc85dbfed9f7b378f69bd52b4" prot="protected" virt="non-virtual"><scope>RK3</scope><name>copy</name></member>
      <member refid="classRK3_1a7ee2d8a1e9031e625d0861031891bd52" prot="public" virt="non-virtual"><scope>RK3</scope><name>DerivConstField</name></member>
      <member refid="classRK3_1a58d11b9c1e57348b94e50b1ea284886f" prot="public" virt="non-virtual"><scope>RK3</scope><name>DerivField</name></member>
      <member refid="classITimeStepper_1a5600be32cf869c3f33d83f5aff7e7c62" prot="protected" virt="non-virtual"><scope>RK3</scope><name>fill_k_total</name></member>
      <member refid="classRK3_1a468e0909ac8b50f109dc810879253134" prot="public" virt="non-virtual"><scope>RK3</scope><name>IdxRange</name></member>
      <member refid="classRK3_1adf9f896127748637d8afca8c22104c61" prot="private" virt="non-virtual"><scope>RK3</scope><name>m_idx_range</name></member>
      <member refid="classRK3_1aa007e2d8c88c0213ead0a9159a03e054" prot="public" virt="non-virtual"><scope>RK3</scope><name>RK3</name></member>
      <member refid="classRK3_1a5b66359b6132c575734d8970fda25a56" prot="public" virt="virtual"><scope>RK3</scope><name>update</name></member>
      <member refid="classRK3_1abf7ce877cffa5f112975e0c8ebaf5b28" prot="public" virt="non-virtual"><scope>RK3</scope><name>update</name></member>
      <member refid="classRK3_1a9a7f95c2396c54b9f6323cbd444dd8c1" prot="public" virt="non-virtual"><scope>RK3</scope><name>update</name></member>
      <member refid="classRK3_1afdf22291a9a2f9180e1904d3a0728737" prot="public" virt="virtual"><scope>RK3</scope><name>update</name></member>
      <member refid="classRK3_1ad0949984fa0c2d0004f6b7a10e19cd69" prot="public" virt="non-virtual"><scope>RK3</scope><name>ValConstField</name></member>
      <member refid="classRK3_1aaba53f61442e763c05fbd7614c3e1c05" prot="public" virt="non-virtual"><scope>RK3</scope><name>ValField</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
