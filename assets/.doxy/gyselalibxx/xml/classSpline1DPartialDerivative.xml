<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classSpline1DPartialDerivative" kind="class" language="C++" prot="public">
    <compoundname>Spline1DPartialDerivative</compoundname>
    <basecompoundref refid="classIPartialDerivative" prot="public" virt="non-virtual">IPartialDerivative&lt; IdxRangeBatched, Spline1DBuilder::continuous_dimension_type &gt;</basecompoundref>
    <includes refid="spline__1d__partial__derivative_8hpp" local="no">spline_1d_partial_derivative.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Spline1DBuilder</type>
      </param>
      <param>
        <type>class Spline1DEvaluator</type>
      </param>
      <param>
        <type>class IdxRangeBatched</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classSpline1DPartialDerivative_1a531c9dfadd58660c77d600f204b7950b" prot="private" static="no">
        <type><ref refid="classIPartialDerivative" kindref="compound">IPartialDerivative</ref>&lt; IdxRangeBatched, typename Spline1DBuilder::continuous_dimension_type &gt;</type>
        <definition>using Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;::base_type =  IPartialDerivative&lt; IdxRangeBatched, typename Spline1DBuilder::continuous_dimension_type&gt;</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <qualifiedname>Spline1DPartialDerivative::base_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="31" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSpline1DPartialDerivative_1a8ba1774162c4f0d4a29fcec207479991" prot="private" static="no">
        <type>typename Spline1DBuilder::template batched_spline_domain_type&lt; IdxRangeBatched &gt;</type>
        <definition>using Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;::IdxRangeBS =  typename Spline1DBuilder::template batched_spline_domain_type&lt;IdxRangeBatched&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeBS</name>
        <qualifiedname>Spline1DPartialDerivative::IdxRangeBS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="38" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSpline1DPartialDerivative_1aa2bcb388d7d88bed3fe5a1d7dd36c47e" prot="private" static="no">
        <type>DFieldMem&lt; IdxRangeBS &gt;</type>
        <definition>using Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;::DFieldBSMem =  DFieldMem&lt;IdxRangeBS&gt;</definition>
        <argsstring></argsstring>
        <name>DFieldBSMem</name>
        <qualifiedname>Spline1DPartialDerivative::DFieldBSMem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="40" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSpline1DPartialDerivative_1ab71f56f8d6c9b0cc07d937acc9bfd293" prot="private" static="no">
        <type>DField&lt; IdxRangeBS &gt;</type>
        <definition>using Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;::DFieldBS =  DField&lt;IdxRangeBS&gt;</definition>
        <argsstring></argsstring>
        <name>DFieldBS</name>
        <qualifiedname>Spline1DPartialDerivative::DFieldBS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="41" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSpline1DPartialDerivative_1a85c8b026718b72ff0c996c4503b95136" prot="private" static="no">
        <type>DConstField&lt; IdxRangeFull &gt;</type>
        <definition>using IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;::DConstFieldType =  DConstField&lt;IdxRangeFull&gt;</definition>
        <argsstring></argsstring>
        <name>DConstFieldType</name>
        <qualifiedname>Spline1DPartialDerivative::DConstFieldType</qualifiedname>
        <briefdescription>
<para>The type of a constant reference to the field to be differentiated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="35" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSpline1DPartialDerivative_1a47c973564187001a3097fe9b0eb901d5" prot="private" static="no">
        <type>DField&lt; IdxRangeFull &gt;</type>
        <definition>using IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;::DFieldType =  DField&lt;IdxRangeFull&gt;</definition>
        <argsstring></argsstring>
        <name>DFieldType</name>
        <qualifiedname>Spline1DPartialDerivative::DFieldType</qualifiedname>
        <briefdescription>
<para>The type of a reference to the field to be differentiated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="36" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classSpline1DPartialDerivative_1ac977d305c980f51e7caf3ab087f376ae" prot="private" static="no" mutable="no">
        <type>Spline1DBuilder const  &amp;</type>
        <definition>Spline1DBuilder const&amp; Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;::m_builder</definition>
        <argsstring></argsstring>
        <name>m_builder</name>
        <qualifiedname>Spline1DPartialDerivative::m_builder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="43" column="27" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSpline1DPartialDerivative_1af6e2bedd508d2a933bd18ea614a546e6" prot="private" static="no" mutable="no">
        <type>Spline1DEvaluator const  &amp;</type>
        <definition>Spline1DEvaluator const&amp; Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;::m_evaluator</definition>
        <argsstring></argsstring>
        <name>m_evaluator</name>
        <qualifiedname>Spline1DPartialDerivative::m_evaluator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="44" column="29" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSpline1DPartialDerivative_1ac27dcb412c5f5841e15ab1985d8d6ef8" prot="private" static="no" mutable="no">
        <type>DFieldBSMem</type>
        <definition>DFieldBSMem Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;::m_spline_coefs</definition>
        <argsstring></argsstring>
        <name>m_spline_coefs</name>
        <qualifiedname>Spline1DPartialDerivative::m_spline_coefs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="45" column="17" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classSpline1DPartialDerivative_1a4d8bc99c8cc8f7b5fabbb119e2fef77b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;::Spline1DPartialDerivative</definition>
        <argsstring>(Spline1DBuilder const &amp;builder, Spline1DEvaluator const &amp;evaluator, DConstFieldType const field)</argsstring>
        <name>Spline1DPartialDerivative</name>
        <qualifiedname>Spline1DPartialDerivative::Spline1DPartialDerivative</qualifiedname>
        <param>
          <type>Spline1DBuilder const &amp;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type>Spline1DEvaluator const &amp;</type>
          <declname>evaluator</declname>
        </param>
        <param>
          <type>DConstFieldType const</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Construct an instance of the class <ref refid="classSpline1DPartialDerivative" kindref="compound">Spline1DPartialDerivative</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D spline builder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D spline evaluator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field to be differentiated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="55" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="55" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classSpline1DPartialDerivative_1ab7d2e8d3fcc3dc4a7acbc1dbae728eb7" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;::operator()</definition>
        <argsstring>(DFieldType differentiated_field) const final</argsstring>
        <name>operator()</name>
        <qualifiedname>Spline1DPartialDerivative::operator()</qualifiedname>
        <param>
          <type>DFieldType</type>
          <declname>differentiated_field</declname>
        </param>
        <briefdescription>
<para>Compute the partial derivative of a field in the direction where the field is represented using 1d splines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">differentiated_field</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains on output the value of the differentiated field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="72" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="72" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class which implements a partial derivative operator using a 1d spline interpolation. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Spline1DBuilder</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D spline builder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Spline1DEvaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D spline evaluator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IdxRangeBatched</parametername>
</parameternamelist>
<parameterdescription>
<para>The type af the index range over which this operator will operate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IPartialDerivative&lt; IdxRangeBatched, Spline1DBuilder::continuous_dimension_type &gt;</label>
        <link refid="classIPartialDerivative"/>
      </node>
      <node id="1">
        <label>Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;</label>
        <link refid="classSpline1DPartialDerivative"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IPartialDerivative&lt; IdxRangeBatched, Spline1DBuilder::continuous_dimension_type &gt;</label>
        <link refid="classIPartialDerivative"/>
      </node>
      <node id="1">
        <label>Spline1DPartialDerivative&lt; Spline1DBuilder, Spline1DEvaluator, IdxRangeBatched &gt;</label>
        <link refid="classSpline1DPartialDerivative"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" line="18" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/spline_1d_partial_derivative.hpp" bodystart="22" bodyend="76"/>
    <listofallmembers>
      <member refid="classSpline1DPartialDerivative_1a531c9dfadd58660c77d600f204b7950b" prot="private" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>base_type</name></member>
      <member refid="classSpline1DPartialDerivative_1a85c8b026718b72ff0c996c4503b95136" prot="private" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>DConstFieldType</name></member>
      <member refid="classSpline1DPartialDerivative_1ab71f56f8d6c9b0cc07d937acc9bfd293" prot="private" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>DFieldBS</name></member>
      <member refid="classSpline1DPartialDerivative_1aa2bcb388d7d88bed3fe5a1d7dd36c47e" prot="private" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>DFieldBSMem</name></member>
      <member refid="classSpline1DPartialDerivative_1a47c973564187001a3097fe9b0eb901d5" prot="private" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>DFieldType</name></member>
      <member refid="classIPartialDerivative_1a5b5bbff2fea1001b2a434b28784f288f" prot="public" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>GridDerivativeDimension</name></member>
      <member refid="classIPartialDerivative_1a883ec2b528cf2188db6e593ae849fe0e" prot="public" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>IdxRangeBatch</name></member>
      <member refid="classSpline1DPartialDerivative_1a8ba1774162c4f0d4a29fcec207479991" prot="private" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>IdxRangeBS</name></member>
      <member refid="classIPartialDerivative_1ae5e7d597e015b5024376bb27091c096d" prot="public" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>IdxRangeDeriv</name></member>
      <member refid="classSpline1DPartialDerivative_1ac977d305c980f51e7caf3ab087f376ae" prot="private" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>m_builder</name></member>
      <member refid="classSpline1DPartialDerivative_1af6e2bedd508d2a933bd18ea614a546e6" prot="private" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>m_evaluator</name></member>
      <member refid="classSpline1DPartialDerivative_1ac27dcb412c5f5841e15ab1985d8d6ef8" prot="private" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>m_spline_coefs</name></member>
      <member refid="classSpline1DPartialDerivative_1ab7d2e8d3fcc3dc4a7acbc1dbae728eb7" prot="public" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>operator()</name></member>
      <member refid="classIPartialDerivative_1ad0c4758b3151a9bbd01d9fda1d423353" prot="public" virt="pure-virtual" ambiguityscope="IPartialDerivative&lt; IdxRangeBatched, Spline1DBuilder::continuous_dimension_type &gt;::"><scope>Spline1DPartialDerivative</scope><name>operator()</name></member>
      <member refid="classSpline1DPartialDerivative_1a4d8bc99c8cc8f7b5fabbb119e2fef77b" prot="public" virt="non-virtual"><scope>Spline1DPartialDerivative</scope><name>Spline1DPartialDerivative</name></member>
      <member refid="classIPartialDerivative_1a596b5a8933c387935c35461a3c5f1fcb" prot="public" virt="virtual"><scope>Spline1DPartialDerivative</scope><name>~IPartialDerivative</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
