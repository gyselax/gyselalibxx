<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structX" kind="struct" language="C++" prot="public">
    <compoundname>X</compoundname>
    <includes refid="geometryRTheta_2geometry_2geometry_8hpp" local="no">geometry.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structX_1a11361f8ff006d764ec79d4b06fa3f45f" prot="public" static="no">
        <type><ref refid="structX" kindref="compound">X</ref></type>
        <definition>using X::Dual =  X</definition>
        <argsstring></argsstring>
        <name>Dual</name>
        <qualifiedname>X::Dual</qualifiedname>
        <briefdescription>
<para>A type-alias mapping to the covariant counterpart. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" line="395" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structX_1a11361f8ff006d764ec79d4b06fa3f45f" prot="public" static="no">
        <type><ref refid="structX" kindref="compound">X</ref></type>
        <definition>using X::Dual =  X</definition>
        <argsstring></argsstring>
        <name>Dual</name>
        <qualifiedname>X::Dual</qualifiedname>
        <briefdescription>
<para>A type-alias mapping to the co/contra-variant counterpart. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" line="34" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structX_1a11361f8ff006d764ec79d4b06fa3f45f" prot="public" static="no">
        <type><ref refid="structX" kindref="compound">X</ref></type>
        <definition>using X::Dual =  X</definition>
        <argsstring></argsstring>
        <name>Dual</name>
        <qualifiedname>X::Dual</qualifiedname>
        <briefdescription>
<para>A type-alias mapping to the co/contra-variant counterpart. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXY/geometry/geometry.hpp" line="33" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXY/geometry/geometry.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structX_1a11361f8ff006d764ec79d4b06fa3f45f" prot="public" static="no">
        <type><ref refid="structX" kindref="compound">X</ref></type>
        <definition>using X::Dual =  X</definition>
        <argsstring></argsstring>
        <name>Dual</name>
        <qualifiedname>X::Dual</qualifiedname>
        <briefdescription>
<para>A type-alias mapping to the co/contra-variant counterpart. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXYVxVy/geometry/geometry.hpp" line="30" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXYVxVy/geometry/geometry.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structX_1aa1915e83f5e8d1363cbc25d737b52a9c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>bool constexpr</type>
        <definition>static bool constexpr X::PERIODIC</definition>
        <argsstring></argsstring>
        <name>PERIODIC</name>
        <qualifiedname>X::PERIODIC</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Define periodicity of the dimension. Here, not periodic. </para>
        </briefdescription>
        <detaileddescription>
<para>A boolean indicating if the dimension is periodic. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" line="386" column="27" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structX_1a8f2020d96b3716fc6de24ef27e6c158f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>bool constexpr</type>
        <definition>static bool constexpr X::IS_COVARIANT</definition>
        <argsstring></argsstring>
        <name>IS_COVARIANT</name>
        <qualifiedname>X::IS_COVARIANT</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>A boolean indicating if dimension describes a covariant coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" line="389" column="27" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structX_1a21b0a7c9531a817b3696d54d248192bf" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>bool constexpr</type>
        <definition>static bool constexpr X::IS_CONTRAVARIANT</definition>
        <argsstring></argsstring>
        <name>IS_CONTRAVARIANT</name>
        <qualifiedname>X::IS_CONTRAVARIANT</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>A boolean indicating if dimension describes a contravariant coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" line="392" column="27" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" bodystart="392" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Define non periodic real <ref refid="structX" kindref="compound">X</ref> dimension. </para>
    </briefdescription>
    <detaileddescription>
<para>A class which describes the real space in the first spatial direction <ref refid="structX" kindref="compound">X</ref>.</para>
<para>A class which describes the real space in the spatial <ref refid="structX" kindref="compound">X</ref> direction. </para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" line="380" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/geometry/geometry.hpp" bodystart="381" bodyend="396"/>
    <listofallmembers>
      <member refid="structX_1a11361f8ff006d764ec79d4b06fa3f45f" prot="public" virt="non-virtual"><scope>X</scope><name>Dual</name></member>
      <member refid="structX_1a11361f8ff006d764ec79d4b06fa3f45f" prot="public" virt="non-virtual"><scope>X</scope><name>Dual</name></member>
      <member refid="structX_1a11361f8ff006d764ec79d4b06fa3f45f" prot="public" virt="non-virtual"><scope>X</scope><name>Dual</name></member>
      <member refid="structX_1a11361f8ff006d764ec79d4b06fa3f45f" prot="public" virt="non-virtual"><scope>X</scope><name>Dual</name></member>
      <member refid="structX_1a21b0a7c9531a817b3696d54d248192bf" prot="public" virt="non-virtual"><scope>X</scope><name>IS_CONTRAVARIANT</name></member>
      <member refid="structX_1a8f2020d96b3716fc6de24ef27e6c158f" prot="public" virt="non-virtual"><scope>X</scope><name>IS_COVARIANT</name></member>
      <member refid="structX_1aa1915e83f5e8d1363cbc25d737b52a9c" prot="public" virt="non-virtual"><scope>X</scope><name>PERIODIC</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
