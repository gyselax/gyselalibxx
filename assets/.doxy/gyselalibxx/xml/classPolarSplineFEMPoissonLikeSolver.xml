<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classPolarSplineFEMPoissonLikeSolver" kind="class" language="C++" prot="public">
    <compoundname>PolarSplineFEMPoissonLikeSolver</compoundname>
    <includes refid="polarpoissonlikesolver_8hpp" local="no">polarpoissonlikesolver.hpp</includes>
    <innerclass refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv1DType" prot="public">PolarSplineFEMPoissonLikeSolver::EvalDeriv1DType</innerclass>
    <innerclass refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv2DType" prot="public">PolarSplineFEMPoissonLikeSolver::EvalDeriv2DType</innerclass>
    <innerclass refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimRMesh" prot="public">PolarSplineFEMPoissonLikeSolver::QDimRMesh</innerclass>
    <innerclass refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimThetaMesh" prot="public">PolarSplineFEMPoissonLikeSolver::QDimThetaMesh</innerclass>
    <innerclass refid="structPolarSplineFEMPoissonLikeSolver_1_1RBasisSubset" prot="public">PolarSplineFEMPoissonLikeSolver::RBasisSubset</innerclass>
    <innerclass refid="structPolarSplineFEMPoissonLikeSolver_1_1RCellDim" prot="public">PolarSplineFEMPoissonLikeSolver::RCellDim</innerclass>
    <innerclass refid="structPolarSplineFEMPoissonLikeSolver_1_1ThetaBasisSubset" prot="public">PolarSplineFEMPoissonLikeSolver::ThetaBasisSubset</innerclass>
    <innerclass refid="structPolarSplineFEMPoissonLikeSolver_1_1ThetaCellDim" prot="public">PolarSplineFEMPoissonLikeSolver::ThetaCellDim</innerclass>
    <templateparamlist>
      <param>
        <type>class <ref refid="structGridR" kindref="compound">GridR</ref></type>
      </param>
      <param>
        <type>class <ref refid="structGridTheta" kindref="compound">GridTheta</ref></type>
      </param>
      <param>
        <type>class <ref refid="structPolarBSplinesRTheta" kindref="compound">PolarBSplinesRTheta</ref></type>
      </param>
      <param>
        <type>class SplineRThetaEvaluatorNullBound</type>
      </param>
      <param>
        <type>class IdxRangeFull</type>
        <defval>IdxRange&lt;<ref refid="structGridR" kindref="compound">GridR</ref>, <ref refid="structGridTheta" kindref="compound">GridTheta</ref>&gt;</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1aea7575e5ec7f7e2a776c1677a79137d9" prot="public" static="no">
        <type>typename GridR::continuous_dimension_type</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::R =  typename GridR::continuous_dimension_type</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::R</qualifiedname>
        <briefdescription>
<para>The radial dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="59" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a0c880f33d839cedfafdf2b3b32139417" prot="public" static="no">
        <type>typename GridTheta::continuous_dimension_type</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::Theta =  typename GridTheta::continuous_dimension_type</definition>
        <argsstring></argsstring>
        <name>Theta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::Theta</qualifiedname>
        <briefdescription>
<para>The poloidal dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="61" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1aea010ac6bec8090ec2686ad2110befd4" prot="public" static="no">
        <type>Idx&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1RCellDim" kindref="compound">RCellDim</ref>, <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1ThetaCellDim" kindref="compound">ThetaCellDim</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxCell =  Idx&lt;RCellDim, ThetaCellDim&gt;</definition>
        <argsstring></argsstring>
        <name>IdxCell</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxCell</qualifiedname>
        <briefdescription>
<para>Tag an index of cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="207" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a3b3cec61b31eaf06a9a50d3f8a4489a7" prot="private" static="no">
        <type>typename <ref refid="structR_1a35006d7e5031a9bd48e5af62534c421f" kindref="member">R::Dual</ref></type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::R_cov =  typename R::Dual</definition>
        <argsstring></argsstring>
        <name>R_cov</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::R_cov</qualifiedname>
        <briefdescription>
<para>The radial dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="68" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a47b8b9be91911e16df53db22546aacc5" prot="private" static="no">
        <type>typename <ref refid="structTheta_1a1f99557f831a14c03c9d03e1a5e33d40" kindref="member">Theta::Dual</ref></type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::Theta_cov =  typename Theta::Dual</definition>
        <argsstring></argsstring>
        <name>Theta_cov</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::Theta_cov</qualifiedname>
        <briefdescription>
<para>The poloidal dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="70" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a5ed9824268c06b769229c94118423ff2" prot="private" static="no">
        <type>Coord&lt; <ref refid="classPolarSplineFEMPoissonLikeSolver_1aea7575e5ec7f7e2a776c1677a79137d9" kindref="member">R</ref>, <ref refid="classPolarSplineFEMPoissonLikeSolver_1a0c880f33d839cedfafdf2b3b32139417" kindref="member">Theta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::CoordRTheta =  Coord&lt;R, Theta&gt;</definition>
        <argsstring></argsstring>
        <name>CoordRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::CoordRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="102" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1aa8192e1614879aa891746d3fa69e2c67" prot="private" static="no">
        <type>typename <ref refid="classPolarBSplines_1af53c68e9827efcffeee27e353ac3ef7e" kindref="member">PolarBSplinesRTheta::BSplinesR_tag</ref></type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::BSplinesR =  typename PolarBSplinesRTheta::BSplinesR_tag</definition>
        <argsstring></argsstring>
        <name>BSplinesR</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::BSplinesR</qualifiedname>
        <briefdescription>
<para>The 1D B-splines in the radial direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="104" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1afab28aaea0218b12714a02e758802e35" prot="private" static="no">
        <type>typename <ref refid="classPolarBSplines_1a7c93c1bedcf655bff666950a59eff9ea" kindref="member">PolarBSplinesRTheta::BSplinesTheta_tag</ref></type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::BSplinesTheta =  typename PolarBSplinesRTheta::BSplinesTheta_tag</definition>
        <argsstring></argsstring>
        <name>BSplinesTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::BSplinesTheta</qualifiedname>
        <briefdescription>
<para>The 1D B-splines in the poloidal direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="106" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1aa0f511a953d87b08a5581f52775d3caf" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="structGridR" kindref="compound">GridR</ref>, <ref refid="structGridTheta" kindref="compound">GridTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeRTheta =  IdxRange&lt;GridR, GridTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="108" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a97c05acaf33da3726713692ff152ba7f" prot="private" static="no">
        <type>Idx&lt; <ref refid="structGridR" kindref="compound">GridR</ref>, <ref refid="structGridTheta" kindref="compound">GridTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRTheta =  Idx&lt;GridR, GridTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="109" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a611821800abcf638b859b4129691642a" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="structPolarBSplinesRTheta" kindref="compound">PolarBSplinesRTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeBSPolar =  IdxRange&lt;PolarBSplinesRTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeBSPolar</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeBSPolar</qualifiedname>
        <briefdescription>
<para>The type of an index range over the polar B-splines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="112" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a379650fe83430816bef2f6b155e408d9" prot="private" static="no">
        <type>Idx&lt; <ref refid="structPolarBSplinesRTheta" kindref="compound">PolarBSplinesRTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxBSPolar =  Idx&lt;PolarBSplinesRTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxBSPolar</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxBSPolar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="113" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1acd16d9f1b7e09558dbc95ecd45e4ca6b" prot="private" static="no">
        <type>IdxStep&lt; <ref refid="structPolarBSplinesRTheta" kindref="compound">PolarBSplinesRTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxStepBSPolar =  IdxStep&lt;PolarBSplinesRTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxStepBSPolar</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxStepBSPolar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="114" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a04c7856eb4b764bbbff5be10f3ab282b" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeBSR =  IdxRange&lt;BSplinesR&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeBSR</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeBSR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="116" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1ae8d5606c6d8a74d16a7525cac2fbeac1" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeBSTheta =  IdxRange&lt;BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeBSTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeBSTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="117" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a12ea78ada761ea9bc48d2133568557eb" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref>, <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeBSRTheta =  IdxRange&lt;BSplinesR, BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeBSRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeBSRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="118" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1ab734435ac3d48e6ef7a9ed4c4c7759ca" prot="private" static="no">
        <type>Idx&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxBSR =  Idx&lt;BSplinesR&gt;</definition>
        <argsstring></argsstring>
        <name>IdxBSR</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxBSR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="120" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1ab8e49d9758245bf8acc7ed5a8aa0144d" prot="private" static="no">
        <type>Idx&lt; <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxBSTheta =  Idx&lt;BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxBSTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxBSTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="121" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1ac8301b508a21377b16f42738b3b538db" prot="private" static="no">
        <type>Idx&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref>, <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxBSRTheta =  Idx&lt;BSplinesR, BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxBSRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxBSRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="122" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1ace510c6d1c74c3de2237863c059005e6" prot="private" static="no">
        <type>IdxStep&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxStepBSR =  IdxStep&lt;BSplinesR&gt;</definition>
        <argsstring></argsstring>
        <name>IdxStepBSR</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxStepBSR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="124" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a1b50a3f154b869880484162d845bb80b" prot="private" static="no">
        <type>IdxStep&lt; <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxStepBSTheta =  IdxStep&lt;BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxStepBSTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxStepBSTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="125" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1acb822602e3cf7ed13ad88a3b081ef8fe" prot="private" static="no">
        <type>ddc::detail::convert_type_seq_to_discrete_domain_t&lt; ddc::type_seq_replace_t&lt; ddc::to_type_seq_t&lt; IdxRangeFull &gt;, ddc::detail::TypeSeq&lt; <ref refid="structGridR" kindref="compound">GridR</ref>, <ref refid="structGridTheta" kindref="compound">GridTheta</ref> &gt;, ddc::detail::TypeSeq&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref>, <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt; &gt; &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeBatchedBSRTheta =  ddc::detail::convert_type_seq_to_discrete_domain_t&lt;ddc::type_seq_replace_t&lt; ddc::to_type_seq_t&lt;IdxRangeFull&gt;, ddc::detail::TypeSeq&lt;GridR, GridTheta&gt;, ddc::detail::TypeSeq&lt;BSplinesR, BSplinesTheta&gt; &gt;&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeBatchedBSRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeBatchedBSRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="127" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a8ba9f918887d84294520a338796f76bb" prot="private" static="no">
        <type>ddc::remove_dims_of_t&lt; IdxRangeFull, IdxRange&lt; <ref refid="structGridR" kindref="compound">GridR</ref> &gt;, IdxRange&lt; <ref refid="structGridTheta" kindref="compound">GridTheta</ref> &gt; &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeBatch =  ddc::remove_dims_of_t&lt;IdxRangeFull, IdxRange&lt;GridR&gt;, IdxRange&lt;GridTheta&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeBatch</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeBatch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="133" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a98d4ee9d9dcccd5de223c9165f405aa6" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimRMesh" kindref="compound">QDimRMesh</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeQuadratureR =  IdxRange&lt;QDimRMesh&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeQuadratureR</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeQuadratureR</qualifiedname>
        <briefdescription>
<para>Tag the quadrature index range in the first dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="138" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a5d0f9488ecc6325243f7d6b9d25b7d9c" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimThetaMesh" kindref="compound">QDimThetaMesh</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeQuadratureTheta =  IdxRange&lt;QDimThetaMesh&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeQuadratureTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeQuadratureTheta</qualifiedname>
        <briefdescription>
<para>Tag the quadrature index range in the second dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="142" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a723d46fe2dcbb4dcbb262fde4dd98971" prot="private" static="no">
        <type>IdxRange&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimRMesh" kindref="compound">QDimRMesh</ref>, <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimThetaMesh" kindref="compound">QDimThetaMesh</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxRangeQuadratureRTheta =  IdxRange&lt;QDimRMesh, QDimThetaMesh&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeQuadratureRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxRangeQuadratureRTheta</qualifiedname>
        <briefdescription>
<para>Tag the quadrature index range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="146" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a01a11ac8a66e7982c3ae66c1a96829b2" prot="private" static="no">
        <type>Idx&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimRMesh" kindref="compound">QDimRMesh</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxQuadratureR =  Idx&lt;QDimRMesh&gt;</definition>
        <argsstring></argsstring>
        <name>IdxQuadratureR</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxQuadratureR</qualifiedname>
        <briefdescription>
<para>Tag the elements (index) of the quadrature index range in the first dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="150" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a42b66cc49486ce719486644cd5105dc4" prot="private" static="no">
        <type>Idx&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimThetaMesh" kindref="compound">QDimThetaMesh</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxQuadratureTheta =  Idx&lt;QDimThetaMesh&gt;</definition>
        <argsstring></argsstring>
        <name>IdxQuadratureTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxQuadratureTheta</qualifiedname>
        <briefdescription>
<para>Tag the elements (index) of the quadrature index range in the second dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="154" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1aad3c41b90fe55fa2fcd88152956d5618" prot="private" static="no">
        <type>Idx&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimRMesh" kindref="compound">QDimRMesh</ref>, <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimThetaMesh" kindref="compound">QDimThetaMesh</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxQuadratureRTheta =  Idx&lt;QDimRMesh, QDimThetaMesh&gt;</definition>
        <argsstring></argsstring>
        <name>IdxQuadratureRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxQuadratureRTheta</qualifiedname>
        <briefdescription>
<para>Tag the elements (index) of the quadrature index range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="158" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a8ed6f5ff20871463881421d6c5338ad4" prot="private" static="no">
        <type>IdxStep&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimRMesh" kindref="compound">QDimRMesh</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxStepQuadratureR =  IdxStep&lt;QDimRMesh&gt;</definition>
        <argsstring></argsstring>
        <name>IdxStepQuadratureR</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxStepQuadratureR</qualifiedname>
        <briefdescription>
<para>Tag a vector on the first dimension of the quadrature mesh. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="162" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a45b9a46f56863b716fe7bdfa218d8216" prot="private" static="no">
        <type>IdxStep&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimThetaMesh" kindref="compound">QDimThetaMesh</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::IdxStepQuadratureTheta =  IdxStep&lt;QDimThetaMesh&gt;</definition>
        <argsstring></argsstring>
        <name>IdxStepQuadratureTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::IdxStepQuadratureTheta</qualifiedname>
        <briefdescription>
<para>Tag a vector on the second dimension of the quadrature mesh. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="166" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1aa926beea49d42f15e562b8fb5a0dd662" prot="private" static="no">
        <type>ddc::NonUniformBsplinesKnots&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::KnotsR =  ddc::NonUniformBsplinesKnots&lt;BSplinesR&gt;</definition>
        <argsstring></argsstring>
        <name>KnotsR</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::KnotsR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="168" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1ad0e185e0b85a3cb0b47dc287b6b08f73" prot="private" static="no">
        <type>ddc::NonUniformBsplinesKnots&lt; <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::KnotsTheta =  ddc::NonUniformBsplinesKnots&lt;BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>KnotsTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::KnotsTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="169" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1acb023638216b3762609c61705197afbd" prot="private" static="no">
        <type>DConstField&lt; IdxRangeBatchedBSRTheta &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::ConstSpline2D =  DConstField&lt;IdxRangeBatchedBSRTheta&gt;</definition>
        <argsstring></argsstring>
        <name>ConstSpline2D</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::ConstSpline2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="171" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a6498904860bc27a1e1f350666d25d81f" prot="private" static="no">
        <type>DFieldMem&lt; IdxRange&lt; <ref refid="structPolarBSplinesRTheta" kindref="compound">PolarBSplinesRTheta</ref> &gt; &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::PolarSplineMemRTheta =  DFieldMem&lt;IdxRange&lt;PolarBSplinesRTheta&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>PolarSplineMemRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::PolarSplineMemRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="172" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1ab529c6084f7f0c63b82c48bab8554b96" prot="private" static="no">
        <type>DField&lt; IdxRange&lt; <ref refid="structPolarBSplinesRTheta" kindref="compound">PolarBSplinesRTheta</ref> &gt; &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::PolarSplineRTheta =  DField&lt;IdxRange&lt;PolarBSplinesRTheta&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>PolarSplineRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::PolarSplineRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="173" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1aed49e02c44943f52f7a4d1da9fde74ca" prot="private" static="no">
        <type>FieldMem&lt; CoordRTheta, IdxRangeRTheta &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::CoordFieldMemRTheta =  FieldMem&lt;CoordRTheta, IdxRangeRTheta&gt;</definition>
        <argsstring></argsstring>
        <name>CoordFieldMemRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::CoordFieldMemRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="175" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a5beb43d60fdcd7c21a91ca6c7d8d68ff" prot="private" static="no">
        <type>Field&lt; CoordRTheta, IdxRangeRTheta &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::CoordFieldRTheta =  Field&lt;CoordRTheta, IdxRangeRTheta&gt;</definition>
        <argsstring></argsstring>
        <name>CoordFieldRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::CoordFieldRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="176" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarSplineFEMPoissonLikeSolver_1a0310b3811d5546529c40e40fa75c1c07" prot="private" static="no">
        <type>DField&lt; IdxRangeRTheta &gt;</type>
        <definition>using PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::DFieldRTheta =  DField&lt;IdxRangeRTheta&gt;</definition>
        <argsstring></argsstring>
        <name>DFieldRTheta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::DFieldRTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="177" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1abea37425f329fb962279f550a9a900a9" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::s_n_gauss_legendre_r</definition>
        <argsstring></argsstring>
        <name>s_n_gauss_legendre_r</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::s_n_gauss_legendre_r</qualifiedname>
        <initializer>= BSplinesR::degree() + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="210" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a0f4757ae5829f507a44f6ab119fe9edd" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::s_n_gauss_legendre_theta</definition>
        <argsstring></argsstring>
        <name>s_n_gauss_legendre_theta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::s_n_gauss_legendre_theta</qualifiedname>
        <initializer>= BSplinesTheta::degree() + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="211" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a86e2ff04d5704480a5a3fa3a300c4b3b" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_n_overlap_cells</definition>
        <argsstring></argsstring>
        <name>m_n_overlap_cells</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_n_overlap_cells</qualifiedname>
        <initializer>= <ref refid="classPolarBSplines_1ae4895a87f3e1ed953614a3546c319762" kindref="member">PolarBSplinesRTheta::continuity</ref> + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="213" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a9563f3ca1e57241e12f5350353577093" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr IdxStep&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1RBasisSubset" kindref="compound">RBasisSubset</ref> &gt;</type>
        <definition>constexpr IdxStep&lt;RBasisSubset&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_n_non_zero_bases_r</definition>
        <argsstring></argsstring>
        <name>m_n_non_zero_bases_r</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_n_non_zero_bases_r</qualifiedname>
        <initializer>= IdxStep&lt;<ref refid="structPolarSplineFEMPoissonLikeSolver_1_1RBasisSubset" kindref="compound">RBasisSubset</ref>&gt;(BSplinesR::degree() + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="217" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a715217c6ef2d21949b4870fdb9c25b86" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr IdxStep&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1ThetaBasisSubset" kindref="compound">ThetaBasisSubset</ref> &gt;</type>
        <definition>constexpr IdxStep&lt;ThetaBasisSubset&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_n_non_zero_bases_theta</definition>
        <argsstring></argsstring>
        <name>m_n_non_zero_bases_theta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_n_non_zero_bases_theta</qualifiedname>
        <initializer>= IdxStep&lt;<ref refid="structPolarSplineFEMPoissonLikeSolver_1_1ThetaBasisSubset" kindref="compound">ThetaBasisSubset</ref>&gt;(BSplinesTheta::degree() + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="221" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1aed25fa6b5483a9197245a36e3f888ee4" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr IdxRange&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1RBasisSubset" kindref="compound">RBasisSubset</ref> &gt;</type>
        <definition>constexpr IdxRange&lt;RBasisSubset&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_non_zero_bases_r</definition>
        <argsstring></argsstring>
        <name>m_non_zero_bases_r</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_non_zero_bases_r</qualifiedname>
        <initializer>= IdxRange&lt;<ref refid="structPolarSplineFEMPoissonLikeSolver_1_1RBasisSubset" kindref="compound">RBasisSubset</ref>&gt;(Idx&lt;<ref refid="structPolarSplineFEMPoissonLikeSolver_1_1RBasisSubset" kindref="compound">RBasisSubset</ref>&gt; {0}, m_n_non_zero_bases_r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="224" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a35305dfc6490994aa034f8e27ce2764a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr IdxRange&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1ThetaBasisSubset" kindref="compound">ThetaBasisSubset</ref> &gt;</type>
        <definition>constexpr IdxRange&lt;ThetaBasisSubset&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_non_zero_bases_theta</definition>
        <argsstring></argsstring>
        <name>m_non_zero_bases_theta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_non_zero_bases_theta</qualifiedname>
        <initializer>= IdxRange&lt;<ref refid="structPolarSplineFEMPoissonLikeSolver_1_1ThetaBasisSubset" kindref="compound">ThetaBasisSubset</ref>&gt;(Idx&lt;<ref refid="structPolarSplineFEMPoissonLikeSolver_1_1ThetaBasisSubset" kindref="compound">ThetaBasisSubset</ref>&gt; {0}, m_n_non_zero_bases_theta)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="226" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1ae6ed06bc3045f9358fcecc5faf46ce61" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_nbasis_r</definition>
        <argsstring></argsstring>
        <name>m_nbasis_r</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_nbasis_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="229" column="15" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a3e0b42cae266052c9207b486955bb992" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_nbasis_theta</definition>
        <argsstring></argsstring>
        <name>m_nbasis_theta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_nbasis_theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="230" column="15" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1ac0a14f99526d7311034a9492c44bdfb8" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_matrix_size</definition>
        <argsstring></argsstring>
        <name>m_matrix_size</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_matrix_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="233" column="15" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a0aac03ca1cbd08119ed59a9798076bd1" prot="private" static="no" mutable="no">
        <type>IdxRangeBSPolar</type>
        <definition>IdxRangeBSPolar PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_idxrange_fem_non_singular</definition>
        <argsstring></argsstring>
        <name>m_idxrange_fem_non_singular</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_idxrange_fem_non_singular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="236" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a0aca9d7c40b1b901694372d17a0d0f0c" prot="private" static="no" mutable="no">
        <type>IdxRangeBSR</type>
        <definition>IdxRangeBSR PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_idxrange_bsplines_r</definition>
        <argsstring></argsstring>
        <name>m_idxrange_bsplines_r</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_idxrange_bsplines_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="237" column="17" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1ac7b36b1b379aa95a81915deefd3c05db" prot="private" static="no" mutable="no">
        <type>IdxRangeBSTheta</type>
        <definition>IdxRangeBSTheta PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_idxrange_bsplines_theta</definition>
        <argsstring></argsstring>
        <name>m_idxrange_bsplines_theta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_idxrange_bsplines_theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="238" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1aee1a179fecc86f75448b4a77f2ae684f" prot="private" static="no" mutable="no">
        <type>IdxRangeQuadratureR</type>
        <definition>IdxRangeQuadratureR PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_idxrange_quadrature_r</definition>
        <argsstring></argsstring>
        <name>m_idxrange_quadrature_r</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_idxrange_quadrature_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="240" column="25" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a1634910cc8538644425a6bf26c55869b" prot="private" static="no" mutable="no">
        <type>IdxRangeQuadratureTheta</type>
        <definition>IdxRangeQuadratureTheta PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_idxrange_quadrature_theta</definition>
        <argsstring></argsstring>
        <name>m_idxrange_quadrature_theta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_idxrange_quadrature_theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="241" column="29" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1afd0422e5a6cdd44919a33a1fdef5de03" prot="private" static="no" mutable="no">
        <type>IdxRangeQuadratureRTheta</type>
        <definition>IdxRangeQuadratureRTheta PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_idxrange_quadrature_singular</definition>
        <argsstring></argsstring>
        <name>m_idxrange_quadrature_singular</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_idxrange_quadrature_singular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="242" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a6115292f2e279384a9aba2f9e98c8622" prot="private" static="no" mutable="no">
        <type>FieldMem&lt; double, IdxRangeQuadratureR &gt;</type>
        <definition>FieldMem&lt;double, IdxRangeQuadratureR&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_weights_r</definition>
        <argsstring></argsstring>
        <name>m_weights_r</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_weights_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="245" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a3451e432cc47c49dd4d274c36cccf3fb" prot="private" static="no" mutable="no">
        <type>FieldMem&lt; double, IdxRangeQuadratureTheta &gt;</type>
        <definition>FieldMem&lt;double, IdxRangeQuadratureTheta&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_weights_theta</definition>
        <argsstring></argsstring>
        <name>m_weights_theta</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_weights_theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="246" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1ab12917c326786f23f1852e2ac557715b" prot="private" static="no" mutable="no">
        <type>host_t&lt; FieldMem&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv2DType" kindref="compound">EvalDeriv2DType</ref>, IdxRange&lt; <ref refid="structPolarBSplinesRTheta" kindref="compound">PolarBSplinesRTheta</ref>, <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimRMesh" kindref="compound">QDimRMesh</ref>, <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimThetaMesh" kindref="compound">QDimThetaMesh</ref> &gt; &gt; &gt;</type>
        <definition>host_t&lt;FieldMem&lt;EvalDeriv2DType, IdxRange&lt;PolarBSplinesRTheta, QDimRMesh, QDimThetaMesh&gt; &gt; &gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_singular_basis_vals_and_derivs</definition>
        <argsstring></argsstring>
        <name>m_singular_basis_vals_and_derivs</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_singular_basis_vals_and_derivs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="250" column="13" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a60b8ec8f412fe07a98512ca4de240d27" prot="private" static="no" mutable="no">
        <type>host_t&lt; FieldMem&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv1DType" kindref="compound">EvalDeriv1DType</ref>, IdxRange&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1RBasisSubset" kindref="compound">RBasisSubset</ref>, <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimRMesh" kindref="compound">QDimRMesh</ref> &gt; &gt; &gt;</type>
        <definition>host_t&lt;FieldMem&lt;EvalDeriv1DType, IdxRange&lt;RBasisSubset, QDimRMesh&gt; &gt; &gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_r_basis_vals_and_derivs</definition>
        <argsstring></argsstring>
        <name>m_r_basis_vals_and_derivs</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_r_basis_vals_and_derivs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="251" column="12" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a4b055701d14677f237990db5d637c478" prot="private" static="no" mutable="no">
        <type>host_t&lt; FieldMem&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv1DType" kindref="compound">EvalDeriv1DType</ref>, IdxRange&lt; <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1ThetaBasisSubset" kindref="compound">ThetaBasisSubset</ref>, <ref refid="structPolarSplineFEMPoissonLikeSolver_1_1QDimThetaMesh" kindref="compound">QDimThetaMesh</ref> &gt; &gt; &gt;</type>
        <definition>host_t&lt;FieldMem&lt;EvalDeriv1DType, IdxRange&lt;ThetaBasisSubset, QDimThetaMesh&gt; &gt; &gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_theta_basis_vals_and_derivs</definition>
        <argsstring></argsstring>
        <name>m_theta_basis_vals_and_derivs</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_theta_basis_vals_and_derivs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="253" column="13" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a397c5353c41a5e9e73d4acc6d9c678c4" prot="private" static="no" mutable="no">
        <type>FieldMem&lt; double, IdxRangeQuadratureRTheta &gt;</type>
        <definition>FieldMem&lt;double, IdxRangeQuadratureRTheta&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_int_volume</definition>
        <argsstring></argsstring>
        <name>m_int_volume</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_int_volume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="255" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a028a96d6e0ed2e0332ee0c33141f3753" prot="private" static="no" mutable="no">
        <type><ref refid="classPolarSplineEvaluator" kindref="compound">PolarSplineEvaluator</ref>&lt; <ref refid="structPolarBSplinesRTheta" kindref="compound">PolarBSplinesRTheta</ref>, ddc::NullExtrapolationRule &gt;</type>
        <definition>PolarSplineEvaluator&lt;PolarBSplinesRTheta, ddc::NullExtrapolationRule&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_polar_spline_evaluator</definition>
        <argsstring></argsstring>
        <name>m_polar_spline_evaluator</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_polar_spline_evaluator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="257" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a55664a455be46f70f1d33768cee0e7b3" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classMatrixBatchCsr" kindref="compound">MatrixBatchCsr</ref>&lt; Kokkos::DefaultExecutionSpace, MatrixBatchCsrSolver::CG &gt; &gt;</type>
        <definition>std::unique_ptr&lt;MatrixBatchCsr&lt;Kokkos::DefaultExecutionSpace, MatrixBatchCsrSolver::CG&gt; &gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_gko_matrix</definition>
        <argsstring></argsstring>
        <name>m_gko_matrix</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_gko_matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="259" column="13" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a70bacb50d6ea8e14e8d918520b54e0ee" prot="private" static="no" mutable="yes">
        <type>host_t&lt; PolarSplineMemRTheta &gt;</type>
        <definition>host_t&lt;PolarSplineMemRTheta&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_phi_spline_coef</definition>
        <argsstring></argsstring>
        <name>m_phi_spline_coef</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_phi_spline_coef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="260" column="20" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a47c4cc4cf0fff9cf9cfc174e19e1930d" prot="private" static="no" mutable="no">
        <type>Kokkos::View&lt; double **, Kokkos::LayoutRight &gt;</type>
        <definition>Kokkos::View&lt;double**, Kokkos::LayoutRight&gt; PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_x_init</definition>
        <argsstring></argsstring>
        <name>m_x_init</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_x_init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="261" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarSplineFEMPoissonLikeSolver_1a43b7466804454a28b1dda74afcb77a9f" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::m_batch_idx</definition>
        <argsstring></argsstring>
        <name>m_batch_idx</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::m_batch_idx</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="263" column="15" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="263" bodyend="263"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1a6e4d95b7b1ce10cf43579ff77b9ea88b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mapping</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::PolarSplineFEMPoissonLikeSolver</definition>
        <argsstring>(ConstSpline2D coeff_alpha, ConstSpline2D coeff_beta, Mapping const &amp;mapping, SplineRThetaEvaluatorNullBound const &amp;spline_evaluator)</argsstring>
        <name>PolarSplineFEMPoissonLikeSolver</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::PolarSplineFEMPoissonLikeSolver</qualifiedname>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_alpha</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_beta</declname>
        </param>
        <param>
          <type>Mapping const &amp;</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>SplineRThetaEvaluatorNullBound const &amp;</type>
          <declname>spline_evaluator</declname>
        </param>
        <briefdescription>
<para>Instantiate a polar Poisson-like solver using FEM with B-splines. </para>
        </briefdescription>
        <detaileddescription>
<para>The equation we are studying:</para>
<para>(1) <formula id="346">$  L\phi = - \nabla \cdot (\alpha \nabla \phi) + \beta \phi = \rho $</formula>, in <formula id="7">$ \Omega$</formula>,</para>
<para><formula id="347">$  \phi = 0 $</formula>, on <formula id="348">$ \partial \Omega$</formula>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coeff_alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="350">$ \alpha $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="326">$ \beta $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping from the logical domain to the physical domain where the equation is defined. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spline_evaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>An evaluator for evaluating 2D splines on <formula id="349">$(r,\theta)$</formula>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>A class describing a mapping from curvilinear coordinates to Cartesian coordinates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="289" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="289" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1ae5645f014d26559165955e51746f3e70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mapping</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::compute_singular_elements</definition>
        <argsstring>(ConstSpline2D coeff_alpha, ConstSpline2D coeff_beta, Mapping const &amp;mapping, SplineRThetaEvaluatorNullBound const &amp;spline_evaluator, Kokkos::View&lt; double **, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const values_csr_host, Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const col_idx_csr_host, Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const nnz_per_row_csr_host)</argsstring>
        <name>compute_singular_elements</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::compute_singular_elements</qualifiedname>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_alpha</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_beta</declname>
        </param>
        <param>
          <type>Mapping const &amp;</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>SplineRThetaEvaluatorNullBound const &amp;</type>
          <declname>spline_evaluator</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; double **, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const</type>
          <declname>values_csr_host</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const</type>
          <declname>col_idx_csr_host</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const</type>
          <declname>nnz_per_row_csr_host</declname>
        </param>
        <briefdescription>
<para>Computes the matrix element corresponding to the singular area. ie: the region enclosing the O-point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coeff_alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="350">$ \alpha $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="326">$ \beta $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping from the logical domain to the physical domain where the equation is defined. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spline_evaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>An evaluator for evaluating 2D splines on <formula id="349">$(r,\theta)$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values_csr_host</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D Kokkos view which stores the values of non-zero elements for the whole batch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">col_idx_csr_host</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D Kokkos view which stores the column indices for each non-zero component.(only for one matrix). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">nnz_per_row_csr_host</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D Kokkos view of length matrix_size+1 which stores the count of the non-zeros along the lines of the matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="520" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="520" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1a36be84f08a082b52a73f5134b8f1a8e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mapping</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::compute_overlapping_singular_elements</definition>
        <argsstring>(ConstSpline2D coeff_alpha, ConstSpline2D coeff_beta, Mapping const &amp;mapping, SplineRThetaEvaluatorNullBound const &amp;spline_evaluator, Kokkos::View&lt; double **, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const values_csr_host, Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const col_idx_csr_host, Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const nnz_per_row_csr_host)</argsstring>
        <name>compute_overlapping_singular_elements</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::compute_overlapping_singular_elements</qualifiedname>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_alpha</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_beta</declname>
        </param>
        <param>
          <type>Mapping const &amp;</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>SplineRThetaEvaluatorNullBound const &amp;</type>
          <declname>spline_evaluator</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; double **, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const</type>
          <declname>values_csr_host</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const</type>
          <declname>col_idx_csr_host</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const</type>
          <declname>nnz_per_row_csr_host</declname>
        </param>
        <briefdescription>
<para>Computes the matrix element corresponding to singular elements overlapping with regular grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coeff_alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="350">$ \alpha $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="326">$ \beta $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping from the logical domain to the physical domain where the equation is defined. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spline_evaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>An evaluator for evaluating 2D splines on <formula id="349">$(r,\theta)$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values_csr_host</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D Kokkos view which stores the values of non-zero elements for the whole batch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">col_idx_csr_host</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D Kokkos view which stores the column indices for each non-zero component.(only for one matrix) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">nnz_per_row_csr_host</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D Kokkos view of length matrix_size+1 which stores the count of the non-zeros along the lines of the matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="598" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="598" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1a161e772a03b980ad5cb19bdeb6b02925" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mapping</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::compute_stencil_elements</definition>
        <argsstring>(ConstSpline2D coeff_alpha, ConstSpline2D coeff_beta, Mapping const &amp;mapping, SplineRThetaEvaluatorNullBound const &amp;spline_evaluator, Kokkos::View&lt; double **, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const values_csr_host, Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const col_idx_csr_host, Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const nnz_per_row_csr_host)</argsstring>
        <name>compute_stencil_elements</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::compute_stencil_elements</qualifiedname>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_alpha</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_beta</declname>
        </param>
        <param>
          <type>Mapping const &amp;</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>SplineRThetaEvaluatorNullBound const &amp;</type>
          <declname>spline_evaluator</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; double **, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const</type>
          <declname>values_csr_host</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const</type>
          <declname>col_idx_csr_host</declname>
        </param>
        <param>
          <type>Kokkos::View&lt; int *, Kokkos::LayoutRight, Kokkos::HostSpace &gt; const</type>
          <declname>nnz_per_row_csr_host</declname>
        </param>
        <briefdescription>
<para>Computes the matrix element corresponding to the regular stencil ie: out to singular or overlapping areas. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coeff_alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="350">$ \alpha $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="326">$ \beta $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping from the logical domain to the physical domain where the equation is defined. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spline_evaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>An evaluator for evaluating 2D splines on <formula id="349">$(r,\theta)$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values_csr_host</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D Kokkos view which stores the values of non-zero elements for the whole batch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">col_idx_csr_host</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D Kokkos view which stores the column indices for each non-zero component.(only for one matrix) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">nnz_per_row_csr_host</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D Kokkos view of length matrix_size+1 which stores the count of the non-zeros along the lines of the matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="737" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="737" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1a7d75afef8e0d4e4c61776b58117697d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RHSFunction</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::operator()</definition>
        <argsstring>(RHSFunction const &amp;rhs, host_t&lt; PolarSplineRTheta &gt; spline) const</argsstring>
        <name>operator()</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::operator()</qualifiedname>
        <param>
          <type>RHSFunction const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>host_t&lt; PolarSplineRTheta &gt;</type>
          <declname>spline</declname>
        </param>
        <briefdescription>
<para>Solve the Poisson-like equation. </para>
        </briefdescription>
        <detaileddescription>
<para>This operator returns the coefficients associated with the B-Splines of the solution <formula id="191">$\phi$</formula>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The rhs <formula id="351">$ \rho$</formula> of the Poisson-like equation. The type is templated but we can use the <ref refid="classPoissonLikeRHSFunction" kindref="compound">PoissonLikeRHSFunction</ref> class. It must be an object with an operator() which evaluates a CoordRTheta and can be called from CPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">spline</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the solution <formula id="191">$\phi$</formula>, also used as initial data for the iterative solver. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="855" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="855" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1ac699f74359d1f9160bed57ffcf325861" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RHSFunction</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::operator()</definition>
        <argsstring>(RHSFunction const &amp;rhs, DFieldRTheta phi) const</argsstring>
        <name>operator()</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::operator()</qualifiedname>
        <param>
          <type>RHSFunction const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>DFieldRTheta</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>Solve the Poisson-like equation. </para>
        </briefdescription>
        <detaileddescription>
<para>This operator uses the other operator () and returns the values on the grid of the solution <formula id="191">$\phi$</formula>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The rhs <formula id="351">$ \rho$</formula> of the Poisson-like equation. The type is templated but we can use the <ref refid="classPoissonLikeRHSFunction" kindref="compound">PoissonLikeRHSFunction</ref> class. It must be an object with an operator() which evaluates a CoordRTheta and can be called from CPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">phi</parametername>
</parameternamelist>
<parameterdescription>
<para>The values of the solution <formula id="191">$\phi$</formula> on the given coords_eval, also used as initial data for the iterative solver. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="999" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="999" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1a90ab8ff1603bc0a3f36b5a0c5077de5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mapping</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::get_matrix_stencil_element</definition>
        <argsstring>(IdxBSRTheta idx_test, IdxBSRTheta idx_trial, ConstSpline2D coeff_alpha, ConstSpline2D coeff_beta, SplineRThetaEvaluatorNullBound const &amp;evaluator, Mapping const &amp;mapping)</argsstring>
        <name>get_matrix_stencil_element</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::get_matrix_stencil_element</qualifiedname>
        <param>
          <type>IdxBSRTheta</type>
          <declname>idx_test</declname>
        </param>
        <param>
          <type>IdxBSRTheta</type>
          <declname>idx_trial</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_alpha</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_beta</declname>
        </param>
        <param>
          <type>SplineRThetaEvaluatorNullBound const &amp;</type>
          <declname>evaluator</declname>
        </param>
        <param>
          <type>Mapping const &amp;</type>
          <declname>mapping</declname>
        </param>
        <briefdescription>
<para>Computes the matrix element corresponding to two tensor product splines with index idx_test and idx_trial. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_test</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for polar B-spline in the test space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx_trial</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for polar B-spline in the trial space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="350">$ \alpha $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="326">$ \beta $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">evaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>An evaluator for evaluating 2D splines on <formula id="32">$ (r, \theta) $</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping from the logical domain to the physical domain where the equation is defined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the matrix element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="1338" column="12" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="1338" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1a15e528d25ba6df5a707e0b78c81c92e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::init_nnz_per_line</definition>
        <argsstring>(Kokkos::View&lt; int *, Kokkos::LayoutRight &gt; nnz_per_row) const</argsstring>
        <name>init_nnz_per_line</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::init_nnz_per_line</qualifiedname>
        <param>
          <type>Kokkos::View&lt; int *, Kokkos::LayoutRight &gt;</type>
          <declname>nnz_per_row</declname>
        </param>
        <briefdescription>
<para>Fills the nnz data structure by computing the number of non-zero per line. This number is linked to the weak formulation and depends on <formula id="349">$(r,\theta)$</formula> splines. After this function the array will contain: nnz_per_row[0] = 0. nnz_per_row[1] = 0. nnz_per_row[2] = number of non-zero elements in line 0. nnz_per_row[3] = number of non-zero elements in lines 0-1. ..._per_row nnz_per_row[matrix_size] = number of non-zero elements in lines 0-(matrix_size-1). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">nnz_per_row</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D Kokkos view of length matrix_size+1 which stores the sum of the non-zeros in the matrix on all lines up to the one in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="1497" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="1497" bodyend="1634"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1ad28d1360dd316f67bae8ae9a0b866958" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION IdxRangeQuadratureRTheta</type>
        <definition>static KOKKOS_FUNCTION IdxRangeQuadratureRTheta PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::get_quadrature_points_in_cell</definition>
        <argsstring>(int cell_idx_r, int cell_idx_theta)</argsstring>
        <name>get_quadrature_points_in_cell</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::get_quadrature_points_in_cell</qualifiedname>
        <param>
          <type>int</type>
          <declname>cell_idx_r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cell_idx_theta</declname>
        </param>
        <briefdescription>
<para>compute the quadrature range for a given pair of indices </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cell_idx_r</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for radial direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cell_idx_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for poloidal direction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The quadrature range corresponding to the <formula id="349">$(r,\theta)$</formula> indices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="1033" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="1033" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1af97748fe740d17247902a8b1d4b1f2ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mapping</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION double</type>
        <definition>static KOKKOS_FUNCTION double PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::weak_integral_element</definition>
        <argsstring>(IdxQuadratureR idx_r, IdxQuadratureTheta idx_theta, EvalDeriv2DType const &amp;test_bspline_val_and_deriv, EvalDeriv2DType const &amp;trial_bspline_val_and_deriv, ConstSpline2D coeff_alpha, ConstSpline2D coeff_beta, SplineRThetaEvaluatorNullBound const &amp;evaluator, Mapping const &amp;mapping, DField&lt; IdxRangeQuadratureRTheta &gt; int_volume)</argsstring>
        <name>weak_integral_element</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::weak_integral_element</qualifiedname>
        <param>
          <type>IdxQuadratureR</type>
          <declname>idx_r</declname>
        </param>
        <param>
          <type>IdxQuadratureTheta</type>
          <declname>idx_theta</declname>
        </param>
        <param>
          <type><ref refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv2DType" kindref="compound">EvalDeriv2DType</ref> const &amp;</type>
          <declname>test_bspline_val_and_deriv</declname>
        </param>
        <param>
          <type><ref refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv2DType" kindref="compound">EvalDeriv2DType</ref> const &amp;</type>
          <declname>trial_bspline_val_and_deriv</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_alpha</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_beta</declname>
        </param>
        <param>
          <type>SplineRThetaEvaluatorNullBound const &amp;</type>
          <declname>evaluator</declname>
        </param>
        <param>
          <type>Mapping const &amp;</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>DField&lt; IdxRangeQuadratureRTheta &gt;</type>
          <declname>int_volume</declname>
        </param>
        <briefdescription>
<para>compute the weak integral value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_r</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for radial direction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for poloidal direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">test_bspline_val_and_deriv</parametername>
</parameternamelist>
<parameterdescription>
<para>The data structure containing the derivatives over radial and poloidal directions for test space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trial_bspline_val_and_deriv</parametername>
</parameternamelist>
<parameterdescription>
<para>The data structure containing the derivatives over radial and poloidal directions for trial space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="350">$ \alpha $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="326">$ \beta $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping from the logical domain to the physical domain where the equation is defined. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">evaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>An evaluator for evaluating 2D splines on <formula id="349">$(r,\theta)$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_volume</parametername>
</parameternamelist>
<parameterdescription>
<para>The integral volume associated with each point used in the quadrature scheme. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the weak integral. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="1072" column="35" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="1072" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1abc0c26e86f3cfce747b6220c4b96ea23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>static KOKKOS_INLINE_FUNCTION void PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::get_value_and_gradient</definition>
        <argsstring>(double &amp;value, DVector&lt; R_cov, Theta_cov &gt; &amp;derivs, EvalDeriv1DType const &amp;r_basis, EvalDeriv1DType const &amp;theta_basis)</argsstring>
        <name>get_value_and_gradient</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::get_value_and_gradient</qualifiedname>
        <param>
          <type>double &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classTensor" kindref="compound">DVector</ref>&lt; <ref refid="structR__cov" kindref="compound">R_cov</ref>, <ref refid="structTheta__cov" kindref="compound">Theta_cov</ref> &gt; &amp;</type>
          <declname>derivs</declname>
        </param>
        <param>
          <type><ref refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv1DType" kindref="compound">EvalDeriv1DType</ref> const &amp;</type>
          <declname>r_basis</declname>
        </param>
        <param>
          <type><ref refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv1DType" kindref="compound">EvalDeriv1DType</ref> const &amp;</type>
          <declname>theta_basis</declname>
        </param>
        <briefdescription>
<para>Computes the value and gradient from r_basis and theta_basis inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The product of radial and poloidal values.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">derivs</parametername>
</parameternamelist>
<parameterdescription>
<para>derivatives over <formula id="32">$ (r, \theta) $</formula> directions.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r_basis</parametername>
</parameternamelist>
<parameterdescription>
<para>A data structure containing values and derivative over radial direction.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">theta_basis</parametername>
</parameternamelist>
<parameterdescription>
<para>A data structure containing values and derivative over poloidal direction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="1192" column="40" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="1192" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1a571591661a8661ddb186b64cdd5a0921" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>static KOKKOS_INLINE_FUNCTION void PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::get_value_and_gradient</definition>
        <argsstring>(double &amp;value, DVector&lt; R_cov, Theta_cov &gt; &amp;derivs, EvalDeriv2DType const &amp;basis, EvalDeriv2DType const &amp;)</argsstring>
        <name>get_value_and_gradient</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::get_value_and_gradient</qualifiedname>
        <param>
          <type>double &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classTensor" kindref="compound">DVector</ref>&lt; <ref refid="structR__cov" kindref="compound">R_cov</ref>, <ref refid="structTheta__cov" kindref="compound">Theta_cov</ref> &gt; &amp;</type>
          <declname>derivs</declname>
        </param>
        <param>
          <type><ref refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv2DType" kindref="compound">EvalDeriv2DType</ref> const &amp;</type>
          <declname>basis</declname>
        </param>
        <param>
          <type><ref refid="structPolarSplineFEMPoissonLikeSolver_1_1EvalDeriv2DType" kindref="compound">EvalDeriv2DType</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Computes the value and gradient from r_basis and theta_basis inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The product of radial and poloidal values.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">derivs</parametername>
</parameternamelist>
<parameterdescription>
<para>derivatives over <formula id="32">$ (r, \theta) $</formula> directions.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">basis</parametername>
</parameternamelist>
<parameterdescription>
<para>A data structure containing values and derivative over radial and poloidal directions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="1213" column="40" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="1213" bodyend="1221"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1ac94824022d7b90428f769126de178000" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mapping</type>
          </param>
          <param>
            <type>class TestValDerivType</type>
          </param>
          <param>
            <type>class TrialValDerivType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION double</type>
        <definition>static KOKKOS_FUNCTION double PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::templated_weak_integral_element</definition>
        <argsstring>(IdxQuadratureR idx_r, IdxQuadratureTheta idx_theta, TestValDerivType const &amp;test_bspline_val_and_deriv, TrialValDerivType const &amp;trial_bspline_val_and_deriv, TestValDerivType const &amp;test_bspline_val_and_deriv_theta, TrialValDerivType const &amp;trial_bspline_val_and_deriv_theta, ConstSpline2D coeff_alpha, ConstSpline2D coeff_beta, SplineRThetaEvaluatorNullBound const &amp;spline_evaluator, Mapping const &amp;mapping, DField&lt; IdxRangeQuadratureRTheta &gt; int_volume)</argsstring>
        <name>templated_weak_integral_element</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::templated_weak_integral_element</qualifiedname>
        <param>
          <type>IdxQuadratureR</type>
          <declname>idx_r</declname>
        </param>
        <param>
          <type>IdxQuadratureTheta</type>
          <declname>idx_theta</declname>
        </param>
        <param>
          <type>TestValDerivType const &amp;</type>
          <declname>test_bspline_val_and_deriv</declname>
        </param>
        <param>
          <type>TrialValDerivType const &amp;</type>
          <declname>trial_bspline_val_and_deriv</declname>
        </param>
        <param>
          <type>TestValDerivType const &amp;</type>
          <declname>test_bspline_val_and_deriv_theta</declname>
        </param>
        <param>
          <type>TrialValDerivType const &amp;</type>
          <declname>trial_bspline_val_and_deriv_theta</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_alpha</declname>
        </param>
        <param>
          <type>ConstSpline2D</type>
          <declname>coeff_beta</declname>
        </param>
        <param>
          <type>SplineRThetaEvaluatorNullBound const &amp;</type>
          <declname>spline_evaluator</declname>
        </param>
        <param>
          <type>Mapping const &amp;</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>DField&lt; IdxRangeQuadratureRTheta &gt;</type>
          <declname>int_volume</declname>
        </param>
        <briefdescription>
<para>Computes a quadrature summand corresponding to the inner product. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_r</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for radial direction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for poloidal direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">test_bspline_val_and_deriv</parametername>
</parameternamelist>
<parameterdescription>
<para>The data structure containing the derivatives over radial and poloidal directions for test space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trial_bspline_val_and_deriv</parametername>
</parameternamelist>
<parameterdescription>
<para>The data structure containing the derivatives over radial and poloidal directions for trial space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">test_bspline_val_and_deriv_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The data structure containing the value and derivative along poloidal direction for test space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trial_bspline_val_and_deriv_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The data structure containing the value and derivative along poloidal direction for trial space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="350">$ \alpha $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff_beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline representation of the <formula id="326">$ \beta $</formula> function in the definition of the Poisson-like equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spline_evaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>An evaluator for evaluating 2D splines on <formula id="349">$(r,\theta)$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping from the logical domain to the physical domain where the equation is defined. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_volume</parametername>
</parameternamelist>
<parameterdescription>
<para>The integral volume associated with each point used in the quadrature scheme. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>inner product of the test and trial spline is computed using a quadrature. This function returns one summand of the quadrature for the quadrature point given by the indices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="1258" column="35" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="1258" bodyend="1313"/>
      </memberdef>
      <memberdef kind="function" id="classPolarSplineFEMPoissonLikeSolver_1acbe58349c9ea9b73ae5476df678f4010" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION int</type>
        <definition>static KOKKOS_FUNCTION int PolarSplineFEMPoissonLikeSolver&lt; GridR, GridTheta, PolarBSplinesRTheta, SplineRThetaEvaluatorNullBound, IdxRangeFull &gt;::theta_mod</definition>
        <argsstring>(int idx_theta)</argsstring>
        <name>theta_mod</name>
        <qualifiedname>PolarSplineFEMPoissonLikeSolver::theta_mod</qualifiedname>
        <param>
          <type>int</type>
          <declname>idx_theta</declname>
        </param>
        <briefdescription>
<para>Calculates the modulo idx_theta in relation to cells number along <formula id="23">$ \theta $</formula> direction . </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_theta</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="23">$ \theta $</formula> index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding indice modulo <formula id="23">$ \theta $</formula> direction cells number </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="1473" column="32" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="1473" bodyend="1481"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Define a polar PDE solver for a Poisson-like equation. </para>
    </briefdescription>
    <detaileddescription>
<para>Solve the following Partial Differential Equation</para>
<para>(1) <formula id="346">$  L\phi = - \nabla \cdot (\alpha \nabla \phi) + \beta \phi = \rho $</formula>, in <formula id="7">$ \Omega$</formula>,</para>
<para><formula id="347">$  \phi = 0 $</formula>, on <formula id="348">$ \partial \Omega$</formula>,</para>
<para>As finite element basis functions we will use polar b-splines which are divided into two types: 1) Basis splines that can be written as a tensor product of 1d basis splines (&quot;non-singular B-splines&quot;) 2) Basis splines that cover the centre point and are defined as a linear combination of basis splines of type 1 (&quot;singular B-splines&quot;)</para>
<para>(see in Emily Bourne&apos;s thesis &quot;Non-Uniform Numerical Schemes for the Modelling of Turbulence
 in the 5D GYSELA Code&quot;. December 2022.)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="structGridR" kindref="compound">GridR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The radial grid type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structGridR" kindref="compound">GridR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The poloidal grid type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structPolarBSplinesRTheta" kindref="compound">PolarBSplinesRTheta</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the 2D polar B-splines (on the coordinate system <formula id="349">$(r,\theta)$</formula> including B-splines which traverse the O point). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SplineRThetaEvaluatorNullBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the 2D (cross-product) spline evaluator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IdxRangeFull</parametername>
</parameternamelist>
<parameterdescription>
<para>The full index range of <formula id="155">$ \phi $</formula> including any batch dimensions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" line="50" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp" bodystart="51" bodyend="1635"/>
    <listofallmembers>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1aa8192e1614879aa891746d3fa69e2c67" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>BSplinesR</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1afab28aaea0218b12714a02e758802e35" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>BSplinesTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a36be84f08a082b52a73f5134b8f1a8e2" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>compute_overlapping_singular_elements</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ae5645f014d26559165955e51746f3e70" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>compute_singular_elements</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a161e772a03b980ad5cb19bdeb6b02925" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>compute_stencil_elements</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1acb023638216b3762609c61705197afbd" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>ConstSpline2D</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1aed49e02c44943f52f7a4d1da9fde74ca" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>CoordFieldMemRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a5beb43d60fdcd7c21a91ca6c7d8d68ff" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>CoordFieldRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a5ed9824268c06b769229c94118423ff2" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>CoordRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a0310b3811d5546529c40e40fa75c1c07" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>DFieldRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a90ab8ff1603bc0a3f36b5a0c5077de5b" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>get_matrix_stencil_element</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ad28d1360dd316f67bae8ae9a0b866958" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>get_quadrature_points_in_cell</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1abc0c26e86f3cfce747b6220c4b96ea23" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>get_value_and_gradient</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a571591661a8661ddb186b64cdd5a0921" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>get_value_and_gradient</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a379650fe83430816bef2f6b155e408d9" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxBSPolar</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ab734435ac3d48e6ef7a9ed4c4c7759ca" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxBSR</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ac8301b508a21377b16f42738b3b538db" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxBSRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ab8e49d9758245bf8acc7ed5a8aa0144d" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxBSTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1aea010ac6bec8090ec2686ad2110befd4" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxCell</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a01a11ac8a66e7982c3ae66c1a96829b2" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxQuadratureR</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1aad3c41b90fe55fa2fcd88152956d5618" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxQuadratureRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a42b66cc49486ce719486644cd5105dc4" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxQuadratureTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a8ba9f918887d84294520a338796f76bb" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeBatch</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1acb822602e3cf7ed13ad88a3b081ef8fe" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeBatchedBSRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a611821800abcf638b859b4129691642a" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeBSPolar</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a04c7856eb4b764bbbff5be10f3ab282b" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeBSR</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a12ea78ada761ea9bc48d2133568557eb" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeBSRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ae8d5606c6d8a74d16a7525cac2fbeac1" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeBSTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a98d4ee9d9dcccd5de223c9165f405aa6" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeQuadratureR</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a723d46fe2dcbb4dcbb262fde4dd98971" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeQuadratureRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a5d0f9488ecc6325243f7d6b9d25b7d9c" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeQuadratureTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1aa0f511a953d87b08a5581f52775d3caf" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRangeRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a97c05acaf33da3726713692ff152ba7f" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1acd16d9f1b7e09558dbc95ecd45e4ca6b" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxStepBSPolar</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ace510c6d1c74c3de2237863c059005e6" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxStepBSR</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a1b50a3f154b869880484162d845bb80b" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxStepBSTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a8ed6f5ff20871463881421d6c5338ad4" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxStepQuadratureR</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a45b9a46f56863b716fe7bdfa218d8216" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>IdxStepQuadratureTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a15e528d25ba6df5a707e0b78c81c92e6" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>init_nnz_per_line</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1aa926beea49d42f15e562b8fb5a0dd662" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>KnotsR</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ad0e185e0b85a3cb0b47dc287b6b08f73" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>KnotsTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a43b7466804454a28b1dda74afcb77a9f" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_batch_idx</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a55664a455be46f70f1d33768cee0e7b3" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_gko_matrix</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a0aca9d7c40b1b901694372d17a0d0f0c" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_idxrange_bsplines_r</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ac7b36b1b379aa95a81915deefd3c05db" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_idxrange_bsplines_theta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a0aac03ca1cbd08119ed59a9798076bd1" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_idxrange_fem_non_singular</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1aee1a179fecc86f75448b4a77f2ae684f" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_idxrange_quadrature_r</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1afd0422e5a6cdd44919a33a1fdef5de03" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_idxrange_quadrature_singular</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a1634910cc8538644425a6bf26c55869b" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_idxrange_quadrature_theta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a397c5353c41a5e9e73d4acc6d9c678c4" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_int_volume</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ac0a14f99526d7311034a9492c44bdfb8" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_matrix_size</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a9563f3ca1e57241e12f5350353577093" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_n_non_zero_bases_r</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a715217c6ef2d21949b4870fdb9c25b86" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_n_non_zero_bases_theta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a86e2ff04d5704480a5a3fa3a300c4b3b" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_n_overlap_cells</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ae6ed06bc3045f9358fcecc5faf46ce61" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_nbasis_r</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a3e0b42cae266052c9207b486955bb992" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_nbasis_theta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1aed25fa6b5483a9197245a36e3f888ee4" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_non_zero_bases_r</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a35305dfc6490994aa034f8e27ce2764a" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_non_zero_bases_theta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a70bacb50d6ea8e14e8d918520b54e0ee" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_phi_spline_coef</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a028a96d6e0ed2e0332ee0c33141f3753" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_polar_spline_evaluator</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a60b8ec8f412fe07a98512ca4de240d27" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_r_basis_vals_and_derivs</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ab12917c326786f23f1852e2ac557715b" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_singular_basis_vals_and_derivs</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a4b055701d14677f237990db5d637c478" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_theta_basis_vals_and_derivs</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a6115292f2e279384a9aba2f9e98c8622" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_weights_r</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a3451e432cc47c49dd4d274c36cccf3fb" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_weights_theta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a47c4cc4cf0fff9cf9cfc174e19e1930d" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>m_x_init</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a7d75afef8e0d4e4c61776b58117697d2" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>operator()</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ac699f74359d1f9160bed57ffcf325861" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>operator()</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a6e4d95b7b1ce10cf43579ff77b9ea88b" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>PolarSplineFEMPoissonLikeSolver</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a6498904860bc27a1e1f350666d25d81f" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>PolarSplineMemRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ab529c6084f7f0c63b82c48bab8554b96" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>PolarSplineRTheta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1aea7575e5ec7f7e2a776c1677a79137d9" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>R</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a3b3cec61b31eaf06a9a50d3f8a4489a7" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>R_cov</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1abea37425f329fb962279f550a9a900a9" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>s_n_gauss_legendre_r</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a0f4757ae5829f507a44f6ab119fe9edd" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>s_n_gauss_legendre_theta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1ac94824022d7b90428f769126de178000" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>templated_weak_integral_element</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a0c880f33d839cedfafdf2b3b32139417" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>Theta</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1a47b8b9be91911e16df53db22546aacc5" prot="private" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>Theta_cov</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1acbe58349c9ea9b73ae5476df678f4010" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>theta_mod</name></member>
      <member refid="classPolarSplineFEMPoissonLikeSolver_1af97748fe740d17247902a8b1d4b1f2ac" prot="public" virt="non-virtual"><scope>PolarSplineFEMPoissonLikeSolver</scope><name>weak_integral_element</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
