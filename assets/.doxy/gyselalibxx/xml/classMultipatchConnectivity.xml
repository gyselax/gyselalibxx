<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classMultipatchConnectivity" kind="class" language="C++" prot="public">
    <compoundname>MultipatchConnectivity</compoundname>
    <includes refid="connectivity_8hpp" local="no">connectivity.hpp</includes>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Interfaces</declname>
        <defname>Interfaces</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classMultipatchConnectivity_1abde3a24c33217daec8074c6ab527f84c" prot="public" static="no">
        <type>ddc::detail::TypeSeq&lt; Interfaces... &gt;</type>
        <definition>using MultipatchConnectivity&lt; Interfaces &gt;::interface_collection =  ddc::detail::TypeSeq&lt;Interfaces...&gt;</definition>
        <argsstring></argsstring>
        <name>interface_collection</name>
        <qualifiedname>MultipatchConnectivity::interface_collection</qualifiedname>
        <briefdescription>
<para>A type sequence of all the interfaces handled by this class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="21" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchConnectivity_1a762ff8496d1ec32be37bad6e25f7e926" prot="public" static="no">
        <type>strip_outside_edges_t&lt; typename Interfaces::Edge1..., typename Interfaces::Edge2... &gt;</type>
        <definition>using MultipatchConnectivity&lt; Interfaces &gt;::inner_edges =  strip_outside_edges_t&lt;typename Interfaces::Edge1..., typename Interfaces::Edge2...&gt;</definition>
        <argsstring></argsstring>
        <name>inner_edges</name>
        <qualifiedname>MultipatchConnectivity::inner_edges</qualifiedname>
        <briefdescription>
<para>A type sequence of all the edges handled by this class except the OuterEdge types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="24" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchConnectivity_1a0683fbe5d61d4239ea8586a70a1305e7" prot="public" static="no">
        <type>extract_patches_t&lt; <ref refid="classMultipatchConnectivity_1a762ff8496d1ec32be37bad6e25f7e926" kindref="member">inner_edges</ref> &gt;</type>
        <definition>using MultipatchConnectivity&lt; Interfaces &gt;::all_patches =  extract_patches_t&lt;inner_edges&gt;</definition>
        <argsstring></argsstring>
        <name>all_patches</name>
        <qualifiedname>MultipatchConnectivity::all_patches</qualifiedname>
        <briefdescription>
<para>A type sequence of all the patches handled by this class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="28" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchConnectivity_1a4a3c042b78101bb31a9402fb6cb24f4b" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class QueryPatch</type>
          </param>
        </templateparamlist>
        <type>interfaces_of_patch_t&lt; QueryPatch, <ref refid="classMultipatchConnectivity_1abde3a24c33217daec8074c6ab527f84c" kindref="member">interface_collection</ref> &gt;</type>
        <definition>using MultipatchConnectivity&lt; Interfaces &gt;::get_type_seq_connections_t =  interfaces_of_patch_t&lt;QueryPatch, interface_collection&gt;</definition>
        <argsstring></argsstring>
        <name>get_type_seq_connections_t</name>
        <qualifiedname>MultipatchConnectivity::get_type_seq_connections_t</qualifiedname>
        <briefdescription>
<para>A tool to find a type sequence of all interfaces of a patch. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QueryPatch</parametername>
</parameternamelist>
<parameterdescription>
<para>The patch whose connections we are interested in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="40" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchConnectivity_1a05d649704740c74f67f952a129f9daab" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class QueryPatch</type>
          </param>
        </templateparamlist>
        <type>to_tuple_t&lt; <ref refid="classMultipatchConnectivity_1a4a3c042b78101bb31a9402fb6cb24f4b" kindref="member">get_type_seq_connections_t</ref>&lt; QueryPatch &gt; &gt;</type>
        <definition>using MultipatchConnectivity&lt; Interfaces &gt;::get_connections_t =  to_tuple_t&lt;get_type_seq_connections_t&lt;QueryPatch&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>get_connections_t</name>
        <qualifiedname>MultipatchConnectivity::get_connections_t</qualifiedname>
        <briefdescription>
<para>A tool to find a tuple of all interfaces of a patch. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QueryPatch</parametername>
</parameternamelist>
<parameterdescription>
<para>The patch whose connections we are interested in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="48" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchConnectivity_1a2e53e4b857d0861bfe271be891c60f50" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class QueryPatch1</type>
          </param>
          <param>
            <type>class QueryPatch2</type>
          </param>
        </templateparamlist>
        <type>ddcHelper::type_seq_intersection_t&lt; <ref refid="classMultipatchConnectivity_1a4a3c042b78101bb31a9402fb6cb24f4b" kindref="member">get_type_seq_connections_t</ref>&lt; QueryPatch1 &gt;, <ref refid="classMultipatchConnectivity_1a4a3c042b78101bb31a9402fb6cb24f4b" kindref="member">get_type_seq_connections_t</ref>&lt; QueryPatch2 &gt; &gt;</type>
        <definition>using MultipatchConnectivity&lt; Interfaces &gt;::find_connections_t =  ddcHelper::type_seq_intersection_t&lt; get_type_seq_connections_t&lt;QueryPatch1&gt;, get_type_seq_connections_t&lt;QueryPatch2&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>find_connections_t</name>
        <qualifiedname>MultipatchConnectivity::find_connections_t</qualifiedname>
        <briefdescription>
<para>A tool to find all interfaces linking 2 patches. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QueryPatch1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first patch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>QueryPatch2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second patch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="57" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchConnectivity_1a9e3ca501f45f19a8e38724147f4b0b97" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class Grid1D</type>
          </param>
        </templateparamlist>
        <type>collect_interfaces_on_dim_t&lt; find_patch_t&lt; Grid1D, <ref refid="classMultipatchConnectivity_1a0683fbe5d61d4239ea8586a70a1305e7" kindref="member">all_patches</ref> &gt;, Grid1D, <ref refid="classMultipatchConnectivity_1abde3a24c33217daec8074c6ab527f84c" kindref="member">interface_collection</ref> &gt;</type>
        <definition>using MultipatchConnectivity&lt; Interfaces &gt;::get_all_interfaces_along_direction_t =  collect_interfaces_on_dim_t&lt; find_patch_t&lt;Grid1D, all_patches&gt;, Grid1D, interface_collection&gt;</definition>
        <argsstring></argsstring>
        <name>get_all_interfaces_along_direction_t</name>
        <qualifiedname>MultipatchConnectivity::get_all_interfaces_along_direction_t</qualifiedname>
        <briefdescription>
<para>A tool to find all interfaces along a line which passes through the requested grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Grid1D</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid indicating the direction of interest. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="67" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classMultipatchConnectivity_1ad753daab879bb2cdfe04c25c05fc394c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Grid1D</type>
          </param>
          <param>
            <type>class...</type>
            <declname>IdxRanges</declname>
            <defname>IdxRanges</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto MultipatchConnectivity&lt; Interfaces &gt;::get_all_idx_ranges_along_direction</definition>
        <argsstring>(std::tuple&lt; IdxRanges... &gt; all_idx_ranges)</argsstring>
        <name>get_all_idx_ranges_along_direction</name>
        <qualifiedname>MultipatchConnectivity::get_all_idx_ranges_along_direction</qualifiedname>
        <param>
          <type>std::tuple&lt; IdxRanges... &gt;</type>
          <declname>all_idx_ranges</declname>
        </param>
        <briefdescription>
<para>A function to return all index ranges which can be used to obtain coordinates along a line which passes through the requested grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Grid1D</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid indicating the direction of interest. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>all_idx_ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>A tuple containing all available index ranges.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tuple of index ranges along the line of interest. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="82" column="17" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="82" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classMultipatchConnectivity_1aa2078dc56dde3bf073f16158404c1735" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Grid1D</type>
          </param>
          <param>
            <type>template&lt; typename P &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>Patches</declname>
            <defname>Patches</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto MultipatchConnectivity&lt; Interfaces &gt;::get_all_idx_ranges_along_direction</definition>
        <argsstring>(MultipatchType&lt; T, Patches... &gt; all_idx_ranges)</argsstring>
        <name>get_all_idx_ranges_along_direction</name>
        <qualifiedname>MultipatchConnectivity::get_all_idx_ranges_along_direction</qualifiedname>
        <param>
          <type><ref refid="classMultipatchType" kindref="compound">MultipatchType</ref>&lt; <ref refid="structT" kindref="compound">T</ref>, Patches... &gt;</type>
          <declname>all_idx_ranges</declname>
        </param>
        <briefdescription>
<para>A function to return all index ranges which can be used to obtain coordinates along a line which passes through the requested grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Grid1D</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid indicating the direction of interest. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>all_idx_ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classMultipatchType" kindref="compound">MultipatchType</ref> containing all available index ranges.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tuple of index ranges along the line of interest. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="102" column="17" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="102" bodyend="106"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classMultipatchConnectivity_1a5561b4f768aea2b45d51fc122d947d65" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RelevantGrids</type>
          </param>
          <param>
            <type>class IdxRangeTuple</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>PatchIndex</declname>
            <defname>PatchIndex</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto MultipatchConnectivity&lt; Interfaces &gt;::get_idx_range</definition>
        <argsstring>(IdxRangeTuple all_idx_ranges, std::index_sequence&lt; PatchIndex... &gt;)</argsstring>
        <name>get_idx_range</name>
        <qualifiedname>MultipatchConnectivity::get_idx_range</qualifiedname>
        <param>
          <type>IdxRangeTuple</type>
          <declname>all_idx_ranges</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; PatchIndex... &gt;</type>
        </param>
        <briefdescription>
<para>A compile-time loop to get all the relevant index ranges identified by the associated grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="111" column="17" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classMultipatchConnectivity_1a8524498ec3f041f2e5bac0b0bb47c93f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>PatchIndex</declname>
            <defname>PatchIndex</defname>
          </param>
          <param>
            <type>class RelevantGrids</type>
          </param>
          <param>
            <type>class IdxRangeTuple</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto MultipatchConnectivity&lt; Interfaces &gt;::get_idx_range</definition>
        <argsstring>(IdxRangeTuple all_idx_ranges)</argsstring>
        <name>get_idx_range</name>
        <qualifiedname>MultipatchConnectivity::get_idx_range</qualifiedname>
        <param>
          <type>IdxRangeTuple</type>
          <declname>all_idx_ranges</declname>
        </param>
        <briefdescription>
<para>Get the relevant index range from the input index ranges using the grid to identify it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="119" column="17" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="119" bodyend="124"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A helper class which provides functionalities to recognise how different patches are connected. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Interfaces</parametername>
</parameternamelist>
<parameterdescription>
<para>The interfaces which describe the connectivity in this geometry. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" line="17" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/connectivity.hpp" bodystart="18" bodyend="125"/>
    <listofallmembers>
      <member refid="classMultipatchConnectivity_1a0683fbe5d61d4239ea8586a70a1305e7" prot="public" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>all_patches</name></member>
      <member refid="classMultipatchConnectivity_1a2e53e4b857d0861bfe271be891c60f50" prot="public" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>find_connections_t</name></member>
      <member refid="classMultipatchConnectivity_1ad753daab879bb2cdfe04c25c05fc394c" prot="public" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>get_all_idx_ranges_along_direction</name></member>
      <member refid="classMultipatchConnectivity_1aa2078dc56dde3bf073f16158404c1735" prot="public" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>get_all_idx_ranges_along_direction</name></member>
      <member refid="classMultipatchConnectivity_1a9e3ca501f45f19a8e38724147f4b0b97" prot="public" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>get_all_interfaces_along_direction_t</name></member>
      <member refid="classMultipatchConnectivity_1a05d649704740c74f67f952a129f9daab" prot="public" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>get_connections_t</name></member>
      <member refid="classMultipatchConnectivity_1a5561b4f768aea2b45d51fc122d947d65" prot="private" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>get_idx_range</name></member>
      <member refid="classMultipatchConnectivity_1a8524498ec3f041f2e5bac0b0bb47c93f" prot="private" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>get_idx_range</name></member>
      <member refid="classMultipatchConnectivity_1a4a3c042b78101bb31a9402fb6cb24f4b" prot="public" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>get_type_seq_connections_t</name></member>
      <member refid="classMultipatchConnectivity_1a762ff8496d1ec32be37bad6e25f7e926" prot="public" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>inner_edges</name></member>
      <member refid="classMultipatchConnectivity_1abde3a24c33217daec8074c6ab527f84c" prot="public" virt="non-virtual"><scope>MultipatchConnectivity</scope><name>interface_collection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
