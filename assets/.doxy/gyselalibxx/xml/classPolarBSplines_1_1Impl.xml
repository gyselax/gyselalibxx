<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classPolarBSplines_1_1Impl" kind="class" language="C++" prot="public">
    <compoundname>PolarBSplines::Impl</compoundname>
    <includes refid="polar__bsplines_8hpp" local="no">polar_bsplines.hpp</includes>
    <innerclass refid="structPolarBSplines_1_1Impl_1_1Corner1Tag" prot="public">PolarBSplines::Impl::Corner1Tag</innerclass>
    <innerclass refid="structPolarBSplines_1_1Impl_1_1Corner2Tag" prot="public">PolarBSplines::Impl::Corner2Tag</innerclass>
    <innerclass refid="structPolarBSplines_1_1Impl_1_1Corner3Tag" prot="public">PolarBSplines::Impl::Corner3Tag</innerclass>
    <innerclass refid="structPolarBSplines_1_1Impl_1_1IntermediateBernsteinBasis" prot="public">PolarBSplines::Impl::IntermediateBernsteinBasis</innerclass>
    <templateparamlist>
      <param>
        <type>class DDim</type>
      </param>
      <param>
        <type>class MemorySpace</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classPolarBSplines_1_1Impl_1a75f86d6c1815cbb80b0a0046e81800a6" prot="private" static="no">
        <type>IdxRange&lt; DDim, <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref>, <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::singular_basis_linear_combination_idx_range_type =  IdxRange&lt;DDim, BSplinesR, BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>singular_basis_linear_combination_idx_range_type</name>
        <qualifiedname>PolarBSplines::Impl::singular_basis_linear_combination_idx_range_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of the index range for the linear combinations defining the B-splines which traverse the singular point.</para>
<para>The B-splines which traverse the singular O-point are constructed from a linear combination of 2D B-splines. These 2D B-splines can be expressed as a tensor product of 1D B-splines. This type describes the index range on which the coefficients of these linear combinations are defined. There is an index for the polar bspline being constructed, and 2 indices for the 2D bspline. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="260" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classPolarBSplines_1_1Impl_1a00a05a8522a019c5e4324e26ecc780d3" prot="public" static="no">
        <type><ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref></type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::discrete_dimension_type =  PolarBSplines</definition>
        <argsstring></argsstring>
        <name>discrete_dimension_type</name>
        <qualifiedname>PolarBSplines::Impl::discrete_dimension_type</qualifiedname>
        <briefdescription>
<para>The tag which should be used to create a Field whose contents are each associated with a PolarBSpline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="296" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1_1Impl_1ad59005ab67bc08a9bade86b4cbb86c6e" prot="public" static="no">
        <type>Idx&lt; DDim &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::discrete_element_type =  Idx&lt;DDim&gt;</definition>
        <argsstring></argsstring>
        <name>discrete_element_type</name>
        <qualifiedname>PolarBSplines::Impl::discrete_element_type</qualifiedname>
        <briefdescription>
<para>The type of an index associated with a PolarBSpline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="299" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1_1Impl_1aede52d653b3250142ef44aadb56904f8" prot="public" static="no">
        <type>IdxRange&lt; DDim &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::discrete_domain_type =  IdxRange&lt;DDim&gt;</definition>
        <argsstring></argsstring>
        <name>discrete_domain_type</name>
        <qualifiedname>PolarBSplines::Impl::discrete_domain_type</qualifiedname>
        <briefdescription>
<para>The type of a index range of <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="302" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1_1Impl_1aa3ab2a3455e0aec1bbaf3e8d89eaa7bb" prot="public" static="no">
        <type>IdxStep&lt; DDim &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::discrete_vector_type =  IdxStep&lt;DDim&gt;</definition>
        <argsstring></argsstring>
        <name>discrete_vector_type</name>
        <qualifiedname>PolarBSplines::Impl::discrete_vector_type</qualifiedname>
        <briefdescription>
<para>The type of a vector associated with a PolarBSpline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="305" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classPolarBSplines_1_1Impl_1adcaf2527acc2c7a0a18f741240082b56" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ODDim</type>
          </param>
          <param>
            <type>class OMemorySpace</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class Impl</definition>
        <argsstring></argsstring>
        <name>Impl</name>
        <qualifiedname>PolarBSplines::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="classPolarBSplines_1_1Impl" kindref="compound">Impl</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="244" column="22" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classPolarBSplines_1_1Impl_1a854872ad8191a00c53e84d731b4bb353" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecSpace</type>
          </param>
          <param>
            <type>class PBSpl</type>
          </param>
          <param>
            <type>class OMemorySpace</type>
          </param>
        </templateparamlist>
        <type>DField&lt; IdxRange&lt; PBSpl &gt;, OMemorySpace &gt;</type>
        <definition>DField&lt; IdxRange&lt; PBSpl &gt;, OMemorySpace &gt; PolarSplines::integrals</definition>
        <argsstring>(ExecSpace const &amp;execution_space, DField&lt; IdxRange&lt; PBSpl &gt;, OMemorySpace &gt; int_vals)</argsstring>
        <name>PolarSplines::integrals</name>
        <qualifiedname>PolarBSplines::Impl::integrals</qualifiedname>
        <param>
          <type>ExecSpace const &amp;</type>
          <declname>execution_space</declname>
        </param>
        <param>
          <type>DField&lt; IdxRange&lt; PBSpl &gt;, OMemorySpace &gt;</type>
          <declname>int_vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="247" column="23"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classPolarBSplines_1_1Impl_1a8ef3dd86e684d3496e02867489f0238e" prot="private" static="no" mutable="no">
        <type>DFieldMem&lt; singular_basis_linear_combination_idx_range_type, MemorySpace &gt;</type>
        <definition>DFieldMem&lt;singular_basis_linear_combination_idx_range_type, MemorySpace&gt; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::m_singular_basis_elements_alloc</definition>
        <argsstring></argsstring>
        <name>m_singular_basis_elements_alloc</name>
        <qualifiedname>PolarBSplines::Impl::m_singular_basis_elements_alloc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="264" column="17" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPolarBSplines_1_1Impl_1a11b300625f730f47b6db45626e121d88" prot="private" static="no" mutable="no">
        <type>DField&lt; singular_basis_linear_combination_idx_range_type, MemorySpace &gt;</type>
        <definition>DField&lt;singular_basis_linear_combination_idx_range_type, MemorySpace&gt; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::m_singular_basis_elements</definition>
        <argsstring></argsstring>
        <name>m_singular_basis_elements</name>
        <qualifiedname>PolarBSplines::Impl::m_singular_basis_elements</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="267" column="17" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1a57eec0bfb81f5e6f493b18ceeba92fe9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="structX" kindref="compound">X</ref></type>
          </param>
          <param>
            <type>class <ref refid="structY" kindref="compound">Y</ref></type>
          </param>
          <param>
            <type>class SplineEvaluator</type>
          </param>
          <param>
            <type>class EvalMemorySpace</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::Impl</definition>
        <argsstring>(const DiscreteToCartesian&lt; X, Y, SplineEvaluator, R, Theta, EvalMemorySpace &gt; &amp;curvilinear_to_cartesian)</argsstring>
        <name>Impl</name>
        <qualifiedname>PolarBSplines::Impl::Impl</qualifiedname>
        <param>
          <type>const <ref refid="classDiscreteToCartesian" kindref="compound">DiscreteToCartesian</ref>&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref>, SplineEvaluator, <ref refid="classPolarBSplines_1a648dc9ce69b7875ee05df11ca91ca831" kindref="member">R</ref>, <ref refid="classPolarBSplines_1ac4cbfc152e798720dd2615390e96d894" kindref="member">Theta</ref>, EvalMemorySpace &gt; &amp;</type>
          <declname>curvilinear_to_cartesian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A constructor for the <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>curvilinear_to_cartesian</parametername>
</parameternamelist>
<parameterdescription>
<para>A mapping from curvilinear to Cartesian coordinates. This is used to find the singular point and determine the Barycentric coordinates which are used to define the new basis splines which cross the singular point. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="315" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="315" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1aad7f0ed019b40ca8bea9259f53d94a83" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OriginMemorySpace</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::Impl</definition>
        <argsstring>(Impl&lt; DDim, OriginMemorySpace &gt; const &amp;impl)</argsstring>
        <name>Impl</name>
        <qualifiedname>PolarBSplines::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="classPolarBSplines_1_1Impl" kindref="compound">Impl</ref>&lt; DDim, OriginMemorySpace &gt; const &amp;</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A copy constructor for the <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>impl</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref> being copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="449" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="449" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1af79c5cc9a060916b31c8a41e5f7cd7da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::Impl</definition>
        <argsstring>(Impl const &amp;x)=default</argsstring>
        <name>Impl</name>
        <qualifiedname>PolarBSplines::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="classPolarBSplines_1_1Impl" kindref="compound">Impl</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A copy constructor for the <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref> being copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="461" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1a386e9fe73ec0a24b3773353aa4ad1af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::Impl</definition>
        <argsstring>(Impl &amp;&amp;x)=default</argsstring>
        <name>Impl</name>
        <qualifiedname>PolarBSplines::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="classPolarBSplines_1_1Impl" kindref="compound">Impl</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A copy constructor for the <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref> taking a temporary r-value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref> being copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="468" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1aa4c6ff5c6a2e63283fc779ef1a6befd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::~Impl</definition>
        <argsstring>()=default</argsstring>
        <name>~Impl</name>
        <qualifiedname>PolarBSplines::Impl::~Impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The destructor for the <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="473" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1a954186a181dc16f537322080f4484a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPolarBSplines_1_1Impl" kindref="compound">Impl</ref> &amp;</type>
        <definition>Impl &amp; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::operator=</definition>
        <argsstring>(Impl const &amp;x)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>PolarBSplines::Impl::operator=</qualifiedname>
        <param>
          <type><ref refid="classPolarBSplines_1_1Impl" kindref="compound">Impl</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A copy operator for the <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref> being copied.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to this PolarBSpline. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="482" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1a44b135ad2f6adec16d22471819ed98c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPolarBSplines_1_1Impl" kindref="compound">Impl</ref> &amp;</type>
        <definition>Impl &amp; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::operator=</definition>
        <argsstring>(Impl &amp;&amp;x)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>PolarBSplines::Impl::operator=</qualifiedname>
        <param>
          <type><ref refid="classPolarBSplines_1_1Impl" kindref="compound">Impl</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A copy operator for the <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref> taking a temporary r-value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref> being copied.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to this PolarBSpline. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="491" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1a8ffd1d65dc3554b9ee46c1b76310b5e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FUNCTION <ref refid="classPolarBSplines_1a9d78494d89fbe4d9abea58a61619fae8" kindref="member">tensor_product_index_type</ref></type>
        <definition>KOKKOS_FUNCTION Idx&lt; BSplinesR, BSplinesTheta &gt; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::eval_basis</definition>
        <argsstring>(DSpan1D singular_values, DSpan2D values, Coord&lt; R, Theta &gt; p) const</argsstring>
        <name>eval_basis</name>
        <qualifiedname>PolarBSplines::Impl::eval_basis</qualifiedname>
        <param>
          <type>DSpan1D</type>
          <declname>singular_values</declname>
        </param>
        <param>
          <type>DSpan2D</type>
          <declname>values</declname>
        </param>
        <param>
          <type>Coord&lt; <ref refid="classPolarBSplines_1a648dc9ce69b7875ee05df11ca91ca831" kindref="member">R</ref>, <ref refid="classPolarBSplines_1ac4cbfc152e798720dd2615390e96d894" kindref="member">Theta</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Evaluate the polar basis splines at the coordinate p. </para>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the b-spline elements near the singular point which cannot be expressed as a tensor product of 1D B-splines, as well as the non-zero b-spline elements which can be expressed as a tensor product of 1D B-splines.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">singular_values</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the b-spline elements near the singular point which cannot be expressed as a tensor product of 1D B-splines, evaluated at the coordinate p. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the non-zero b-spline elements which can be expressed as a tensor product of 1D B-splines. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where the basis functions are evaluated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The 2D tensor product index of the first b-spline element in the values array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="510" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="619" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1aa1ad8d647af3d39e2e2fc7ff01c1a04f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FUNCTION <ref refid="classPolarBSplines_1a9d78494d89fbe4d9abea58a61619fae8" kindref="member">tensor_product_index_type</ref></type>
        <definition>KOKKOS_FUNCTION Idx&lt; BSplinesR, BSplinesTheta &gt; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::eval_deriv_r</definition>
        <argsstring>(DSpan1D singular_derivs, DSpan2D derivs, Coord&lt; R, Theta &gt; p) const</argsstring>
        <name>eval_deriv_r</name>
        <qualifiedname>PolarBSplines::Impl::eval_deriv_r</qualifiedname>
        <param>
          <type>DSpan1D</type>
          <declname>singular_derivs</declname>
        </param>
        <param>
          <type>DSpan2D</type>
          <declname>derivs</declname>
        </param>
        <param>
          <type>Coord&lt; <ref refid="classPolarBSplines_1a648dc9ce69b7875ee05df11ca91ca831" kindref="member">R</ref>, <ref refid="classPolarBSplines_1ac4cbfc152e798720dd2615390e96d894" kindref="member">Theta</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Evaluate the radial derivative of the polar basis splines at the coordinate p. </para>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the radial derivative of all the b-spline elements near the singular point which cannot be expressed as a tensor product of 1D B-splines, as well as the non-zero b-spline elements which can be expressed as a tensor product of 1D B-splines.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">singular_derivs</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the radial derivative b-spline elements near the singular point which cannot be expressed as a tensor product of 1D B-splines, evaluated at the coordinate p. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">derivs</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the radial derivative of the non-zero b-spline elements which can be expressed as a tensor product of 1D B-splines. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where the basis functions are evaluated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The 2D tensor product index of the first b-spline element in the values array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="529" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="628" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1acff0e231afa39962837191f9f094bd92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FUNCTION <ref refid="classPolarBSplines_1a9d78494d89fbe4d9abea58a61619fae8" kindref="member">tensor_product_index_type</ref></type>
        <definition>KOKKOS_FUNCTION Idx&lt; BSplinesR, BSplinesTheta &gt; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::eval_deriv_theta</definition>
        <argsstring>(DSpan1D singular_derivs, DSpan2D derivs, Coord&lt; R, Theta &gt; p) const</argsstring>
        <name>eval_deriv_theta</name>
        <qualifiedname>PolarBSplines::Impl::eval_deriv_theta</qualifiedname>
        <param>
          <type>DSpan1D</type>
          <declname>singular_derivs</declname>
        </param>
        <param>
          <type>DSpan2D</type>
          <declname>derivs</declname>
        </param>
        <param>
          <type>Coord&lt; <ref refid="classPolarBSplines_1a648dc9ce69b7875ee05df11ca91ca831" kindref="member">R</ref>, <ref refid="classPolarBSplines_1ac4cbfc152e798720dd2615390e96d894" kindref="member">Theta</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Evaluate the poloidal derivative of the polar basis splines at the coordinate p. </para>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the poloidal derivative of all the b-spline elements near the singular point which cannot be expressed as a tensor product of 1D B-splines, as well as the non-zero b-spline elements which can be expressed as a tensor product of 1D B-splines.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">singular_derivs</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the poloidal derivative b-spline elements near the singular point which cannot be expressed as a tensor product of 1D B-splines, evaluated at the coordinate p. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">derivs</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the poloidal derivative of the non-zero b-spline elements which can be expressed as a tensor product of 1D B-splines. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where the basis functions are evaluated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The 2D tensor product index of the first b-spline element in the values array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="548" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="636" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1ae731ae28ad158d8a5876ae85fb138850" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FUNCTION <ref refid="classPolarBSplines_1a9d78494d89fbe4d9abea58a61619fae8" kindref="member">tensor_product_index_type</ref></type>
        <definition>KOKKOS_FUNCTION Idx&lt; BSplinesR, BSplinesTheta &gt; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::eval_deriv_r_and_theta</definition>
        <argsstring>(DSpan1D singular_derivs, DSpan2D derivs, Coord&lt; R, Theta &gt; p) const</argsstring>
        <name>eval_deriv_r_and_theta</name>
        <qualifiedname>PolarBSplines::Impl::eval_deriv_r_and_theta</qualifiedname>
        <param>
          <type>DSpan1D</type>
          <declname>singular_derivs</declname>
        </param>
        <param>
          <type>DSpan2D</type>
          <declname>derivs</declname>
        </param>
        <param>
          <type>Coord&lt; <ref refid="classPolarBSplines_1a648dc9ce69b7875ee05df11ca91ca831" kindref="member">R</ref>, <ref refid="classPolarBSplines_1ac4cbfc152e798720dd2615390e96d894" kindref="member">Theta</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Evaluate the second order derivative of the polar basis splines in the radial and poloidal directions, at the coordinate p. </para>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the 2nd order derivative of all the b-spline elements near the singular point which cannot be expressed as a tensor product of 1D B-splines, as well as the non-zero b-spline elements which can be expressed as a tensor product of 1D B-splines.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">singular_derivs</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the 2nd order derivative b-spline elements near the singular point which cannot be expressed as a tensor product of 1D B-splines, evaluated at the coordinate p. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">derivs</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the 2nd order derivative of the non-zero b-spline elements which can be expressed as a tensor product of 1D B-splines. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate where the basis functions are evaluated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The 2D tensor product index of the first b-spline element in the values array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="568" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="647" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1a1ca0df2d7f5defe89ecf42ef6bcfb9fa" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::nbasis</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nbasis</name>
        <qualifiedname>PolarBSplines::Impl::nbasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the total number of basis functions.</para>
<para><simplesect kind="return"><para>The number of basis functions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="575" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="575" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1a244d6ebb4a31d96e25c1844614979cc7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classPolarBSplines_1_1Impl_1aede52d653b3250142ef44aadb56904f8" kindref="member">discrete_domain_type</ref></type>
        <definition>discrete_domain_type PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::full_domain</definition>
        <argsstring>() const noexcept</argsstring>
        <name>full_domain</name>
        <qualifiedname>PolarBSplines::Impl::full_domain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the index range containing the indices of all the polar b-splines.</para>
<para><simplesect kind="return"><para>The index range containing the indices of all the polar b-splines. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="587" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="587" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1af3133a4ea7b7cc4796da428de9bba352" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classPolarBSplines_1_1Impl_1aede52d653b3250142ef44aadb56904f8" kindref="member">discrete_domain_type</ref></type>
        <definition>discrete_domain_type PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::tensor_bspline_idx_range</definition>
        <argsstring>() const noexcept</argsstring>
        <name>tensor_bspline_idx_range</name>
        <qualifiedname>PolarBSplines::Impl::tensor_bspline_idx_range</qualifiedname>
        <briefdescription>
<para>Returns the IdxRange containing the indices of the b-splines which don&apos;t traverse the singular point and can be expressed as a tensor-product of 1D b-splines. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The IdxRange containing the indices of the b-splines which don&apos;t traverse the singular point. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="599" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="599" bodyend="602"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classPolarBSplines_1_1Impl_1ac7ac34ce7bc3edae10a984329adcd4f9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EvalTypeR</type>
          </param>
          <param>
            <type>class EvalTypeTheta</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION Idx&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref>, <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>KOKKOS_FUNCTION Idx&lt; BSplinesR, BSplinesTheta &gt; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::Impl&lt; DDim, MemorySpace &gt;::eval</definition>
        <argsstring>(DSpan1D singular_values, DSpan2D values, Coord&lt; R, Theta &gt; coord_eval, EvalTypeR const, EvalTypeTheta const) const</argsstring>
        <name>eval</name>
        <qualifiedname>PolarBSplines::Impl::eval</qualifiedname>
        <param>
          <type>DSpan1D</type>
          <declname>singular_values</declname>
        </param>
        <param>
          <type>DSpan2D</type>
          <declname>values</declname>
        </param>
        <param>
          <type>Coord&lt; <ref refid="classPolarBSplines_1a648dc9ce69b7875ee05df11ca91ca831" kindref="member">R</ref>, <ref refid="classPolarBSplines_1ac4cbfc152e798720dd2615390e96d894" kindref="member">Theta</ref> &gt;</type>
          <declname>coord_eval</declname>
        </param>
        <param>
          <type>EvalTypeR const</type>
        </param>
        <param>
          <type>EvalTypeTheta const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="606" column="29" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="659" bodyend="733"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classPolarBSplines_1_1Impl" kindref="compound">Impl</ref> class holds the implementation of the <ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref>. The implementation is specific to the memory space so that the Fields can be defined with index ranges related to instances of this class.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MemorySpace</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates where the object is saved. This is either on the host or the device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="241" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="242" bodyend="612"/>
    <listofallmembers>
      <member refid="classPolarBSplines_1_1Impl_1a00a05a8522a019c5e4324e26ecc780d3" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>discrete_dimension_type</name></member>
      <member refid="classPolarBSplines_1_1Impl_1aede52d653b3250142ef44aadb56904f8" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>discrete_domain_type</name></member>
      <member refid="classPolarBSplines_1_1Impl_1ad59005ab67bc08a9bade86b4cbb86c6e" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>discrete_element_type</name></member>
      <member refid="classPolarBSplines_1_1Impl_1aa3ab2a3455e0aec1bbaf3e8d89eaa7bb" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>discrete_vector_type</name></member>
      <member refid="classPolarBSplines_1_1Impl_1ac7ac34ce7bc3edae10a984329adcd4f9" prot="private" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>eval</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a8ffd1d65dc3554b9ee46c1b76310b5e2" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>eval_basis</name></member>
      <member refid="classPolarBSplines_1_1Impl_1aa1ad8d647af3d39e2e2fc7ff01c1a04f" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>eval_deriv_r</name></member>
      <member refid="classPolarBSplines_1_1Impl_1ae731ae28ad158d8a5876ae85fb138850" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>eval_deriv_r_and_theta</name></member>
      <member refid="classPolarBSplines_1_1Impl_1acff0e231afa39962837191f9f094bd92" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>eval_deriv_theta</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a244d6ebb4a31d96e25c1844614979cc7" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>full_domain</name></member>
      <member refid="classPolarBSplines_1_1Impl_1adcaf2527acc2c7a0a18f741240082b56" prot="private" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>Impl</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a57eec0bfb81f5e6f493b18ceeba92fe9" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>Impl</name></member>
      <member refid="classPolarBSplines_1_1Impl_1aad7f0ed019b40ca8bea9259f53d94a83" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>Impl</name></member>
      <member refid="classPolarBSplines_1_1Impl_1af79c5cc9a060916b31c8a41e5f7cd7da" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>Impl</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a386e9fe73ec0a24b3773353aa4ad1af2" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>Impl</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a11b300625f730f47b6db45626e121d88" prot="private" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>m_singular_basis_elements</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a8ef3dd86e684d3496e02867489f0238e" prot="private" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>m_singular_basis_elements_alloc</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a1ca0df2d7f5defe89ecf42ef6bcfb9fa" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>nbasis</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a954186a181dc16f537322080f4484a1f" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>operator=</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a44b135ad2f6adec16d22471819ed98c1" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>operator=</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a854872ad8191a00c53e84d731b4bb353" prot="private" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>PolarSplines::integrals</name></member>
      <member refid="classPolarBSplines_1_1Impl_1a75f86d6c1815cbb80b0a0046e81800a6" prot="private" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>singular_basis_linear_combination_idx_range_type</name></member>
      <member refid="classPolarBSplines_1_1Impl_1af3133a4ea7b7cc4796da428de9bba352" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>tensor_bspline_idx_range</name></member>
      <member refid="classPolarBSplines_1_1Impl_1aa4c6ff5c6a2e63283fc779ef1a6befd2" prot="public" virt="non-virtual"><scope>PolarBSplines::Impl</scope><name>~Impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
