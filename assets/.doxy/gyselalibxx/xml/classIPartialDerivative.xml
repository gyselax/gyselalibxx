<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classIPartialDerivative" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>IPartialDerivative</compoundname>
    <derivedcompoundref refid="classCentralFDMPartialDerivative" prot="public" virt="non-virtual">CentralFDMPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;</derivedcompoundref>
    <derivedcompoundref refid="classCentralFDMPartialDerivativeWithBValue" prot="public" virt="non-virtual">CentralFDMPartialDerivativeWithBValue&lt; IdxRangeFull, DerivativeDimension &gt;</derivedcompoundref>
    <includes refid="ipartial__derivative_8hpp" local="no">ipartial_derivative.hpp</includes>
    <templateparamlist>
      <param>
        <type>class IdxRangeFull</type>
      </param>
      <param>
        <type>class DerivativeDimension</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classIPartialDerivative_1a47c973564187001a3097fe9b0eb901d5" prot="public" static="no">
        <type>DField&lt; IdxRangeFull &gt;</type>
        <definition>using IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;::DFieldType =  DField&lt;IdxRangeFull&gt;</definition>
        <argsstring></argsstring>
        <name>DFieldType</name>
        <qualifiedname>IPartialDerivative::DFieldType</qualifiedname>
        <briefdescription>
<para>The type of a reference to the field to be differentiated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" line="23" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classIPartialDerivative_1a85c8b026718b72ff0c996c4503b95136" prot="public" static="no">
        <type>DConstField&lt; IdxRangeFull &gt;</type>
        <definition>using IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;::DConstFieldType =  DConstField&lt;IdxRangeFull&gt;</definition>
        <argsstring></argsstring>
        <name>DConstFieldType</name>
        <qualifiedname>IPartialDerivative::DConstFieldType</qualifiedname>
        <briefdescription>
<para>The type of a constant reference to the field to be differentiated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" line="26" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classIPartialDerivative_1a5b5bbff2fea1001b2a434b28784f288f" prot="public" static="no">
        <type>find_grid_t&lt; DerivativeDimension, ddc::to_type_seq_t&lt; IdxRangeFull &gt; &gt;</type>
        <definition>using IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;::GridDerivativeDimension =  find_grid_t&lt;DerivativeDimension, ddc::to_type_seq_t&lt;IdxRangeFull&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>GridDerivativeDimension</name>
        <qualifiedname>IPartialDerivative::GridDerivativeDimension</qualifiedname>
        <briefdescription>
<para>The type of the grid on the dimension on which the partial derivative is calculated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" line="29" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classIPartialDerivative_1ae5e7d597e015b5024376bb27091c096d" prot="public" static="no">
        <type>IdxRange&lt; <ref refid="classIPartialDerivative_1a5b5bbff2fea1001b2a434b28784f288f" kindref="member">GridDerivativeDimension</ref> &gt;</type>
        <definition>using IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;::IdxRangeDeriv =  IdxRange&lt;GridDerivativeDimension&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeDeriv</name>
        <qualifiedname>IPartialDerivative::IdxRangeDeriv</qualifiedname>
        <briefdescription>
<para>The index range of the dimension on which the partial derivative is calculated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" line="33" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classIPartialDerivative_1a883ec2b528cf2188db6e593ae849fe0e" prot="public" static="no">
        <type>ddc::remove_dims_of_t&lt; IdxRangeFull, <ref refid="classIPartialDerivative_1a5b5bbff2fea1001b2a434b28784f288f" kindref="member">GridDerivativeDimension</ref> &gt;</type>
        <definition>using IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;::IdxRangeBatch =  ddc::remove_dims_of_t&lt;IdxRangeFull, GridDerivativeDimension&gt;</definition>
        <argsstring></argsstring>
        <name>IdxRangeBatch</name>
        <qualifiedname>IPartialDerivative::IdxRangeBatch</qualifiedname>
        <briefdescription>
<para>The index range of all dimensions except DerivativeDimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" line="36" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classIPartialDerivative_1a596b5a8933c387935c35461a3c5f1fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;::~IPartialDerivative</definition>
        <argsstring>()=default</argsstring>
        <name>~IPartialDerivative</name>
        <qualifiedname>IPartialDerivative::~IPartialDerivative</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" line="38" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classIPartialDerivative_1ad0c4758b3151a9bbd01d9fda1d423353" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;::operator()</definition>
        <argsstring>(DFieldType differentiated_field) const =0</argsstring>
        <name>operator()</name>
        <qualifiedname>IPartialDerivative::operator()</qualifiedname>
        <reimplementedby refid="classCentralFDMPartialDerivative_1ae3faa9459a609771457f2677ef709bd5">operator()</reimplementedby>
        <reimplementedby refid="classCentralFDMPartialDerivativeWithBValue_1a063c3d40a90ffe5994eb157cca4b0fd1">operator()</reimplementedby>
        <reimplementedby refid="classSpline2DPartialDerivative_1a00db393d2502537edc676a8a2773516c">operator()</reimplementedby>
        <param>
          <type><ref refid="classIPartialDerivative_1a47c973564187001a3097fe9b0eb901d5" kindref="member">DFieldType</ref></type>
          <declname>differentiated_field</declname>
        </param>
        <briefdescription>
<para>Compute the partial derivative of a field in a given direction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">differentiated_field</parametername>
</parameternamelist>
<parameterdescription>
<para>On output, contains values of the differentiated field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" line="45" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>An abstract class for a partial derivative operator. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IdxRangeFull</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range of the field on which the operator acts (with all dimensions, batched and dimension of interest). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DerivativeDimension</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension on which the partial derivative is calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CentralFDMPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;</label>
        <link refid="classCentralFDMPartialDerivative"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CentralFDMPartialDerivativeWithBValue&lt; IdxRangeFull, DerivativeDimension &gt;</label>
        <link refid="classCentralFDMPartialDerivativeWithBValue"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>IPartialDerivative&lt; IdxRangeFull, DerivativeDimension &gt;</label>
        <link refid="classIPartialDerivative"/>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" line="19" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/math_tools/ipartial_derivative.hpp" bodystart="20" bodyend="46"/>
    <listofallmembers>
      <member refid="classIPartialDerivative_1a85c8b026718b72ff0c996c4503b95136" prot="public" virt="non-virtual"><scope>IPartialDerivative</scope><name>DConstFieldType</name></member>
      <member refid="classIPartialDerivative_1a47c973564187001a3097fe9b0eb901d5" prot="public" virt="non-virtual"><scope>IPartialDerivative</scope><name>DFieldType</name></member>
      <member refid="classIPartialDerivative_1a5b5bbff2fea1001b2a434b28784f288f" prot="public" virt="non-virtual"><scope>IPartialDerivative</scope><name>GridDerivativeDimension</name></member>
      <member refid="classIPartialDerivative_1a883ec2b528cf2188db6e593ae849fe0e" prot="public" virt="non-virtual"><scope>IPartialDerivative</scope><name>IdxRangeBatch</name></member>
      <member refid="classIPartialDerivative_1ae5e7d597e015b5024376bb27091c096d" prot="public" virt="non-virtual"><scope>IPartialDerivative</scope><name>IdxRangeDeriv</name></member>
      <member refid="classIPartialDerivative_1ad0c4758b3151a9bbd01d9fda1d423353" prot="public" virt="pure-virtual"><scope>IPartialDerivative</scope><name>operator()</name></member>
      <member refid="classIPartialDerivative_1a596b5a8933c387935c35461a3c5f1fcb" prot="public" virt="virtual"><scope>IPartialDerivative</scope><name>~IPartialDerivative</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
