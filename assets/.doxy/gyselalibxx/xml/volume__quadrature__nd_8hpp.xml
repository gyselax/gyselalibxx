<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="volume__quadrature__nd_8hpp" kind="file" language="C++">
    <compoundname>volume_quadrature_nd.hpp</compoundname>
    <includes local="no">ddc/ddc.hpp</includes>
    <includes refid="coord__transformation__tools_8hpp" local="yes">coord_transformation_tools.hpp</includes>
    <includes refid="ddc__alias__inline__functions_8hpp" local="yes">ddc_alias_inline_functions.hpp</includes>
    <includes refid="ddc__aliases_8hpp" local="yes">ddc_aliases.hpp</includes>
    <includes refid="quadrature_8hpp" local="yes">quadrature.hpp</includes>
    <includedby refid="polarpoissonlikesolver_8hpp" local="yes">/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>coord_transformation_tools.hpp</label>
        <link refid="coord__transformation__tools_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>tensor_index_tools.hpp</label>
        <link refid="tensor__index__tools_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>vector_index_tools.hpp</label>
        <link refid="vector__index__tools_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>quadrature.hpp</label>
        <link refid="quadrature_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/volume_quadrature_nd.hpp</label>
        <link refid="volume__quadrature__nd_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ddc_alias_inline_functions.hpp</label>
        <link refid="ddc__alias__inline__functions_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ddc_aliases.hpp</label>
        <link refid="ddc__aliases_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ddc_helper.hpp</label>
        <link refid="ddc__helper_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>type_seq_tools.hpp</label>
        <link refid="type__seq__tools_8hpp_source"/>
      </node>
      <node id="14">
        <label>view.hpp</label>
        <link refid="view_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Kokkos_Core.hpp</label>
      </node>
      <node id="4">
        <label>array</label>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="20">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>ddc/ddc.hpp</label>
      </node>
      <node id="10">
        <label>ddc/kernels/splines.hpp</label>
      </node>
      <node id="15">
        <label>ostream</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/advection_field/advection_field_rtheta.hpp</label>
        <link refid="advection__field__rtheta_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/initialisation/vortex_merger_equilibrium.hpp</label>
        <link refid="vortex__merger__equilibrium_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/initialisation/vortex_merger_initialisation.hpp</label>
        <link refid="vortex__merger__initialisation_8hpp_source"/>
      </node>
      <node id="4">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/time_solver/bsl_predcorr.hpp</label>
        <link refid="bsl__predcorr_8hpp_source"/>
      </node>
      <node id="5">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/time_solver/bsl_predcorr_second_order_explicit.hpp</label>
        <link refid="bsl__predcorr__second__order__explicit_8hpp_source"/>
      </node>
      <node id="6">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/time_solver/bsl_predcorr_second_order_implicit.hpp</label>
        <link refid="bsl__predcorr__second__order__implicit_8hpp_source"/>
      </node>
      <node id="2">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/pde_solvers/polarpoissonlikesolver.hpp</label>
        <link refid="polarpoissonlikesolver_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/volume_quadrature_nd.hpp</label>
        <link refid="volume__quadrature__nd_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="volume__quadrature__nd_8hpp_1a606ed8438555c5104a22658ba68f32ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mapping</type>
          </param>
          <param>
            <type>class IdxRangeCoeffs</type>
          </param>
          <param>
            <type>class ExecSpace</type>
          </param>
        </templateparamlist>
        <type>DFieldMem&lt; IdxRangeCoeffs, typename ExecSpace::memory_space &gt;</type>
        <definition>DFieldMem&lt; IdxRangeCoeffs, typename ExecSpace::memory_space &gt; compute_coeffs_on_mapping</definition>
        <argsstring>(ExecSpace exec_space, Mapping &amp;mapping, DFieldMem&lt; IdxRangeCoeffs, typename ExecSpace::memory_space &gt; &amp;&amp;coefficients_alloc)</argsstring>
        <name>compute_coeffs_on_mapping</name>
        <param>
          <type>ExecSpace</type>
          <declname>exec_space</declname>
        </param>
        <param>
          <type>Mapping &amp;</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>DFieldMem&lt; IdxRangeCoeffs, typename ExecSpace::memory_space &gt; &amp;&amp;</type>
          <declname>coefficients_alloc</declname>
        </param>
        <briefdescription>
<para>Add the Jacobian determinant to the coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>For polar integration, we can add the Jacobian determinant to the quadrature coefficients.</para>
<para><itemizedlist>
<listitem><para>2D example: (but it is implemented for ND)</para>
</listitem></itemizedlist>
</para>
<para><formula id="364">$ \int_{\Omega_{\text{cart}}} f(x,y) dxdy
 = \int_{\Omega} f(r,\theta) |det(J(r,\theta))| drd\theta
 \simeq \sum_{i,j} [q_{i,j}| det(J(r_i,\theta_j))|] f_{ij}$</formula></para>
<para>This function uses rvalues. It means that coefficients is a temporary input parameter and it returns a temporary coefficient object. The <ref refid="classQuadrature" kindref="compound">Quadrature</ref> object can only be instantiate with rvalues.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">exec_space</parametername>
</parameternamelist>
<parameterdescription>
<para>The space on which the function is executed (CPU/GPU). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping function from the logical domain <formula id="15">$ (r,\theta) $</formula> to the physical domain <formula id="365">$ (x, y) $</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coefficients_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>The quadrature coefficients <formula id="366">$\{q_{ij}\}_{ij} $</formula>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A rvalue FieldMem to the modified coefficients <formula id="367">$\{q_{ij}| det(J(r_i,\theta_j))|\}_{ij} $</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/volume_quadrature_nd.hpp" line="45" column="11" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/volume_quadrature_nd.hpp" bodystart="45" bodyend="68"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File providing functions to adapt quadrature coefficients so they can integrate over a N-D volume. A N-D volume is a surface in 2D and a volume in 3D. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>MIT</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ddc/ddc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;coord_transformation_tools.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ddc_alias_inline_functions.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ddc_aliases.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;quadrature.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mapping,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IdxRangeCoeffs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecSpace&gt;</highlight></codeline>
<codeline lineno="45" refid="volume__quadrature__nd_8hpp_1a606ed8438555c5104a22658ba68f32ae" refkind="member"><highlight class="normal">DFieldMem&lt;IdxRangeCoeffs,<sp/>typename<sp/>ExecSpace::memory_space&gt;<sp/><ref refid="volume__quadrature__nd_8hpp_1a606ed8438555c5104a22658ba68f32ae" kindref="member">compute_coeffs_on_mapping</ref>(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExecSpace<sp/>exec_space,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mapping&amp;<sp/>mapping,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DFieldMem&lt;IdxRangeCoeffs,<sp/>typename<sp/>ExecSpace::memory_space&gt;&amp;&amp;<sp/>coefficients_alloc)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(is_curvilinear_2d_mapping_v&lt;Mapping&gt;);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structR" kindref="compound">R</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Mapping::curvilinear_tag_r;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structTheta" kindref="compound">Theta</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Mapping::curvilinear_tag_theta;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(has_jacobian_v&lt;Mapping&gt;);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">IdxCoeffs<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IdxRangeCoeffs::discrete_element_type;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>IdxRangeCoeffs<sp/>grid<sp/>=<sp/>get_idx_range(coefficients_alloc);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>DField&lt;IdxRangeCoeffs,<sp/>typename<sp/>ExecSpace::memory_space&gt;<sp/>coefficients(coefficients_alloc);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ddc::parallel_for_each(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec_space,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grid,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KOKKOS_LAMBDA(IdxCoeffs<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Coord&lt;R,<sp/>Theta&gt;<sp/>coord(ddc::coordinate(idx));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefficients(idx)<sp/>*=<sp/>fabs(mapping.jacobian(coord));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(coefficients_alloc);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/quadrature/volume_quadrature_nd.hpp"/>
  </compounddef>
</doxygen>
