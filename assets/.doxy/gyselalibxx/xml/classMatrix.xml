<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classMatrix" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Matrix</compoundname>
    <derivedcompoundref refid="classMatrix__Banded" prot="public" virt="non-virtual">Matrix_Banded</derivedcompoundref>
    <derivedcompoundref refid="classMatrix__Corner__Block" prot="public" virt="non-virtual">Matrix_Corner_Block</derivedcompoundref>
    <derivedcompoundref refid="classMatrix__Dense" prot="public" virt="non-virtual">Matrix_Dense</derivedcompoundref>
    <derivedcompoundref refid="classMatrix__PDS__Tridiag" prot="public" virt="non-virtual">Matrix_PDS_Tridiag</derivedcompoundref>
    <includes refid="matrix_8hpp" local="no">matrix.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classMatrix_1a687d05d0c6cb4e1a8dc1a40e4926e9a3" prot="protected" static="no" mutable="no">
        <type>int const</type>
        <definition>int const Matrix::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <qualifiedname>Matrix::n</qualifiedname>
        <briefdescription>
<para>The matrix size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="186" column="15" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classMatrix_1ab1bd5ff2b3826377f400a21d64c701fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Matrix::Matrix</definition>
        <argsstring>(int mat_size)</argsstring>
        <name>Matrix</name>
        <qualifiedname>Matrix::Matrix</qualifiedname>
        <param>
          <type>int</type>
          <declname>mat_size</declname>
        </param>
        <briefdescription>
<para>A constructor for the matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mat_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the n x n <ref refid="classMatrix" kindref="compound">Matrix</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="20" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1a0e72216b991d1f4af19982fe936067ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Matrix::~Matrix</definition>
        <argsstring>()=default</argsstring>
        <name>~Matrix</name>
        <qualifiedname>Matrix::~Matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="22" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1aec81ac31e9c308df6db246cb98202f17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Matrix::get_element</definition>
        <argsstring>(int i, int j) const =0</argsstring>
        <name>get_element</name>
        <qualifiedname>Matrix::get_element</qualifiedname>
        <reimplementedby refid="classMatrix__Banded_1a5a711c1ca70a97bd8dd0150f99b481db">get_element</reimplementedby>
        <reimplementedby refid="classMatrix__Centre__Block_1a3f27604e6f69a875e4e36aefdac74d7d">get_element</reimplementedby>
        <reimplementedby refid="classMatrix__Corner__Block_1a2eb6fc172db95cc7b24158b565abaae8">get_element</reimplementedby>
        <reimplementedby refid="classMatrix__Dense_1a8482f72f800ea57a82f1dda1da2ff5ea">get_element</reimplementedby>
        <reimplementedby refid="classMatrix__PDS__Tridiag_1a8561d0476c8b290204eb972532b34b12">get_element</reimplementedby>
        <reimplementedby refid="classMatrix__Periodic__Banded_1ae2c5c03658f20ac6e4f2b4002a87903d">get_element</reimplementedby>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>A method to get an element from the <ref refid="classMatrix" kindref="compound">Matrix</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">j</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The element at position (i,j). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="30" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1adbaf811ea3f43778b194d385cbefddd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Matrix::set_element</definition>
        <argsstring>(int i, int j, double a_ij)=0</argsstring>
        <name>set_element</name>
        <qualifiedname>Matrix::set_element</qualifiedname>
        <reimplementedby refid="classMatrix__Banded_1a881a233b2d548f7ea5c4e0f3cdcf5a15">set_element</reimplementedby>
        <reimplementedby refid="classMatrix__Centre__Block_1a27db3d1e7264670ff43acd1e55e85011">set_element</reimplementedby>
        <reimplementedby refid="classMatrix__Corner__Block_1ac388c62891d9e088ff9c97bc2f6fab1b">set_element</reimplementedby>
        <reimplementedby refid="classMatrix__PDS__Tridiag_1a940a5792070054a13214e854811b0fc8">set_element</reimplementedby>
        <reimplementedby refid="classMatrix__Periodic__Banded_1ae281ee32e158b7abf8efb4e314683f6b">set_element</reimplementedby>
        <reimplementedby refid="classMatrix__Dense_1ab1d60c479da034c628f830c2f967a8b4">set_element</reimplementedby>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a_ij</declname>
        </param>
        <briefdescription>
<para>A method to set an element of the <ref refid="classMatrix" kindref="compound">Matrix</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">j</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_ij</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that the element should be set to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="38" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1ae4dd63793621bcf68369b8cf8b267768" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Matrix::factorise</definition>
        <argsstring>()</argsstring>
        <name>factorise</name>
        <qualifiedname>Matrix::factorise</qualifiedname>
        <reimplementedby refid="classMatrix__Corner__Block_1ae2a30d18e94a8b387569344375a14d7c">factorise</reimplementedby>
        <briefdescription>
<para>Factorise the matrix. This method prepares the matrix for a call to the solve methods. For most matrix types a call to factorise causes the LU decomposition to be calculated. The elements of the matrix should not be accessed once this method has been called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="47" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.cpp" bodystart="56" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1a75e96c164e987dcce935dc48a960c5b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>DSpan1D</type>
        <definition>DSpan1D Matrix::solve_inplace</definition>
        <argsstring>(DSpan1D b) const</argsstring>
        <name>solve_inplace</name>
        <qualifiedname>Matrix::solve_inplace</qualifiedname>
        <reimplementedby refid="classMatrix__Centre__Block_1a49aa2d65de19927537c168e6ca1ffbc8">solve_inplace</reimplementedby>
        <reimplementedby refid="classMatrix__Corner__Block_1a63cfdbae8e80494242f82e73ebef5223">solve_inplace</reimplementedby>
        <param>
          <type>DSpan1D</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Solve the matrix equation in place. </para>
        </briefdescription>
        <detaileddescription>
<para>Solve the following matrix equation: <formula id="273">$ M x = b $</formula> The result <formula id="157">$ x $</formula> is saved into the memory allocated for <formula id="274">$ b $</formula>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The right-hand side of the equation on input. The solution on output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The solution <formula id="157">$ x $</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="60" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.cpp" bodystart="20" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1ad5ae88e5fcf754a49d127b7b423b3815" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>DSpan1D</type>
        <definition>DSpan1D Matrix::solve_transpose_inplace</definition>
        <argsstring>(DSpan1D b) const</argsstring>
        <name>solve_transpose_inplace</name>
        <qualifiedname>Matrix::solve_transpose_inplace</qualifiedname>
        <reimplementedby refid="classMatrix__Centre__Block_1a134f99cb2eb5d91749334db3fb6ef4c7">solve_transpose_inplace</reimplementedby>
        <reimplementedby refid="classMatrix__Corner__Block_1a1a3aab1aed85575bd8d3aa834cf73ed6">solve_transpose_inplace</reimplementedby>
        <param>
          <type>DSpan1D</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Solve the transposed matrix equation in place. </para>
        </briefdescription>
        <detaileddescription>
<para>Solve the following matrix equation: <formula id="275">$ M^T x = b $</formula> The result <formula id="157">$ x $</formula> is saved into the memory allocated for <formula id="274">$ b $</formula>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The right-hand side of the equation on input. The solution on output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The solution <formula id="157">$ x $</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="73" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.cpp" bodystart="32" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1ad7e90f1e0ded66bf06f39b0ba953b6cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>DSpan2D</type>
        <definition>DSpan2D Matrix::solve_multiple_inplace</definition>
        <argsstring>(DSpan2D bx) const</argsstring>
        <name>solve_multiple_inplace</name>
        <qualifiedname>Matrix::solve_multiple_inplace</qualifiedname>
        <reimplementedby refid="classMatrix__Centre__Block_1a9c7c1a7747125d7f1f1771de3cd05cda">solve_multiple_inplace</reimplementedby>
        <reimplementedby refid="classMatrix__Corner__Block_1ae311ddeb39776bcb881158c7d7f497a7">solve_multiple_inplace</reimplementedby>
        <param>
          <type>DSpan2D</type>
          <declname>bx</declname>
        </param>
        <briefdescription>
<para>Solve multiple matrix equations in place. </para>
        </briefdescription>
        <detaileddescription>
<para>Solve the following matrix equation: <formula id="273">$ M x = b $</formula> for multiple values of <formula id="274">$ b $</formula> and <formula id="157">$ x $</formula>. The first dimension is iterated over with each slice representing an equation to be solved. The result <formula id="157">$ x $</formula> is saved into the memory allocated for <formula id="274">$ b $</formula>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">bx</parametername>
</parameternamelist>
<parameterdescription>
<para>The right-hand side of the equation on input. The solution on output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The solution <formula id="157">$ x $</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="89" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.cpp" bodystart="44" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1a15badbcf214a7842a0a654f9210f39a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Matrix::get_size</definition>
        <argsstring>() const</argsstring>
        <name>get_size</name>
        <qualifiedname>Matrix::get_size</qualifiedname>
        <briefdescription>
<para>Get the size of the n x n <ref refid="classMatrix" kindref="compound">Matrix</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the n x n <ref refid="classMatrix" kindref="compound">Matrix</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="95" column="9" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" bodystart="95" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classMatrix_1a6d8698d32bd83ef959afaefa1128e63d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classMatrix" kindref="compound">Matrix</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Matrix &gt; Matrix::make_new_banded</definition>
        <argsstring>(int n, int kl, int ku, bool pds)</argsstring>
        <name>make_new_banded</name>
        <qualifiedname>Matrix::make_new_banded</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ku</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pds</declname>
        </param>
        <briefdescription>
<para>Get a new <ref refid="classMatrix" kindref="compound">Matrix</ref> representing a banded matrix. This method returns the appropriate subclass to minimise memory and computations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the n x n <ref refid="classMatrix" kindref="compound">Matrix</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kl</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lower diagonals. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ku</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of upper diagonals. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pds</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the matrix is positive-definite and symmetric.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instance of a <ref refid="classMatrix" kindref="compound">Matrix</ref> class that can store the banded matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="111" column="28" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.cpp" bodystart="74" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1abec29172141b7dc98ff61d9a3a561c11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classMatrix" kindref="compound">Matrix</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Matrix &gt; Matrix::make_new_periodic_banded</definition>
        <argsstring>(int n, int kl, int ku, bool pds)</argsstring>
        <name>make_new_periodic_banded</name>
        <qualifiedname>Matrix::make_new_periodic_banded</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ku</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pds</declname>
        </param>
        <briefdescription>
<para>Get a new <ref refid="classMatrix" kindref="compound">Matrix</ref> representing a periodic banded matrix. This method returns the appropriate subclass to minimise memory and computations. A periodic banded matrix is like a banded matrix but additionally contains non- zero values in the corners. I.e it has the following sparsity pattern: </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>* * *                   * *
* * * *                   *
* * * * *
  * * * * *

          ...

                  * * * * *
*                   * * * *
* *                   * * *
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the n x n <ref refid="classMatrix" kindref="compound">Matrix</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kl</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lower diagonals. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ku</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of upper diagonals. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pds</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the matrix is positive-definite and symmetric.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instance of a <ref refid="classMatrix" kindref="compound">Matrix</ref> class that can store the banded matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="137" column="28" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.cpp" bodystart="89" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1ac4da2410dd4b58eb725a219c83ed350e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classMatrix" kindref="compound">Matrix</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Matrix &gt; Matrix::make_new_block_with_banded_region</definition>
        <argsstring>(int n, int kl, int ku, bool pds, int block1_size, int block2_size=0)</argsstring>
        <name>make_new_block_with_banded_region</name>
        <qualifiedname>Matrix::make_new_block_with_banded_region</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ku</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block1_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block2_size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get a new <ref refid="classMatrix" kindref="compound">Matrix</ref> representing a matrix which has a banded region. This method returns the appropriate subclass to minimise memory and computations. This matrix must be able to be described by the following block matrices: </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>A B C
D E F
G H I
</verbatim> where E is a banded matrix, and A, E and I are square matrices.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the n x n <ref refid="classMatrix" kindref="compound">Matrix</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kl</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lower diagonals. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ku</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of upper diagonals. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pds</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the matrix is positive-definite and symmetric. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block1_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the matrix A. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block2_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the matrix I.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instance of a <ref refid="classMatrix" kindref="compound">Matrix</ref> class that can store the banded matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="159" column="28" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.cpp" bodystart="110" bodyend="133"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classMatrix_1a763f3f848403c33d0bcd494df1133218" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Matrix::factorise_method</definition>
        <argsstring>()=0</argsstring>
        <name>factorise_method</name>
        <qualifiedname>Matrix::factorise_method</qualifiedname>
        <reimplementedby refid="classMatrix__Banded_1a8557a87178af8adabd608abf15557358">factorise_method</reimplementedby>
        <reimplementedby refid="classMatrix__Corner__Block_1ad20b5bf7e74761d95bc5d87dcfa4e90e">factorise_method</reimplementedby>
        <reimplementedby refid="classMatrix__Dense_1a8217dada88e572e4b27ece16fde7e0eb">factorise_method</reimplementedby>
        <reimplementedby refid="classMatrix__PDS__Tridiag_1acede39864066d920c185b2a6e995236c">factorise_method</reimplementedby>
        <briefdescription>
<para>Call the factorisation method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The LAPACK error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="173" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_1a7abddeb70927285ae9c0a6793d115427" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Matrix::solve_inplace_method</definition>
        <argsstring>(double *b, char transpose, int n_equations) const =0</argsstring>
        <name>solve_inplace_method</name>
        <qualifiedname>Matrix::solve_inplace_method</qualifiedname>
        <reimplementedby refid="classMatrix__Corner__Block_1ac4168729949503dc3f675fe0c3e82348">solve_inplace_method</reimplementedby>
        <reimplementedby refid="classMatrix__Banded_1a6d555bff9cfb365ebb32b25c72e640e9">solve_inplace_method</reimplementedby>
        <reimplementedby refid="classMatrix__Dense_1a04bd8154d80037d7450d40bfd5885dd8">solve_inplace_method</reimplementedby>
        <reimplementedby refid="classMatrix__PDS__Tridiag_1af414c819d702db8eefaac2b1fcb08fd2">solve_inplace_method</reimplementedby>
        <param>
          <type>double *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>char</type>
          <declname>transpose</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_equations</declname>
        </param>
        <briefdescription>
<para>Call the LAPACK solve method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The data describing the right-hand side. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>A character [&apos;N&apos;/&apos;<ref refid="structT" kindref="compound">T</ref>&apos;] describing whether the matrix or the transposed matrix appears in the matrix equation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n_equations</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of equations being solved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The LAPACK error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="183" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>The super class from which matrix classes should inherit. This class is used to solve matrix equations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Matrix</label>
        <link refid="classMatrix"/>
      </node>
      <node id="2">
        <label>Matrix_Banded</label>
        <link refid="classMatrix__Banded"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Matrix_Centre_Block</label>
        <link refid="classMatrix__Centre__Block"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Matrix_Corner_Block</label>
        <link refid="classMatrix__Corner__Block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Matrix_Dense</label>
        <link refid="classMatrix__Dense"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Matrix_PDS_Tridiag</label>
        <link refid="classMatrix__PDS__Tridiag"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Matrix_Periodic_Banded</label>
        <link refid="classMatrix__Periodic__Banded"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" line="13" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/matrix_tools/matrix.hpp" bodystart="14" bodyend="187"/>
    <listofallmembers>
      <member refid="classMatrix_1ae4dd63793621bcf68369b8cf8b267768" prot="public" virt="virtual"><scope>Matrix</scope><name>factorise</name></member>
      <member refid="classMatrix_1a763f3f848403c33d0bcd494df1133218" prot="protected" virt="pure-virtual"><scope>Matrix</scope><name>factorise_method</name></member>
      <member refid="classMatrix_1aec81ac31e9c308df6db246cb98202f17" prot="public" virt="pure-virtual"><scope>Matrix</scope><name>get_element</name></member>
      <member refid="classMatrix_1a15badbcf214a7842a0a654f9210f39a1" prot="public" virt="non-virtual"><scope>Matrix</scope><name>get_size</name></member>
      <member refid="classMatrix_1a6d8698d32bd83ef959afaefa1128e63d" prot="public" virt="non-virtual"><scope>Matrix</scope><name>make_new_banded</name></member>
      <member refid="classMatrix_1ac4da2410dd4b58eb725a219c83ed350e" prot="public" virt="non-virtual"><scope>Matrix</scope><name>make_new_block_with_banded_region</name></member>
      <member refid="classMatrix_1abec29172141b7dc98ff61d9a3a561c11" prot="public" virt="non-virtual"><scope>Matrix</scope><name>make_new_periodic_banded</name></member>
      <member refid="classMatrix_1ab1bd5ff2b3826377f400a21d64c701fe" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="classMatrix_1a687d05d0c6cb4e1a8dc1a40e4926e9a3" prot="protected" virt="non-virtual"><scope>Matrix</scope><name>n</name></member>
      <member refid="classMatrix_1adbaf811ea3f43778b194d385cbefddd9" prot="public" virt="pure-virtual"><scope>Matrix</scope><name>set_element</name></member>
      <member refid="classMatrix_1a75e96c164e987dcce935dc48a960c5b2" prot="public" virt="virtual"><scope>Matrix</scope><name>solve_inplace</name></member>
      <member refid="classMatrix_1a7abddeb70927285ae9c0a6793d115427" prot="protected" virt="pure-virtual"><scope>Matrix</scope><name>solve_inplace_method</name></member>
      <member refid="classMatrix_1ad7e90f1e0ded66bf06f39b0ba953b6cd" prot="public" virt="virtual"><scope>Matrix</scope><name>solve_multiple_inplace</name></member>
      <member refid="classMatrix_1ad5ae88e5fcf754a49d127b7b423b3815" prot="public" virt="virtual"><scope>Matrix</scope><name>solve_transpose_inplace</name></member>
      <member refid="classMatrix_1a0e72216b991d1f4af19982fe936067ab" prot="public" virt="virtual"><scope>Matrix</scope><name>~Matrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
