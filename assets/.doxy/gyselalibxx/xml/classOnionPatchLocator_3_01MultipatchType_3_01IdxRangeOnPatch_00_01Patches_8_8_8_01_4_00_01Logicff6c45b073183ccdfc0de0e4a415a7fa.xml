<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa" kind="class" language="C++" prot="public">
    <compoundname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</compoundname>
    <includes refid="onion__patch__locator_8hpp" local="no">onion_patch_locator.hpp</includes>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Patches</declname>
        <defname>Patches</defname>
      </param>
      <param>
        <type>class LogicalToPhysicalMapping</type>
      </param>
      <param>
        <type>class PhysicalToLogicalMapping</type>
      </param>
      <param>
        <type>class ExecSpace</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a9c8a8d7e7a6761eee7d919eb3f83b873" prot="private" static="no">
        <type>typename LogicalToPhysicalMapping::cartesian_tag_x</type>
        <definition>using OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::X =  typename LogicalToPhysicalMapping::cartesian_tag_x</definition>
        <argsstring></argsstring>
        <name>X</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::X</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="73" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a0919484ade7e40948bf6ae484f81010f" prot="private" static="no">
        <type>typename LogicalToPhysicalMapping::cartesian_tag_y</type>
        <definition>using OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::Y =  typename LogicalToPhysicalMapping::cartesian_tag_y</definition>
        <argsstring></argsstring>
        <name>Y</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::Y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="74" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a63ce3896f1f3a6d5eefbc034510d86f1" prot="private" static="no">
        <type>typename LogicalToPhysicalMapping::curvilinear_tag_r</type>
        <definition>using OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::R =  typename LogicalToPhysicalMapping::curvilinear_tag_r</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::R</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="75" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a5265615556b45e5f2c82852cd9b1738d" prot="private" static="no">
        <type>typename LogicalToPhysicalMapping::curvilinear_tag_theta</type>
        <definition>using OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::Theta =  typename LogicalToPhysicalMapping::curvilinear_tag_theta</definition>
        <argsstring></argsstring>
        <name>Theta</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::Theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="76" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a23f026d06831aa14723f6b02051f9bda" prot="public" static="no">
        <type><ref refid="classMultipatchType" kindref="compound">MultipatchType</ref>&lt; IdxRangeOnPatch, Patches... &gt;</type>
        <definition>using OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::MultipatchIdxRanges =  MultipatchType&lt;IdxRangeOnPatch, Patches...&gt;</definition>
        <argsstring></argsstring>
        <name>MultipatchIdxRanges</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::MultipatchIdxRanges</qualifiedname>
        <briefdescription>
<para><ref refid="classMultipatchType" kindref="compound">MultipatchType</ref> storing the index range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="82" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a418113e489ff4bddf37de574e6af3aaf" prot="public" static="no">
        <type>ddc::detail::TypeSeq&lt; Patches... &gt;</type>
        <definition>using OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::PatchOrdering =  ddc::detail::TypeSeq&lt;Patches...&gt;</definition>
        <argsstring></argsstring>
        <name>PatchOrdering</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::PatchOrdering</qualifiedname>
        <briefdescription>
<para>Sequence ddc::detail::TypeSeq of patch tags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="85" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1ade4557ce3239a36e96a844cd2d9826c9" prot="public" static="no">
        <type>ExecSpace</type>
        <definition>using OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::exec_space =  ExecSpace</definition>
        <argsstring></argsstring>
        <name>exec_space</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::exec_space</qualifiedname>
        <briefdescription>
<para>The space (CPU/GPU) where the calculations are carried out. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="88" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a22a6aaf47e4c677a8f4ad88143ec2d07" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class <ref refid="structPatch" kindref="compound">Patch</ref></type>
          </param>
        </templateparamlist>
        <type>LogicalToPhysicalMapping</type>
        <definition>using OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::get_mapping_on_patch_t =  LogicalToPhysicalMapping</definition>
        <argsstring></argsstring>
        <name>get_mapping_on_patch_t</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::get_mapping_on_patch_t</qualifiedname>
        <briefdescription>
<para>Get the type of the mapping on the given <ref refid="structPatch" kindref="compound">Patch</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="224" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a3e5fd579574bdae3d4ecc7881c668859" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class Dim1</type>
          </param>
          <param>
            <type>class Dim2</type>
          </param>
        </templateparamlist>
        <type>LogicalToPhysicalMapping</type>
        <definition>using OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::get_mapping_on_logical_dim_t =  LogicalToPhysicalMapping</definition>
        <argsstring></argsstring>
        <name>get_mapping_on_logical_dim_t</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::get_mapping_on_logical_dim_t</qualifiedname>
        <briefdescription>
<para>Get the type of the mapping from given logical continuous dimensions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="228" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a4da8d05144dcf14ff74c626a376202a1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::outside_rmax_domain</definition>
        <argsstring></argsstring>
        <name>outside_rmax_domain</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::outside_rmax_domain</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
<para>Default value to define outside domain (not a patch) for radius bigger than the maximum radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="92" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1ae1950d68780de328065e246f1f5582b3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::outside_rmin_domain</definition>
        <argsstring></argsstring>
        <name>outside_rmin_domain</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::outside_rmin_domain</qualifiedname>
        <initializer>= -2</initializer>
        <briefdescription>
<para>Default value to define outside domain (not a patch) for radius smaller than the minimum radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="96" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a3f9b0f6ad41ac3991b92cae37497cbb3" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::n_patches</definition>
        <argsstring></argsstring>
        <name>n_patches</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::n_patches</qualifiedname>
        <initializer>= ddc::type_seq_size_v&lt;<ref refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a418113e489ff4bddf37de574e6af3aaf" kindref="member">PatchOrdering</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="99" column="34" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1ad93cf51402e79e3424838824ea103577" prot="private" static="no" mutable="no">
        <type>LogicalToPhysicalMapping const</type>
        <definition>LogicalToPhysicalMapping const OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::m_to_cartesian_mapping</definition>
        <argsstring></argsstring>
        <name>m_to_cartesian_mapping</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::m_to_cartesian_mapping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="112" column="36" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1aae97400f54e183258bc91d53df8c4b9e" prot="private" static="no" mutable="no">
        <type>PhysicalToLogicalMapping const</type>
        <definition>PhysicalToLogicalMapping const OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::m_to_curvilinear_mapping</definition>
        <argsstring></argsstring>
        <name>m_to_curvilinear_mapping</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::m_to_curvilinear_mapping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="113" column="36" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a20812eab494d1b44dc9df3c4aff25e73" prot="private" static="no" mutable="no">
        <type><ref refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a23f026d06831aa14723f6b02051f9bda" kindref="member">MultipatchIdxRanges</ref> const</type>
        <definition>MultipatchIdxRanges const OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::m_all_idx_ranges</definition>
        <argsstring></argsstring>
        <name>m_all_idx_ranges</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::m_all_idx_ranges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="114" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a437b59e243e7e2ef6a85011126dfb733" prot="private" static="no" mutable="no">
        <type>Kokkos::View&lt; Coord&lt; <ref refid="structR" kindref="compound">R</ref> &gt; *, typename ExecSpace::memory_space &gt;</type>
        <definition>Kokkos::View&lt;Coord&lt;R&gt;*, typename ExecSpace::memory_space&gt; OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::m_radii</definition>
        <argsstring></argsstring>
        <name>m_radii</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::m_radii</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="116" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a6c548d2343e842859e4164eec8192537" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::OnionPatchLocator</definition>
        <argsstring>(MultipatchIdxRanges const &amp;all_idx_ranges, LogicalToPhysicalMapping const &amp;to_physical_mapping, PhysicalToLogicalMapping const &amp;to_logical_mapping)</argsstring>
        <name>OnionPatchLocator</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::OnionPatchLocator</qualifiedname>
        <param>
          <type><ref refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a23f026d06831aa14723f6b02051f9bda" kindref="member">MultipatchIdxRanges</ref> const &amp;</type>
          <declname>all_idx_ranges</declname>
        </param>
        <param>
          <type>LogicalToPhysicalMapping const &amp;</type>
          <declname>to_physical_mapping</declname>
        </param>
        <param>
          <type>PhysicalToLogicalMapping const &amp;</type>
          <declname>to_logical_mapping</declname>
        </param>
        <briefdescription>
<para>Instantiante the operator with <ref refid="classMultipatchType" kindref="compound">MultipatchType</ref> of index ranges and a mapping on all the patches. </para>
        </briefdescription>
        <detaileddescription>
<para>The order of the elements in the tuple or the <ref refid="classMultipatchType" kindref="compound">MultipatchType</ref> doesn&apos;t matter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>all_idx_ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classMultipatchType" kindref="compound">MultipatchType</ref> of index ranges defined on the logical domain of each patch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to_physical_mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>Mapping from the logical domains of every patch to the global physical domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to_logical_mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>Mapping from the global physical domain to the logical domain of every patch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="129" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="129" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1ad61de72cc697967bdb53b5e9d04d20ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::~OnionPatchLocator</definition>
        <argsstring>()=default</argsstring>
        <name>~OnionPatchLocator</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::~OnionPatchLocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="142" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a02e7fbec0ed664f9ad20d20d48c85ab4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION int</type>
        <definition>KOKKOS_INLINE_FUNCTION int OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::operator()</definition>
        <argsstring>(Coord&lt; X, Y &gt; const coord) const</argsstring>
        <name>operator()</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::operator()</qualifiedname>
        <param>
          <type>Coord&lt; <ref refid="structX" kindref="compound">X</ref>, <ref refid="structY" kindref="compound">Y</ref> &gt; const</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Get the patch where the given physical coordinate is. </para>
        </briefdescription>
        <detaileddescription>
<para>We use a dichotomy method to find the patch the physical coordinate is on.</para>
<para>Each logical grid of the patches are defined on the same dimensions. Knowing that, we can compare the logical coordinates between the patches in the dichotomy.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] The given physical coordinate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>[int] The patch index where the physical coordinate. If the coordinate is outside of the domain, it returns a negative value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="157" column="32" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="157" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a83853bf96978cf43658602ed45fea3cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="structPatch" kindref="compound">Patch</ref></type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION LogicalToPhysicalMapping</type>
        <definition>KOKKOS_FUNCTION LogicalToPhysicalMapping OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::get_mapping_on_patch</definition>
        <argsstring>() const</argsstring>
        <name>get_mapping_on_patch</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::get_mapping_on_patch</qualifiedname>
        <briefdescription>
<para>Get the mapping on the given <ref refid="structPatch" kindref="compound">Patch</ref>. The function can run on device and host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="structPatch" kindref="compound">Patch</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structPatch" kindref="compound">Patch</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mapping on the given <ref refid="structPatch" kindref="compound">Patch</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="202" column="46" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a6989dccaab70d5b5974a0d3f5263edff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Dim1</type>
          </param>
          <param>
            <type>class Dim2</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION LogicalToPhysicalMapping</type>
        <definition>KOKKOS_FUNCTION LogicalToPhysicalMapping OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::get_mapping_on_logical_dim</definition>
        <argsstring>() const</argsstring>
        <name>get_mapping_on_logical_dim</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::get_mapping_on_logical_dim</qualifiedname>
        <briefdescription>
<para>Get the mapping from given logical continuous dimensions. The function can run on device and host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="structPatch" kindref="compound">Patch</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structPatch" kindref="compound">Patch</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mapping on the given <ref refid="structPatch" kindref="compound">Patch</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="214" column="46" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="214" bodyend="220"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a66ec2021188919e8bb341d6327b986da" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::set_and_check_radii</definition>
        <argsstring>()</argsstring>
        <name>set_and_check_radii</name>
        <qualifiedname>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;::set_and_check_radii</qualifiedname>
        <briefdescription>
<para>Set the m_radii array containing all the boundary radial coordinates. Check if the patches are well ordered by comparing the radii. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="234" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="234" bodyend="253"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="structPatch" kindref="compound">Patch</ref> locator specialised for &quot;onion&quot; geometry. </para>
    </briefdescription>
    <detaileddescription>
<para>See <ref refid="classOnionPatchLocator_1OnionPatchLocatorImplementation" kindref="member">OnionPatchLocatorImplementation</ref></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ExecSpace</parametername>
</parameternamelist>
<parameterdescription>
<para>The space (CPU/GPU) where the calculations are carried out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Patches</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structPatch" kindref="compound">Patch</ref> types. Their order is important. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LogicalToPhysicalMapping</parametername>
</parameternamelist>
<parameterdescription>
<para>A mapping type for all the patches. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" line="65" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/connectivity/onion_patch_locator.hpp" bodystart="70" bodyend="254"/>
    <listofallmembers>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1ade4557ce3239a36e96a844cd2d9826c9" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>exec_space</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a6989dccaab70d5b5974a0d3f5263edff" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>get_mapping_on_logical_dim</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a3e5fd579574bdae3d4ecc7881c668859" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>get_mapping_on_logical_dim_t</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a83853bf96978cf43658602ed45fea3cb" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>get_mapping_on_patch</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a22a6aaf47e4c677a8f4ad88143ec2d07" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>get_mapping_on_patch_t</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a20812eab494d1b44dc9df3c4aff25e73" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>m_all_idx_ranges</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a437b59e243e7e2ef6a85011126dfb733" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>m_radii</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1ad93cf51402e79e3424838824ea103577" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>m_to_cartesian_mapping</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1aae97400f54e183258bc91d53df8c4b9e" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>m_to_curvilinear_mapping</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a23f026d06831aa14723f6b02051f9bda" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>MultipatchIdxRanges</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a3f9b0f6ad41ac3991b92cae37497cbb3" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>n_patches</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a6c548d2343e842859e4164eec8192537" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>OnionPatchLocator</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a02e7fbec0ed664f9ad20d20d48c85ab4" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>operator()</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a4da8d05144dcf14ff74c626a376202a1" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>outside_rmax_domain</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1ae1950d68780de328065e246f1f5582b3" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>outside_rmin_domain</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a418113e489ff4bddf37de574e6af3aaf" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>PatchOrdering</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a63ce3896f1f3a6d5eefbc034510d86f1" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>R</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a66ec2021188919e8bb341d6327b986da" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>set_and_check_radii</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a5265615556b45e5f2c82852cd9b1738d" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>Theta</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a9c8a8d7e7a6761eee7d919eb3f83b873" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>X</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1a0919484ade7e40948bf6ae484f81010f" prot="private" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>Y</name></member>
      <member refid="classOnionPatchLocator_3_01MultipatchType_3_01IdxRangeOnPatch_00_01Patches_8_8_8_01_4_00_01Logicff6c45b073183ccdfc0de0e4a415a7fa_1ad61de72cc697967bdb53b5e9d04d20ac" prot="public" virt="non-virtual"><scope>OnionPatchLocator&lt; MultipatchType&lt; IdxRangeOnPatch, Patches... &gt;, LogicalToPhysicalMapping, PhysicalToLogicalMapping, ExecSpace &gt;</scope><name>~OnionPatchLocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
