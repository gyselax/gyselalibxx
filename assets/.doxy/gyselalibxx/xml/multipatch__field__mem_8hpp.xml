<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="multipatch__field__mem_8hpp" kind="file" language="C++">
    <compoundname>multipatch_field_mem.hpp</compoundname>
    <includes refid="multipatch__field_8hpp" local="yes">multipatch_field.hpp</includes>
    <includes refid="multipatch__type_8hpp" local="yes">multipatch_type.hpp</includes>
    <includedby refid="itimestepper_8hpp" local="yes">/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/itimestepper.hpp</includedby>
    <incdepgraph>
      <node id="17">
        <label>tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>tensor_common.hpp</label>
        <link refid="tensor__common_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>tensor_index_tools.hpp</label>
        <link refid="tensor__index__tools_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>vector_field.hpp</label>
        <link refid="vector__field_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>vector_field_common.hpp</label>
        <link refid="vector__field__common_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>vector_field_mem.hpp</label>
        <link refid="vector__field__mem_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>vector_index_tools.hpp</label>
        <link refid="vector__index__tools_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>multipatch_field.hpp</label>
        <link refid="multipatch__field_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp</label>
        <link refid="multipatch__field__mem_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>multipatch_type.hpp</label>
        <link refid="multipatch__type_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>types.hpp</label>
        <link refid="types_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ddc_alias_inline_functions.hpp</label>
        <link refid="ddc__alias__inline__functions_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ddc_aliases.hpp</label>
        <link refid="ddc__aliases_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ddc_helper.hpp</label>
        <link refid="ddc__helper_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>type_seq_tools.hpp</label>
        <link refid="type__seq__tools_8hpp_source"/>
      </node>
      <node id="18">
        <label>array</label>
      </node>
      <node id="12">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>ddc/ddc.hpp</label>
      </node>
      <node id="9">
        <label>ddc/kernels/splines.hpp</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/advection/bsl_advection_1d.hpp</label>
        <link refid="bsl__advection__1d_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/time_solver/bsl_predcorr.hpp</label>
        <link refid="bsl__predcorr_8hpp_source"/>
      </node>
      <node id="7">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryRTheta/time_solver/bsl_predcorr_second_order_explicit.hpp</label>
        <link refid="bsl__predcorr__second__order__explicit_8hpp_source"/>
      </node>
      <node id="6">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXY/time_integration/predcorr_RK2.hpp</label>
        <link refid="predcorr__RK2_8hpp_source"/>
      </node>
      <node id="1">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp</label>
        <link refid="multipatch__field__mem_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/crank_nicolson.hpp</label>
        <link refid="crank__nicolson_8hpp_source"/>
      </node>
      <node id="4">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/euler.hpp</label>
        <link refid="euler_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/itimestepper.hpp</label>
        <link refid="itimestepper_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk2.hpp</label>
        <link refid="rk2_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk3.hpp</label>
        <link refid="rk3_8hpp_source"/>
      </node>
      <node id="11">
        <label>/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/timestepper/rk4.hpp</label>
        <link refid="rk4_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classMultipatchFieldMem" prot="public">MultipatchFieldMem</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="multipatch__field__mem_8hpp_1ad352ad1819417d87cfbc9f0f0c8d3a16" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>class <ref refid="structT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool enable_multipatch_field_mem</definition>
        <argsstring></argsstring>
        <name>enable_multipatch_field_mem</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" line="8" column="23" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="multipatch__field__mem_8hpp_1ab0d2fc20ded29a0b113e6cc2676211a6" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>class <ref refid="structT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool is_multipatch_field_mem_v</definition>
        <argsstring></argsstring>
        <name>is_multipatch_field_mem_v</name>
        <initializer>= enable_multipatch_field_mem&lt;std::remove_const_t&lt;std::remove_reference_t&lt;<ref refid="structT" kindref="compound">T</ref>&gt;&gt;&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" line="11" column="23" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="multipatch__field__mem_8hpp_1a0dd33cf752866d669c5ddb5f62a43fb4" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>template&lt; typename P &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>Patches</declname>
            <defname>Patches</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool enable_multipatch_type&lt; MultipatchFieldMem&lt; T, Patches... &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>enable_multipatch_type&lt; MultipatchFieldMem&lt; T, Patches... &gt; &gt;</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" line="201" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="multipatch__field__mem_8hpp_1afc44c6145738b001911d7a5e57c997a3" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>template&lt; typename P &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>Patches</declname>
            <defname>Patches</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool enable_multipatch_field_mem&lt; MultipatchFieldMem&lt; T, Patches... &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>enable_multipatch_field_mem&lt; MultipatchFieldMem&lt; T, Patches... &gt; &gt;</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" line="204" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="multipatch__field__mem_8hpp_1ab3e1449fe59b875cf4b7bf50485bd5b9" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>template&lt; typename P &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>Patches</declname>
            <defname>Patches</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool enable_mem_type&lt; MultipatchFieldMem&lt; T, Patches... &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>enable_mem_type&lt; MultipatchFieldMem&lt; T, Patches... &gt; &gt;</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" line="207" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="multipatch__field__mem_8hpp_1a8e50a92128b7ed8915caf7baf6629ecd" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>template&lt; typename P &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>Patches</declname>
            <defname>Patches</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool enable_data_access_methods&lt; MultipatchFieldMem&lt; T, Patches... &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>enable_data_access_methods&lt; MultipatchFieldMem&lt; T, Patches... &gt; &gt;</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" line="210" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;multipatch_field.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;multipatch_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_multipatch_field_mem<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_multipatch_field_mem_v</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>enable_multipatch_field_mem&lt;std::remove_const_t&lt;std::remove_reference_t&lt;T&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structT" kindref="compound">T</ref>,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Patches&gt;</highlight></codeline>
<codeline lineno="29" refid="classMultipatchFieldMem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMultipatchFieldMem" kindref="compound">MultipatchFieldMem</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classMultipatchType" kindref="compound">MultipatchType</ref>&lt;T,<sp/>Patches...&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(has_data_access_methods_v&lt;T&lt;Patches&gt;&gt;<sp/>&amp;&amp;<sp/>...),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>MultipatchFieldMem<sp/>type<sp/>should<sp/>only<sp/>contain<sp/>instances<sp/>of<sp/>objects<sp/>that<sp/>can<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;manipulated<sp/>like<sp/>fields.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_mem_type_v&lt;T&lt;Patches&gt;&gt;<sp/>&amp;&amp;<sp/>...),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>MultipatchFieldMem<sp/>type<sp/>should<sp/>only<sp/>contain<sp/>instances<sp/>of<sp/>objects<sp/>that<sp/>allocate<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;memory.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classMultipatchFieldMem_1a4e749f2597001907dbe8cf077ca2da9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classMultipatchType" kindref="compound">base_type</ref><sp/>=<sp/><ref refid="classMultipatchType" kindref="compound">MultipatchType</ref>&lt;<ref refid="structT" kindref="compound">T</ref>,<sp/>Patches...&gt;;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">typename<sp/><ref refid="classMultipatchType_1ac09ed5edaf7d35c564ef78fe31620631" kindref="member">base_type::PatchOrdering</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Patch&gt;</highlight></codeline>
<codeline lineno="49" refid="classMultipatchFieldMem_1affec2555dc86033cbcb5e80113cd91ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classMultipatchFieldMem_1affec2555dc86033cbcb5e80113cd91ac" kindref="member">InternalIdxRangeOnPatch</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structT" kindref="compound">T&lt;Patch&gt;::discrete_domain_type</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Patch&gt;</highlight></codeline>
<codeline lineno="53" refid="classMultipatchFieldMem_1a0619dafdf75c12736c49816b0d928f6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classMultipatchFieldMem_1a0619dafdf75c12736c49816b0d928f6a" kindref="member">InternalFieldOnPatch</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structT" kindref="compound">T&lt;Patch&gt;::span_type</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Patch&gt;</highlight></codeline>
<codeline lineno="57" refid="classMultipatchFieldMem_1a3c244af591bf82d81c2bcbc05d614f7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classMultipatchFieldMem_1a3c244af591bf82d81c2bcbc05d614f7c" kindref="member">InternalConstFieldOnPatch</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structT" kindref="compound">T&lt;Patch&gt;::view_type</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OtherType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>OPatches&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMultipatchFieldMem" kindref="compound">MultipatchFieldMem</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64" refid="classMultipatchFieldMem_1a5dbf8c8141b899d8f283676228c1d0ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classMultipatchField" kindref="compound">span_type</ref><sp/>=<sp/><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref>&lt;<ref refid="classMultipatchFieldMem_1a0619dafdf75c12736c49816b0d928f6a" kindref="member">InternalFieldOnPatch</ref>,<sp/>Patches...&gt;;</highlight></codeline>
<codeline lineno="66" refid="classMultipatchFieldMem_1a27fbfd50d0ab158776d8dc9476d18498" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classMultipatchField" kindref="compound">view_type</ref><sp/>=<sp/><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref>&lt;<ref refid="classMultipatchFieldMem_1a3c244af591bf82d81c2bcbc05d614f7c" kindref="member">InternalConstFieldOnPatch</ref>,<sp/>Patches...&gt;;</highlight></codeline>
<codeline lineno="68" refid="classMultipatchFieldMem_1abbd97d1ad7dfdd97b1721d08de4b4c3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classMultipatchType" kindref="compound">discrete_domain_type</ref><sp/>=<sp/><ref refid="classMultipatchType" kindref="compound">MultipatchType</ref>&lt;<ref refid="classMultipatchFieldMem_1affec2555dc86033cbcb5e80113cd91ac" kindref="member">InternalIdxRangeOnPatch</ref>,<sp/>Patches...&gt;;</highlight></codeline>
<codeline lineno="70" refid="classMultipatchFieldMem_1ad7c866614c915394b926d867e3b80e6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classMultipatchFieldMem_1ad7c866614c915394b926d867e3b80e6f" kindref="member">memory_space</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::example_element::memory_space;</highlight></codeline>
<codeline lineno="72" refid="classMultipatchFieldMem_1a841face1ddf0be7541b620046ab3fd93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classMultipatchFieldMem_1a841face1ddf0be7541b620046ab3fd93" kindref="member">element_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::example_element::element_type;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80" refid="classMultipatchFieldMem_1a4519292b25b58d022ead047fae3c5178" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1a4519292b25b58d022ead047fae3c5178" kindref="member">MultipatchFieldMem</ref>(<ref refid="structT" kindref="compound">T&lt;Patches&gt;</ref>...<sp/>args)<sp/>:<sp/><ref refid="classMultipatchType" kindref="compound">base_type</ref>(args...)<sp/>{}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MultipatchObj&gt;</highlight></codeline>
<codeline lineno="93" refid="classMultipatchFieldMem_1a37eae3b00efc46c87e14e1eae48fecf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1a37eae3b00efc46c87e14e1eae48fecf5" kindref="member">MultipatchFieldMem</ref>(MultipatchObj&amp;<sp/>other)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classMultipatchType" kindref="compound">base_type</ref>(std::move(<ref refid="structT" kindref="compound">T</ref>&lt;Patches&gt;(other.template<sp/><ref refid="classMultipatchFieldMem_1a579cfff022a37682e4677b6298559d4f" kindref="member">get</ref>&lt;Patches&gt;()))...)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(is_multipatch_type_v&lt;MultipatchObj&gt;);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OtherType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>OPatches&gt;</highlight></codeline>
<codeline lineno="106" refid="classMultipatchFieldMem_1ae39abf1d81ca63a0aa65345a79a638fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMultipatchFieldMem_1ae39abf1d81ca63a0aa65345a79a638fd" kindref="member">MultipatchFieldMem</ref>(<ref refid="classMultipatchFieldMem" kindref="compound">MultipatchFieldMem&lt;OtherType, OPatches...&gt;</ref>&amp;&amp;<sp/>other)<sp/>:<sp/><ref refid="classMultipatchType" kindref="compound">base_type</ref>(other)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;ddc::detail::TypeSeq&lt;Patches...&gt;,<sp/>ddc::detail::TypeSeq&lt;OPatches...&gt;&gt;,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>a<sp/>MultipatchFieldMem<sp/>from<sp/>a<sp/>temporary<sp/>MultipatchFieldMem<sp/>with<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;different<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ordering&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;std::tuple&lt;T&lt;Patches&gt;...&gt;,<sp/>std::tuple&lt;OtherType&lt;OPatches&gt;...&gt;&gt;,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultipatchFieldMems<sp/>are<sp/>not<sp/>equivalent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMultipatchFieldMem" kindref="compound">~MultipatchFieldMem</ref>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/><ref refid="structPatch" kindref="compound">Patch</ref>&gt;</highlight></codeline>
<codeline lineno="127" refid="classMultipatchFieldMem_1a579cfff022a37682e4677b6298559d4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>auto<sp/><ref refid="classMultipatchFieldMem_1a579cfff022a37682e4677b6298559d4f" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="128"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::get_const_field(std::get&lt;<ref refid="structT" kindref="compound">T&lt;Patch&gt;</ref>&gt;(<ref refid="classMultipatchType_1ae7480fdbb95f4018d1cd39f809001c14" kindref="member">base_type::m_tuple</ref>));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Patch&gt;</highlight></codeline>
<codeline lineno="139" refid="classMultipatchFieldMem_1a6dab5b5b8e1583e5693c5dd9e9c768a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1a6dab5b5b8e1583e5693c5dd9e9c768a7" kindref="member">get</ref>()</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::get_field(std::get&lt;<ref refid="structT" kindref="compound">T&lt;Patch&gt;</ref>&gt;(<ref refid="classMultipatchType_1ae7480fdbb95f4018d1cd39f809001c14" kindref="member">base_type::m_tuple</ref>));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classMultipatchFieldMem_1a32fdf886aeabdd36febe191309a0ad43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1a32fdf886aeabdd36febe191309a0ad43" kindref="member">idx_range</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="150"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMultipatchType" kindref="compound">MultipatchType</ref>&lt;<ref refid="classMultipatchFieldMem_1affec2555dc86033cbcb5e80113cd91ac" kindref="member">InternalIdxRangeOnPatch</ref>,<sp/>Patches...&gt;(</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_idx_range(std::get&lt;<ref refid="structT" kindref="compound">T&lt;Patches&gt;</ref>&gt;(<ref refid="classMultipatchType_1ae7480fdbb95f4018d1cd39f809001c14" kindref="member">base_type::m_tuple</ref>))...);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classMultipatchFieldMem_1ad662f26d4aab330dae6a7403c2db0b98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1ad662f26d4aab330dae6a7403c2db0b98" kindref="member">get_field</ref>()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref>&lt;<ref refid="classMultipatchFieldMem_1a0619dafdf75c12736c49816b0d928f6a" kindref="member">InternalFieldOnPatch</ref>,<sp/>Patches...&gt;(</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMultipatchFieldMem_1ad662f26d4aab330dae6a7403c2db0b98" kindref="member">::get_field</ref>(std::get&lt;<ref refid="structT" kindref="compound">T&lt;Patches&gt;</ref>&gt;(<ref refid="classMultipatchType_1ae7480fdbb95f4018d1cd39f809001c14" kindref="member">base_type::m_tuple</ref>))...);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classMultipatchFieldMem_1ad38e389296ed3e9548bc17079c8b0d3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1ad38e389296ed3e9548bc17079c8b0d3a" kindref="member">span_view</ref>()</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1ad662f26d4aab330dae6a7403c2db0b98" kindref="member">get_field</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classMultipatchFieldMem_1a2133a1adff7511566108aa2c8a38d7f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1a2133a1adff7511566108aa2c8a38d7f5" kindref="member">get_const_field</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="183"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref>&lt;<ref refid="classMultipatchFieldMem_1a3c244af591bf82d81c2bcbc05d614f7c" kindref="member">InternalConstFieldOnPatch</ref>,<sp/>Patches...&gt;(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMultipatchFieldMem_1a2133a1adff7511566108aa2c8a38d7f5" kindref="member">::get_const_field</ref>(std::get&lt;<ref refid="structT" kindref="compound">T&lt;Patches&gt;</ref>&gt;(<ref refid="classMultipatchType_1ae7480fdbb95f4018d1cd39f809001c14" kindref="member">base_type::m_tuple</ref>))...);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="classMultipatchFieldMem_1adc226c7e5d20ea6fa028f1054de505e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1adc226c7e5d20ea6fa028f1054de505e4" kindref="member">span_cview</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="195"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMultipatchFieldMem_1a2133a1adff7511566108aa2c8a38d7f5" kindref="member">get_const_field</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structT" kindref="compound">T</ref>,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Patches&gt;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_multipatch_type&lt;<ref refid="classMultipatchFieldMem" kindref="compound">MultipatchFieldMem</ref>&lt;<ref refid="structT" kindref="compound">T</ref>,<sp/>Patches...&gt;&gt;<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structT" kindref="compound">T</ref>,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Patches&gt;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_multipatch_field_mem&lt;<ref refid="classMultipatchFieldMem" kindref="compound">MultipatchFieldMem</ref>&lt;<ref refid="structT" kindref="compound">T</ref>,<sp/>Patches...&gt;&gt;<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structT" kindref="compound">T</ref>,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Patches&gt;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_mem_type&lt;<ref refid="classMultipatchFieldMem" kindref="compound">MultipatchFieldMem</ref>&lt;<ref refid="structT" kindref="compound">T</ref>,<sp/>Patches...&gt;&gt;<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structT" kindref="compound">T</ref>,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Patches&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_data_access_methods&lt;<ref refid="classMultipatchFieldMem" kindref="compound">MultipatchFieldMem</ref>&lt;<ref refid="structT" kindref="compound">T</ref>,<sp/>Patches...&gt;&gt;<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/data_types/multipatch_field_mem.hpp"/>
  </compounddef>
</doxygen>
