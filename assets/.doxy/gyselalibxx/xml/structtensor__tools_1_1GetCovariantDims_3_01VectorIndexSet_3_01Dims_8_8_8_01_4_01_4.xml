<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structtensor__tools_1_1GetCovariantDims_3_01VectorIndexSet_3_01Dims_8_8_8_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>tensor_tools::GetCovariantDims&lt; VectorIndexSet&lt; Dims... &gt; &gt;</compoundname>
    <includes refid="vector__index__tools_8hpp" local="no">vector_index_tools.hpp</includes>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Dims</declname>
        <defname>Dims</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structtensor__tools_1_1GetCovariantDims_3_01VectorIndexSet_3_01Dims_8_8_8_01_4_01_4_1a89a3538c925e6d8f64b4be8a7304d0bc" prot="public" static="no">
        <type>VectorIndexSet&lt; std::conditional_t&lt; Dims::IS_COVARIANT, Dims, typename Dims::Dual &gt;... &gt;</type>
        <definition>using tensor_tools::GetCovariantDims&lt; VectorIndexSet&lt; Dims... &gt; &gt;::type =  VectorIndexSet&lt;std::conditional_t&lt;Dims::IS_COVARIANT, Dims, typename Dims::Dual&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>tensor_tools::GetCovariantDims&lt; VectorIndexSet&lt; Dims... &gt; &gt;::type</qualifiedname>
        <briefdescription>
<para>The type of the VectorIndexSet containing only covariant dimensions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_index_tools.hpp" line="52" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_index_tools.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class to get a VectorIndexSet containing only covariant dimensions. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>AnyVectorIndexSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The original VectorIndexSet. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_index_tools.hpp" line="49" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/vector_index_tools.hpp" bodystart="50" bodyend="54"/>
    <listofallmembers>
      <member refid="structtensor__tools_1_1GetCovariantDims_3_01VectorIndexSet_3_01Dims_8_8_8_01_4_01_4_1a89a3538c925e6d8f64b4be8a7304d0bc" prot="public" virt="non-virtual"><scope>tensor_tools::GetCovariantDims&lt; VectorIndexSet&lt; Dims... &gt; &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
