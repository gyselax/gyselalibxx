<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classIInterpolator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>IInterpolator</compoundname>
    <includes refid="iinterpolator_8hpp" local="no">iinterpolator.hpp</includes>
    <templateparamlist>
      <param>
        <type>class GridInterp</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Grid1D</declname>
        <defname>Grid1D</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classIInterpolator_1add959ac890d1a041cc399eb9a694e8f3" prot="public" static="no">
        <type>ddc::Deriv&lt; typename GridInterp::continuous_dimension_type &gt;</type>
        <definition>using IInterpolator&lt; GridInterp, Grid1D &gt;::deriv_type =  ddc::Deriv&lt;typename GridInterp::continuous_dimension_type&gt;</definition>
        <argsstring></argsstring>
        <name>deriv_type</name>
        <qualifiedname>IInterpolator::deriv_type</qualifiedname>
        <briefdescription>
<para>The type of the dimension representing derivatives. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" line="58" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" prot="public" static="no">
        <type>ddc::replace_dim_of_t&lt; IdxRange&lt; Grid1D... &gt;, GridInterp, <ref refid="classIInterpolator_1add959ac890d1a041cc399eb9a694e8f3" kindref="member">deriv_type</ref> &gt;</type>
        <definition>using IInterpolator&lt; GridInterp, Grid1D &gt;::batched_derivs_idx_range_type =  ddc::replace_dim_of_t&lt;IdxRange&lt;Grid1D...&gt;, GridInterp, deriv_type&gt;</definition>
        <argsstring></argsstring>
        <name>batched_derivs_idx_range_type</name>
        <qualifiedname>IInterpolator::batched_derivs_idx_range_type</qualifiedname>
        <briefdescription>
<para>The type of the whole index range on which derivatives are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" line="60" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classIInterpolator_1a8cd2160d82f63450c0278568408fc892" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual IInterpolator&lt; GridInterp, Grid1D &gt;::~IInterpolator</definition>
        <argsstring>()=default</argsstring>
        <name>~IInterpolator</name>
        <qualifiedname>IInterpolator::~IInterpolator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" line="55" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classIInterpolator_1af664c9db9a794fb1f199ff31f8673bf8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" kindref="member">batched_derivs_idx_range_type</ref></type>
        <definition>virtual batched_derivs_idx_range_type IInterpolator&lt; GridInterp, Grid1D &gt;::batched_derivs_idx_range_xmin</definition>
        <argsstring>(IdxRange&lt; Grid1D... &gt; idx_range) const =0</argsstring>
        <name>batched_derivs_idx_range_xmin</name>
        <qualifiedname>IInterpolator::batched_derivs_idx_range_xmin</qualifiedname>
        <reimplementedby refid="classIPreallocatableInterpolator_1a737773f79bd66f394f19a6b7d8045b52">batched_derivs_idx_range_xmin</reimplementedby>
        <reimplementedby refid="classIPreallocatableInterpolator_1a737773f79bd66f394f19a6b7d8045b52">batched_derivs_idx_range_xmin</reimplementedby>
        <reimplementedby refid="classLagrangeInterpolator_1a08d2746b1cf2f70e18478141b3bc5ca9">batched_derivs_idx_range_xmin</reimplementedby>
        <reimplementedby refid="classLagrangeInterpolator_1a08d2746b1cf2f70e18478141b3bc5ca9">batched_derivs_idx_range_xmin</reimplementedby>
        <reimplementedby refid="classSplineInterpolator_1a9cfc0e637f271993f61b0270d12e5703">batched_derivs_idx_range_xmin</reimplementedby>
        <param>
          <type>IdxRange&lt; Grid1D... &gt;</type>
          <declname>idx_range</declname>
        </param>
        <briefdescription>
<para>Get the batched derivs index range on lower boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para>Dimension of interest IDimI is replaced with ddc::Deriv&lt;IDimI::continuous_dimensions_type&gt;. This is the index range on which derivatives on lower boundaries are defined.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range of a single-species distribution function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>idx_range The lower boundaries of this index range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" line="72" column="43"/>
      </memberdef>
      <memberdef kind="function" id="classIInterpolator_1a14f07a9a9cd43939de6acd999d25c195" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" kindref="member">batched_derivs_idx_range_type</ref></type>
        <definition>virtual batched_derivs_idx_range_type IInterpolator&lt; GridInterp, Grid1D &gt;::batched_derivs_idx_range_xmax</definition>
        <argsstring>(IdxRange&lt; Grid1D... &gt; idx_range) const =0</argsstring>
        <name>batched_derivs_idx_range_xmax</name>
        <qualifiedname>IInterpolator::batched_derivs_idx_range_xmax</qualifiedname>
        <reimplementedby refid="classIPreallocatableInterpolator_1aa5f6e697f47d2e64a7e079a7e0ac9745">batched_derivs_idx_range_xmax</reimplementedby>
        <reimplementedby refid="classIPreallocatableInterpolator_1aa5f6e697f47d2e64a7e079a7e0ac9745">batched_derivs_idx_range_xmax</reimplementedby>
        <reimplementedby refid="classLagrangeInterpolator_1a9a6515bea1958ced63980a0ecee4c707">batched_derivs_idx_range_xmax</reimplementedby>
        <reimplementedby refid="classLagrangeInterpolator_1a9a6515bea1958ced63980a0ecee4c707">batched_derivs_idx_range_xmax</reimplementedby>
        <reimplementedby refid="classSplineInterpolator_1ab7b38622e403a5a5dc9e09d737a9dfe8">batched_derivs_idx_range_xmax</reimplementedby>
        <param>
          <type>IdxRange&lt; Grid1D... &gt;</type>
          <declname>idx_range</declname>
        </param>
        <briefdescription>
<para>Get the batched derivs index range on upper boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para>Dimension of interest IDimI is replaced with ddc::Deriv&lt;IDimI::continuous_dimensions_type&gt;. This is the index range on which derivatives on upper boundaries are defined.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range of a single-species distribution function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>idx_range The upper boundaries of this index range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" line="84" column="43"/>
      </memberdef>
      <memberdef kind="function" id="classIInterpolator_1a83d8113fe207f0d87a240f6ae3f99498" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>Field&lt; double, IdxRange&lt; Grid1D... &gt; &gt;</type>
        <definition>virtual Field&lt; double, IdxRange&lt; Grid1D... &gt; &gt; IInterpolator&lt; GridInterp, Grid1D &gt;::operator()</definition>
        <argsstring>(Field&lt; double, IdxRange&lt; Grid1D... &gt; &gt; inout_data, Field&lt; const Coord&lt; typename GridInterp::continuous_dimension_type &gt;, IdxRange&lt; Grid1D... &gt; &gt; coordinates, std::optional&lt; Field&lt; double const, batched_derivs_idx_range_type &gt; &gt; derivs_xmin=std::nullopt, std::optional&lt; Field&lt; double const, batched_derivs_idx_range_type &gt; &gt; derivs_xmax=std::nullopt) const =0</argsstring>
        <name>operator()</name>
        <qualifiedname>IInterpolator::operator()</qualifiedname>
        <param>
          <type>Field&lt; double, IdxRange&lt; Grid1D... &gt; &gt;</type>
          <declname>inout_data</declname>
        </param>
        <param>
          <type>Field&lt; const Coord&lt; typename GridInterp::continuous_dimension_type &gt;, IdxRange&lt; Grid1D... &gt; &gt;</type>
          <declname>coordinates</declname>
        </param>
        <param>
          <type>std::optional&lt; Field&lt; double const, <ref refid="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" kindref="member">batched_derivs_idx_range_type</ref> &gt; &gt;</type>
          <declname>derivs_xmin</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; Field&lt; double const, <ref refid="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" kindref="member">batched_derivs_idx_range_type</ref> &gt; &gt;</type>
          <declname>derivs_xmax</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Approximate the value of a function at a set of coordinates using the current values at a known set of interpolation points. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">inout_data</parametername>
</parameternamelist>
<parameterdescription>
<para>On input: an array containing the value of the function at the interpolation points. On output: an array containing the value of the function at the coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates where the function should be evaluated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">derivs_xmin</parametername>
</parameternamelist>
<parameterdescription>
<para>The values of the derivatives at the lower boundary (used only with splines and ddc::BoundCond::HERMITE lower boundary condition). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">derivs_xmax</parametername>
</parameternamelist>
<parameterdescription>
<para>The values of the derivatives at the upper boundary (used only with splines and ddc::BoundCond::HERMITE upper boundary condition).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the inout_data array containing the value of the function at the coordinates. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" line="101" column="19"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class which provides an interpolating function. </para>
    </briefdescription>
    <detaileddescription>
<para>An abstract class which implements a function allowing the value of a function to be approximated at a set of coordinates from a set of known values of the function. </para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" line="52" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/iinterpolator.hpp" bodystart="53" bodyend="109"/>
    <listofallmembers>
      <member refid="classIInterpolator_1a34da0d56a4983e66979c56014fd5436c" prot="public" virt="non-virtual"><scope>IInterpolator</scope><name>batched_derivs_idx_range_type</name></member>
      <member refid="classIInterpolator_1a14f07a9a9cd43939de6acd999d25c195" prot="public" virt="pure-virtual"><scope>IInterpolator</scope><name>batched_derivs_idx_range_xmax</name></member>
      <member refid="classIInterpolator_1af664c9db9a794fb1f199ff31f8673bf8" prot="public" virt="pure-virtual"><scope>IInterpolator</scope><name>batched_derivs_idx_range_xmin</name></member>
      <member refid="classIInterpolator_1add959ac890d1a041cc399eb9a694e8f3" prot="public" virt="non-virtual"><scope>IInterpolator</scope><name>deriv_type</name></member>
      <member refid="classIInterpolator_1a83d8113fe207f0d87a240f6ae3f99498" prot="public" virt="pure-virtual"><scope>IInterpolator</scope><name>operator()</name></member>
      <member refid="classIInterpolator_1a8cd2160d82f63450c0278568408fc892" prot="public" virt="virtual"><scope>IInterpolator</scope><name>~IInterpolator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
