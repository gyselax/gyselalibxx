<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4" kind="class" language="C++" prot="public">
    <compoundname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</compoundname>
    <includes refid="derivative__field__common_8hpp" local="no">derivative_field_common.hpp</includes>
    <templateparamlist>
      <param>
        <type>class FieldType</type>
      </param>
      <param>
        <type>class...</type>
        <declname>DDims</declname>
        <defname>DDims</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a86c5aa636f12980310d65be51203f6da" prot="public" static="no">
        <type>FieldType</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::chunk_type =  FieldType</definition>
        <argsstring></argsstring>
        <name>chunk_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::chunk_type</qualifiedname>
        <briefdescription>
<para>The type of the field stored in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a DDC keyword used to make this class interchangeable with Field. In DDC FieldMem types are referred to as Chunk types and Field types are referred to as ChunkSpan/ChunkView. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="51" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3f69c01c044205740da326ebb3852dd3" prot="public" static="no">
        <type>detail::deriv_sub_set_t&lt; ddc::detail::TypeSeq&lt; DDims... &gt; &gt;</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::deriv_tags =  detail::deriv_sub_set_t&lt;ddc::detail::TypeSeq&lt;DDims...&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>deriv_tags</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::deriv_tags</qualifiedname>
        <briefdescription>
<para>A type sequence containing all derivatives present in this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="54" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a7cb4b4b69a7618fa9960a107c878c5dc" prot="public" static="no">
        <type>typename detail::strip_deriv_t&lt; <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3f69c01c044205740da326ebb3852dd3" kindref="member">deriv_tags</ref> &gt;</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::physical_deriv_grids =  typename detail::strip_deriv_t&lt;deriv_tags&gt;</definition>
        <argsstring></argsstring>
        <name>physical_deriv_grids</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::physical_deriv_grids</qualifiedname>
        <briefdescription>
<para>A type sequence containing all physical dimensions for which derivatives are present in this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="57" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a1177e63f003770d42e797af98f8f93fa" prot="public" static="no">
        <type>ddc::type_seq_remove_t&lt; ddc::detail::TypeSeq&lt; DDims... &gt;, <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3f69c01c044205740da326ebb3852dd3" kindref="member">deriv_tags</ref> &gt;</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::physical_grids =  ddc::type_seq_remove_t&lt;ddc::detail::TypeSeq&lt;DDims...&gt;, deriv_tags&gt;</definition>
        <argsstring></argsstring>
        <name>physical_grids</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::physical_grids</qualifiedname>
        <briefdescription>
<para>A type sequence containing all the physical dimensions on which the fields are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="60" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a8df83185147fa5fdbcf1d54fbbb734a2" prot="public" static="no">
        <type>typename chunk_type::element_type</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::element_type =  typename chunk_type::element_type</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::element_type</qualifiedname>
        <briefdescription>
<para>The type of the elements in the fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="63" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3b1cd9e7c125ec8fa0f7509e4269b55d" prot="public" static="no">
        <type>IdxRange&lt; DDims... &gt;</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_domain_type =  IdxRange&lt;DDims...&gt;</definition>
        <argsstring></argsstring>
        <name>discrete_domain_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_domain_type</qualifiedname>
        <briefdescription>
<para>The IdxRange on which the fields in this object are defined. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a DDC keyword used to make this class interchangeable with Field. In DDC IdxRange types are referred to as DiscreteDomain types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="71" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a9c9e1edb698734a3cc18c65c16f8cf2e" prot="public" static="no">
        <type><ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3b1cd9e7c125ec8fa0f7509e4269b55d" kindref="member">discrete_domain_type</ref></type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::index_range_type =  discrete_domain_type</definition>
        <argsstring></argsstring>
        <name>index_range_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::index_range_type</qualifiedname>
        <briefdescription>
<para>The IdxRange on which the fields in this object are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="73" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a8536f9be8c43d695b9424648f8dbdf8f" prot="public" static="no">
        <type>Idx&lt; DDims... &gt;</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_element_type =  Idx&lt;DDims...&gt;</definition>
        <argsstring></argsstring>
        <name>discrete_element_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_element_type</qualifiedname>
        <briefdescription>
<para>The Idx which can be used to index this object. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a DDC keyword used to make this class interchangeable with Field. In DDC Idx types are referred to as DiscreteElement types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="81" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a5f7df456b19ca5dbdc9ffcdb4c13a1de" prot="public" static="no">
        <type><ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a8536f9be8c43d695b9424648f8dbdf8f" kindref="member">discrete_element_type</ref></type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::index_type =  discrete_element_type</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::index_type</qualifiedname>
        <briefdescription>
<para>The Idx which can be used to index this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="83" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4be3e064e85e11603bf67daaebf70dc6" prot="protected" static="no">
        <type>Kokkos::mdspan&lt; <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a8df83185147fa5fdbcf1d54fbbb734a2" kindref="member">element_type</ref>, Kokkos::dextents&lt; std::size_t, sizeof...(DDims)&gt;, Kokkos::layout_stride &gt;</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::internal_mdspan_type =  Kokkos::mdspan&lt; element_type, Kokkos::dextents&lt;std::size_t, sizeof...(DDims)&gt;, Kokkos::layout_stride&gt;</definition>
        <argsstring></argsstring>
        <name>internal_mdspan_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::internal_mdspan_type</qualifiedname>
        <briefdescription>
<para>The type of the memory block stored in the array internal_fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="87" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a54599ac7aa42fc2a124115661a0c676b" prot="protected" static="no">
        <type>Kokkos::mdspan&lt; const <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a8df83185147fa5fdbcf1d54fbbb734a2" kindref="member">element_type</ref>, Kokkos::dextents&lt; std::size_t, sizeof...(DDims)&gt;, Kokkos::layout_stride &gt;</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::internal_mdview_type =  Kokkos::mdspan&lt; const element_type, Kokkos::dextents&lt;std::size_t, sizeof...(DDims)&gt;, Kokkos::layout_stride&gt;</definition>
        <argsstring></argsstring>
        <name>internal_mdview_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::internal_mdview_type</qualifiedname>
        <briefdescription>
<para>The type of a constant view on the memory block stored in the array internal_fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="93" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a96c4ee1194ac3a134ce64483a7fd320c" prot="protected" static="no">
        <type>typename FieldType::span_type</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::chunk_span =  typename FieldType::span_type</definition>
        <argsstring></argsstring>
        <name>chunk_span</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::chunk_span</qualifiedname>
        <briefdescription>
<para>The type of a modifiable span of this field. This is a DDC keyword used to make this class interchangeable with Field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="99" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3342d6bb1e7724341cc9f99e281696b9" prot="protected" static="no">
        <type>typename FieldType::view_type</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::chunk_view =  typename FieldType::view_type</definition>
        <argsstring></argsstring>
        <name>chunk_view</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::chunk_view</qualifiedname>
        <briefdescription>
<para>The type of a constant view of this field. This is a DDC keyword used to make this class interchangeable with Field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="102" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1aca4a338637be7689df60b1aece751b5a" prot="protected" static="no">
        <type>typename ddc::detail::convert_type_seq_to_discrete_domain_t&lt; <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a1177e63f003770d42e797af98f8f93fa" kindref="member">physical_grids</ref> &gt;</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::physical_idx_range_type =  typename ddc::detail::convert_type_seq_to_discrete_domain_t&lt;physical_grids&gt;</definition>
        <argsstring></argsstring>
        <name>physical_idx_range_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::physical_idx_range_type</qualifiedname>
        <briefdescription>
<para>The index range for the field excluding derivatives. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="105" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a96d401ccb0d4a36c0e8ad18d0dce9a16" prot="protected" static="no">
        <type>typename physical_idx_range_type::discrete_element_type</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::physical_index_type =  typename physical_idx_range_type::discrete_element_type</definition>
        <argsstring></argsstring>
        <name>physical_index_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::physical_index_type</qualifiedname>
        <briefdescription>
<para>The Idx which describes the physical position where values are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="109" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4973c6a60c04cea4d585e6f76f505cf1" prot="protected" static="no">
        <type>typename ddc::detail::convert_type_seq_to_discrete_domain_t&lt; <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3f69c01c044205740da326ebb3852dd3" kindref="member">deriv_tags</ref> &gt;</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_deriv_idx_range_type =  typename ddc::detail::convert_type_seq_to_discrete_domain_t&lt;deriv_tags&gt;</definition>
        <argsstring></argsstring>
        <name>discrete_deriv_idx_range_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_deriv_idx_range_type</qualifiedname>
        <briefdescription>
<para>The IdxRange which describes the derivatives present on each field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="112" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ab28d6a9e3667ef39ff01303c02d1607b" prot="protected" static="no">
        <type>typename discrete_deriv_idx_range_type::discrete_element_type</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_deriv_index_type =  typename discrete_deriv_idx_range_type::discrete_element_type</definition>
        <argsstring></argsstring>
        <name>discrete_deriv_index_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_deriv_index_type</qualifiedname>
        <briefdescription>
<para>The Idx which describes the order of the derivatives in each dimension. (e.g. second-order derivative). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="118" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a671ef71b421079cc03d6fa31a615fa71" prot="protected" static="no">
        <type>typename discrete_deriv_idx_range_type::discrete_vector_type</type>
        <definition>using DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_deriv_vector_type =  typename discrete_deriv_idx_range_type::discrete_vector_type</definition>
        <argsstring></argsstring>
        <name>discrete_deriv_vector_type</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::discrete_deriv_vector_type</qualifiedname>
        <briefdescription>
<para>The Idx which describes the order of the derivatives in each dimension. (e.g. second-order derivative). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="123" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1abdb00d99665d2aa999c71e9b3fd2df5e" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::n_fields</definition>
        <argsstring></argsstring>
        <name>n_fields</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::n_fields</qualifiedname>
        <initializer>= 1 &lt;&lt; ddc::type_seq_size_v&lt;<ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3f69c01c044205740da326ebb3852dd3" kindref="member">deriv_tags</ref>&gt;</initializer>
        <briefdescription>
<para>The number of fields which must be created to describe this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="126" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4e814f214a102fbe3f100b8bd4e9e583" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>int</type>
          </param>
          <param>
            <type>class</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class DerivFieldMem</definition>
        <argsstring></argsstring>
        <name>DerivFieldMem</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::DerivFieldMem</qualifiedname>
        <param>
          <type><ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="129" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ab44eabd629c8780fcc2a0e67e9650691" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class DerivField</definition>
        <argsstring></argsstring>
        <name>DerivField</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::DerivField</qualifiedname>
        <param>
          <type><ref refid="classDerivField" kindref="compound">DerivField</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="132" column="18" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a31fae5a5f7a6d504fcca1299b6b9eedd" prot="protected" static="no" mutable="no">
        <type>std::array&lt; <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4be3e064e85e11603bf67daaebf70dc6" kindref="member">internal_mdspan_type</ref>, <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1abdb00d99665d2aa999c71e9b3fd2df5e" kindref="member">n_fields</ref> &gt;</type>
        <definition>std::array&lt;internal_mdspan_type, n_fields&gt; DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::internal_fields</definition>
        <argsstring></argsstring>
        <name>internal_fields</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::internal_fields</qualifiedname>
        <briefdescription>
<para>The internal fields describing the values and derivatives. </para>
        </briefdescription>
        <detaileddescription>
<para>The fields which contain the values have different index ranges to the fields containing derivatives so a DDC object cannot be used directly. E.g. for a 2D field (<ref refid="structX" kindref="compound">X</ref>,<ref refid="structY" kindref="compound">Y</ref>) with derivatives provided in both directions the elements of internal_fields have the type : DFieldMem&lt;IdxRange&lt;Deriv&lt;IDimX&gt;, Deriv&lt;IDimY&gt;, IDimX, IDimY&gt; The derivative index ranges are then defined such that the elements of internal_fields represent: 0 : <formula id="162">$f(x,y)$</formula> 1 : <formula id="163">$\partial_x^k f(x,y)  \quad \forall 1 \leq k \leq NDerivs$</formula> 2 : <formula id="164">$\partial_y^k f(x,y)  \quad \forall 1 \leq k \leq NDerivs$</formula> 3 : <formula id="165">$\partial_x^j \partial_y^k f(x,y)  \quad \forall 1 \leq j \leq NDerivs,  \forall 1 \leq k \leq NDerivs$</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="147" column="16" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a7ec2324db04ca9d7820072ce06b6d23d" prot="protected" static="no" mutable="no">
        <type><ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1aca4a338637be7689df60b1aece751b5a" kindref="member">physical_idx_range_type</ref></type>
        <definition>physical_idx_range_type DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::m_physical_idx_range</definition>
        <argsstring></argsstring>
        <name>m_physical_idx_range</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::m_physical_idx_range</qualifiedname>
        <briefdescription>
<para>The physical index range on which the values are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="150" column="29" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a6116f365fe51e5a8f6c5915195c2ce1a" prot="protected" static="no" mutable="no">
        <type><ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4973c6a60c04cea4d585e6f76f505cf1" kindref="member">discrete_deriv_idx_range_type</ref></type>
        <definition>discrete_deriv_idx_range_type DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::m_deriv_idx_range</definition>
        <argsstring></argsstring>
        <name>m_deriv_idx_range</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::m_deriv_idx_range</qualifiedname>
        <briefdescription>
<para>The index range of available derivatives. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="153" column="35" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4a048b0b6feed6a33b0c7a78257438d4" prot="protected" static="no" mutable="no">
        <type>to_subidx_range_collection&lt; <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a7cb4b4b69a7618fa9960a107c878c5dc" kindref="member">physical_deriv_grids</ref> &gt;</type>
        <definition>to_subidx_range_collection&lt;physical_deriv_grids&gt; DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::m_cross_derivative_idx_range</definition>
        <argsstring></argsstring>
        <name>m_cross_derivative_idx_range</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::m_cross_derivative_idx_range</qualifiedname>
        <briefdescription>
<para>The physical index ranges on which the derivatives are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="156" column="32" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a1544c678e280360ddde4876dbd957b9f" prot="protected" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class QueryDim</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION std::size_t</type>
        <definition>KOKKOS_FUNCTION std::size_t DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_index</definition>
        <argsstring>(Idx&lt; QueryDim &gt; elem) const noexcept</argsstring>
        <name>get_index</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_index</qualifiedname>
        <param>
          <type>Idx&lt; QueryDim &gt;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Get the index of the Idx within m_cross_derivative_idx_range. This function is particularly useful to index an mdspan over an index range slice. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D Idx which is inside the index range slice.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index of the element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="168" column="33" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a58c249fa7954db05b6d6bedbdab15823" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Tag</declname>
            <defname>Tag</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION int</type>
        <definition>KOKKOS_FUNCTION int DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_array_index</definition>
        <argsstring>(Idx&lt; Tag... &gt; idx) const</argsstring>
        <name>get_array_index</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_array_index</qualifiedname>
        <param>
          <type>Idx&lt; Tag... &gt;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>An internal function which provides the index of a field inside the internal_fields array. An Idx describes the derivatives of interest. n-th order derivatives are stored in the same field for all n!=0 so it is sufficient to provide any valid element from the derivatives. </para>
        </briefdescription>
        <detaileddescription>
<para>The index is calculated using a bit mask. Mathematically the equation which determines the index in <computeroutput>internal_fields</computeroutput> is: <formula id="166">$ \sum_{\xi} 2^{i_\xi} \delta_{\text{using derivs in }\xi} $</formula> where <formula id="167">$i_\xi$</formula> is the index of the dimension <formula id="168">$\xi$</formula> in the tags.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The derivatives of interest.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int The index of the internal field inside the array internal_fields. </para>
</simplesect>
<simplesect kind="return"><para>discrete_deriv_idx_range_type The index range of the derivatives at the field at the index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="192" column="25" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a868ed39fa484e90af6985b22c78df50c" prot="protected" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class QueryDDim</type>
          </param>
          <param>
            <type>class...</type>
            <declname>ODDims</declname>
            <defname>ODDims</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr auto</type>
        <definition>KOKKOS_FUNCTION constexpr auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_slicer_for</definition>
        <argsstring>(Idx&lt; ODDims... &gt; const &amp;slice_idx, int array_idx) const</argsstring>
        <name>get_slicer_for</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_slicer_for</qualifiedname>
        <param>
          <type>Idx&lt; ODDims... &gt; const &amp;</type>
          <declname>slice_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>array_idx</declname>
        </param>
        <briefdescription>
<para>Get an object which can be used to slice an mdspan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The DDC element which should be used to slice the field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the mdspan in internal_fields that will be sliced.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QueryDDim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension along which we want to slice.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An index or a slice which can be used to slice an mdspan. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="211" column="36" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="211" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a87810847a0ebdc91930bdb5d861396c9" prot="protected" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class QueryDDim</type>
          </param>
          <param>
            <type>class...</type>
            <declname>ODDims</declname>
            <defname>ODDims</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr auto</type>
        <definition>KOKKOS_FUNCTION constexpr auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_slicer_for</definition>
        <argsstring>(IdxRange&lt; ODDims... &gt; const &amp;slice_idx_range, int array_idx) const</argsstring>
        <name>get_slicer_for</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_slicer_for</qualifiedname>
        <param>
          <type>IdxRange&lt; ODDims... &gt; const &amp;</type>
          <declname>slice_idx_range</declname>
        </param>
        <param>
          <type>int</type>
          <declname>array_idx</declname>
        </param>
        <briefdescription>
<para>Get an object which can be used to slice an mdspan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice_idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The DDC index range which should be used to slice the field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the mdspan in internal_fields that will be sliced.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QueryDDim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension along which the we want to slice.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A slice (often in the form of a (start, end) pair) which can be used to slice an mdspan. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="256" column="36" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="256" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ab37c3af17859ce88bd4842eb614c75ce" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ODims</declname>
            <defname>ODims</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION auto</type>
        <definition>KOKKOS_FUNCTION auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_internal_field</definition>
        <argsstring>(IdxRange&lt; ODims... &gt; idx_range) const</argsstring>
        <name>get_internal_field</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_internal_field</qualifiedname>
        <param>
          <type>IdxRange&lt; ODims... &gt;</type>
          <declname>idx_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a Field from a subset of one of the mdspans in internal_fields. The provided IdxRange is used to slice the mdspan in such a way that the resulting mdspan can be saved in a Field. This means that all information about derivatives must be provided. If information about a derivative is missing then it is assumed that the 0-th order derivative is requested.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range used to slice the mdspan.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Field The subset of the internal mdspan. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="317" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="317" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ac7bdb7d57cf9d0ba344724a0a9797457" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ODims</declname>
            <defname>ODims</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION auto</type>
        <definition>KOKKOS_FUNCTION auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_internal_field</definition>
        <argsstring>(Idx&lt; ODims... &gt; elem) const</argsstring>
        <name>get_internal_field</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_internal_field</qualifiedname>
        <param>
          <type>Idx&lt; ODims... &gt;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a Field from a subset of one of the mdspans in internal_fields. The provided Idx is used to slice the mdspan in such a way that the resulting mdspan can be saved in a Field. This means that all information about derivatives must be provided. If information about a derivative is missing then it is assumed that the 0-th order derivative is requested.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>The element used to slice the mdspan.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Field The subset of the internal mdspan. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="375" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="375" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ad087ff1dba182ec21ce44b6b80b8fd5f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::DerivFieldCommon</definition>
        <argsstring>(physical_idx_range_type physical_idx_range, discrete_deriv_idx_range_type deriv_idx_range, to_subidx_range_collection&lt; physical_deriv_grids &gt; cross_derivative_idx_range)</argsstring>
        <name>DerivFieldCommon</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::DerivFieldCommon</qualifiedname>
        <param>
          <type><ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1aca4a338637be7689df60b1aece751b5a" kindref="member">physical_idx_range_type</ref></type>
          <declname>physical_idx_range</declname>
        </param>
        <param>
          <type><ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4973c6a60c04cea4d585e6f76f505cf1" kindref="member">discrete_deriv_idx_range_type</ref></type>
          <declname>deriv_idx_range</declname>
        </param>
        <param>
          <type>to_subidx_range_collection&lt; <ref refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a7cb4b4b69a7618fa9960a107c878c5dc" kindref="member">physical_deriv_grids</ref> &gt;</type>
          <declname>cross_derivative_idx_range</declname>
        </param>
        <briefdescription>
<para>Protected constructor to be used by subclasses to initialise index ranges. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>physical_idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range on which the values of the function are defined. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deriv_idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range of the provided derivatives. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cross_derivative_idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The cross product of the index ranges on which the derivatives of the function are defined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="440" column="21" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="440" bodyend="448"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3094a24cf98615b32b93e382c7a0fb74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::~DerivFieldCommon</definition>
        <argsstring>()=default</argsstring>
        <name>~DerivFieldCommon</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::~DerivFieldCommon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="451" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ade0c91573c30506686f3f05b4d7c6c11" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>QueryDDims</declname>
            <defname>QueryDDims</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::operator[]</definition>
        <argsstring>(Idx&lt; QueryDDims... &gt; const &amp;slice_spec) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::operator[]</qualifiedname>
        <param>
          <type>Idx&lt; QueryDDims... &gt; const &amp;</type>
          <declname>slice_spec</declname>
        </param>
        <briefdescription>
<para>Get a ConstField describing a subset of the data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>A discrete element describing the position at which these dimensions should be indexed. If information about the derivatives is missing then it is assumed that the 0-th order derivative is requested.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ConstField A subset of the data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="463" column="20" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="463" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1af1cdd143c10d63a9a47a36a7b9e7fd81" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>QueryDDims</declname>
            <defname>QueryDDims</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::operator[]</definition>
        <argsstring>(Idx&lt; QueryDDims... &gt; const &amp;slice_spec)</argsstring>
        <name>operator[]</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::operator[]</qualifiedname>
        <param>
          <type>Idx&lt; QueryDDims... &gt; const &amp;</type>
          <declname>slice_spec</declname>
        </param>
        <briefdescription>
<para>Get a Field describing a subset of the data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>A discrete element describing the position at which these dimensions should be indexed. If information about the derivatives is missing then it is assumed that the 0-th order derivative is requested.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Field A subset of the data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="478" column="20" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="478" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a10dd8bcc177efc11479e4c80b8a64535" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>QueryDDims</declname>
            <defname>QueryDDims</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr auto</type>
        <definition>KOKKOS_FUNCTION constexpr auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::operator[]</definition>
        <argsstring>(IdxRange&lt; QueryDDims... &gt; const &amp;oidx_range)</argsstring>
        <name>operator[]</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::operator[]</qualifiedname>
        <param>
          <type>IdxRange&lt; QueryDDims... &gt; const &amp;</type>
          <declname>oidx_range</declname>
        </param>
        <briefdescription>
<para>Get a Field describing a subset of the data. This function allows a slice to be obtained however it is designed to return a Field. It is therefore not possible to request data from multiple fields (e.g. derivatives from 0 to 3). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oidx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>A discrete index range describing the position at which these dimensions should be indexed. If information about the derivatives is missing then it is assumed that the 0-th order derivative is requested.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Field A subset of the data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="495" column="36" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="495" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ac284686e3f7b50d490bd642e9e657b43" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>QueryDDims</declname>
            <defname>QueryDDims</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr auto</type>
        <definition>KOKKOS_FUNCTION constexpr auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::operator[]</definition>
        <argsstring>(IdxRange&lt; QueryDDims... &gt; const &amp;oidx_range) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::operator[]</qualifiedname>
        <param>
          <type>IdxRange&lt; QueryDDims... &gt; const &amp;</type>
          <declname>oidx_range</declname>
        </param>
        <briefdescription>
<para>Get a ConstField describing a subset of the data. This function allows a slice to be obtained however it is designed to return a ConstField. It is therefore not possible to request data from multiple fields (e.g. derivatives from 0 to 3). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oidx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>A discrete index range describing the position at which these dimensions should be indexed. If information about the derivatives is missing then it is assumed that the 0-th order derivative is requested.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ConstField A subset of the data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="512" column="36" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="512" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1afb79eb00f2eb1a1b757d190663c085d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ODims</declname>
            <defname>ODims</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_mdspan</definition>
        <argsstring>(IdxRange&lt; ODims... &gt; provided_deriv_idx_range)</argsstring>
        <name>get_mdspan</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_mdspan</qualifiedname>
        <param>
          <type>IdxRange&lt; ODims... &gt;</type>
          <declname>provided_deriv_idx_range</declname>
        </param>
        <briefdescription>
<para>Get one of the mdspans from the internal array internal_fields. This function takes index ranges on the derivative directions. Where derivatives are missing it is assumed that the 0-th order derivative is requested. This dimension is stripped from the resulting field. This is the recommended way to access the internal fields. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>provided_deriv_idx_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The derivative index range which should be retained.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Field The field on the physical index range and the requested index ranges. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="529" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="529" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3515c17c41fab7daaf8842344473acb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_mdspan</definition>
        <argsstring>()</argsstring>
        <name>get_mdspan</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_mdspan</qualifiedname>
        <briefdescription>
<para>Get the mdspan holding the values of the function from the internal array internal_fields. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Field The field on the physical index range and the requested index ranges. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="561" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="561" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1adffb6410e57ef9d4d3fd8801cbe73a30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_values_field</definition>
        <argsstring>()</argsstring>
        <name>get_values_field</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_values_field</qualifiedname>
        <briefdescription>
<para>Get the Field which holds the values of the function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is equivalent to calling operator[] with a 0D IdxRange.</para>
<para><simplesect kind="return"><para>Field The field on the physical index range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="574" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="574" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1acf6b5f3e9791535ee527ffe5fe3ce71b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_values_field</definition>
        <argsstring>() const</argsstring>
        <name>get_values_field</name>
        <qualifiedname>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;::get_values_field</qualifiedname>
        <briefdescription>
<para>Get the Field which holds the values of the function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is equivalent to calling operator[] with a 0D IdxRange.</para>
<para><simplesect kind="return"><para>Field The field on the physical index range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="587" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="587" bodyend="591"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>An abstract class which holds a chunk of memory describing a field and its derivatives. This is the superclass for <ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref> and <ref refid="classDerivField" kindref="compound">DerivField</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FieldType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the object stored in the internal_fields array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IdxRange&lt;DDims...&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range on which the internal fields are defined. This index range is the physical index range on which the values are defined combined with the index range of the derivatives of interest (e.g. IdxRange&lt;Deriv&lt;IDimX&gt;, IDimX, IDimY&gt;). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</label>
        <link refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4"/>
        <childnode refid="2" relation="usage">
          <edgelabel>internal_fields</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::array&lt; internal_mdspan_type, n_fields &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" line="41" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field_common.hpp" bodystart="42" bodyend="592"/>
    <listofallmembers>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a96c4ee1194ac3a134ce64483a7fd320c" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>chunk_span</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a86c5aa636f12980310d65be51203f6da" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>chunk_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3342d6bb1e7724341cc9f99e281696b9" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>chunk_view</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3f69c01c044205740da326ebb3852dd3" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>deriv_tags</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ab44eabd629c8780fcc2a0e67e9650691" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>DerivField</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ad087ff1dba182ec21ce44b6b80b8fd5f" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>DerivFieldCommon</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4e814f214a102fbe3f100b8bd4e9e583" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>DerivFieldMem</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4973c6a60c04cea4d585e6f76f505cf1" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>discrete_deriv_idx_range_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ab28d6a9e3667ef39ff01303c02d1607b" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>discrete_deriv_index_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a671ef71b421079cc03d6fa31a615fa71" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>discrete_deriv_vector_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3b1cd9e7c125ec8fa0f7509e4269b55d" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>discrete_domain_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a8536f9be8c43d695b9424648f8dbdf8f" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>discrete_element_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a8df83185147fa5fdbcf1d54fbbb734a2" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>element_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a58c249fa7954db05b6d6bedbdab15823" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_array_index</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a1544c678e280360ddde4876dbd957b9f" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_index</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ab37c3af17859ce88bd4842eb614c75ce" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_internal_field</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ac7bdb7d57cf9d0ba344724a0a9797457" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_internal_field</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1afb79eb00f2eb1a1b757d190663c085d1" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_mdspan</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3515c17c41fab7daaf8842344473acb5" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_mdspan</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a868ed39fa484e90af6985b22c78df50c" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_slicer_for</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a87810847a0ebdc91930bdb5d861396c9" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_slicer_for</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1adffb6410e57ef9d4d3fd8801cbe73a30" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_values_field</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1acf6b5f3e9791535ee527ffe5fe3ce71b" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>get_values_field</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a9c9e1edb698734a3cc18c65c16f8cf2e" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>index_range_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a5f7df456b19ca5dbdc9ffcdb4c13a1de" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>index_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a31fae5a5f7a6d504fcca1299b6b9eedd" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>internal_fields</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4be3e064e85e11603bf67daaebf70dc6" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>internal_mdspan_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a54599ac7aa42fc2a124115661a0c676b" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>internal_mdview_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a4a048b0b6feed6a33b0c7a78257438d4" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>m_cross_derivative_idx_range</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a6116f365fe51e5a8f6c5915195c2ce1a" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>m_deriv_idx_range</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a7ec2324db04ca9d7820072ce06b6d23d" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>m_physical_idx_range</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1abdb00d99665d2aa999c71e9b3fd2df5e" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>n_fields</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ade0c91573c30506686f3f05b4d7c6c11" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>operator[]</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1af1cdd143c10d63a9a47a36a7b9e7fd81" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>operator[]</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a10dd8bcc177efc11479e4c80b8a64535" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>operator[]</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1ac284686e3f7b50d490bd642e9e657b43" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>operator[]</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a7cb4b4b69a7618fa9960a107c878c5dc" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>physical_deriv_grids</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a1177e63f003770d42e797af98f8f93fa" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>physical_grids</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1aca4a338637be7689df60b1aece751b5a" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>physical_idx_range_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a96d401ccb0d4a36c0e8ad18d0dce9a16" prot="protected" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>physical_index_type</name></member>
      <member refid="classDerivFieldCommon_3_01FieldType_00_01IdxRange_3_01DDims_8_8_8_01_4_01_4_1a3094a24cf98615b32b93e382c7a0fb74" prot="public" virt="non-virtual"><scope>DerivFieldCommon&lt; FieldType, IdxRange&lt; DDims... &gt; &gt;</scope><name>~DerivFieldCommon</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
