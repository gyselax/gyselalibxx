<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classMultipatchSplineBuilder" kind="class" language="C++" prot="public">
    <compoundname>MultipatchSplineBuilder</compoundname>
    <includes refid="multipatch__spline__builder_8hpp" local="no">multipatch_spline_builder.hpp</includes>
    <innerclass refid="structMultipatchSplineBuilder_1_1Build__BuilderType" prot="private">MultipatchSplineBuilder::Build_BuilderType</innerclass>
    <templateparamlist>
      <param>
        <type>class ExecSpace</type>
      </param>
      <param>
        <type>class MemorySpace</type>
      </param>
      <param>
        <type>template&lt; typename P &gt; typename</type>
        <declname>BSplineOnPatch</declname>
        <defname>BSplineOnPatch</defname>
      </param>
      <param>
        <type>template&lt; typename P &gt; typename</type>
        <declname>GridOnPatch</declname>
        <defname>GridOnPatch</defname>
      </param>
      <param>
        <type>ddc::BoundCond</type>
        <declname>BcLower</declname>
        <defname>BcLower</defname>
      </param>
      <param>
        <type>ddc::BoundCond</type>
        <declname>BcUpper</declname>
        <defname>BcUpper</defname>
      </param>
      <param>
        <type>ddc::BoundCond</type>
        <declname>BcTransition</declname>
        <defname>BcTransition</defname>
      </param>
      <param>
        <type>class Connectivity</type>
      </param>
      <param>
        <type>ddc::SplineSolver</type>
        <declname>Solver</declname>
        <defname>Solver</defname>
      </param>
      <param>
        <type>template&lt; typename P &gt; typename</type>
        <declname>ValuesOnPatch</declname>
        <defname>ValuesOnPatch</defname>
      </param>
      <param>
        <type>class...</type>
        <declname>Patches</declname>
        <defname>Patches</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classMultipatchSplineBuilder_1acb65941100d3d033aa2ac7ebf5b7caf0" prot="private" static="no">
        <type>ddc::detail::TypeSeq&lt; Patches... &gt;</type>
        <definition>using MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::PatchOrdering =  ddc::detail::TypeSeq&lt;Patches...&gt;</definition>
        <argsstring></argsstring>
        <name>PatchOrdering</name>
        <qualifiedname>MultipatchSplineBuilder::PatchOrdering</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="68" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchSplineBuilder_1a9d60b55d1563b2b47ecc70d837270c62" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>class <ref refid="structPatch" kindref="compound">Patch</ref></type>
          </param>
        </templateparamlist>
        <type>typename Build_BuilderType&lt; <ref refid="structPatch" kindref="compound">Patch</ref> &gt;::type</type>
        <definition>using MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::BuilderOnPatch =  typename Build_BuilderType&lt;Patch&gt;::type</definition>
        <argsstring></argsstring>
        <name>BuilderOnPatch</name>
        <qualifiedname>MultipatchSplineBuilder::BuilderOnPatch</qualifiedname>
        <briefdescription>
<para>A type alias to get the builder type on a specific patch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="97" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchSplineBuilder_1a09bad09fdc0b9fa8ea17d13e50573877" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>class <ref refid="structPatch" kindref="compound">Patch</ref></type>
          </param>
        </templateparamlist>
        <type>DField&lt; typename BuilderOnPatch&lt; <ref refid="structPatch" kindref="compound">Patch</ref> &gt;::template batched_spline_domain_type&lt; typename ValuesOnPatch&lt; <ref refid="structPatch" kindref="compound">Patch</ref> &gt;::discrete_domain_type &gt;, MemorySpace &gt;</type>
        <definition>using MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::SplineOnPatch =  DField&lt; typename BuilderOnPatch&lt;Patch&gt;::template batched_spline_domain_type&lt; typename ValuesOnPatch&lt;Patch&gt;::discrete_domain_type&gt;, MemorySpace&gt;</definition>
        <argsstring></argsstring>
        <name>SplineOnPatch</name>
        <qualifiedname>MultipatchSplineBuilder::SplineOnPatch</qualifiedname>
        <briefdescription>
<para>A type alias to get the batched spline coefficients on a specific patch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="101" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchSplineBuilder_1ada42cf6e6ad8b45a9bfc89bd4f53778e" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>class <ref refid="structPatch" kindref="compound">Patch</ref></type>
          </param>
        </templateparamlist>
        <type>DConstField&lt; typename BuilderOnPatch&lt; <ref refid="structPatch" kindref="compound">Patch</ref> &gt;::template batched_derivs_domain_type&lt; typename ValuesOnPatch&lt; <ref refid="structPatch" kindref="compound">Patch</ref> &gt;::discrete_domain_type &gt;, MemorySpace &gt;</type>
        <definition>using MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::DerivsOnPatch =  DConstField&lt; typename BuilderOnPatch&lt;Patch&gt;::template batched_derivs_domain_type&lt; typename ValuesOnPatch&lt;Patch&gt;::discrete_domain_type&gt;, MemorySpace&gt;</definition>
        <argsstring></argsstring>
        <name>DerivsOnPatch</name>
        <qualifiedname>MultipatchSplineBuilder::DerivsOnPatch</qualifiedname>
        <briefdescription>
<para>A type alias to get the batched derivatives on a specific patch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="108" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchSplineBuilder_1acc238bf7b40a82b2dba5c5f769d7afd4" prot="private" static="no">
        <type><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref>&lt; SplineOnPatch, Patches... &gt;</type>
        <definition>using MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::MultipatchSplineCoeffs =  MultipatchField&lt;SplineOnPatch, Patches...&gt;</definition>
        <argsstring></argsstring>
        <name>MultipatchSplineCoeffs</name>
        <qualifiedname>MultipatchSplineBuilder::MultipatchSplineCoeffs</qualifiedname>
        <briefdescription>
<para>The type of the batched spline coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="114" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchSplineBuilder_1ab494e5989c596c67bf498c5e1b0bbbaa" prot="private" static="no">
        <type><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref>&lt; ValuesOnPatch, Patches... &gt;</type>
        <definition>using MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::MultipatchValues =  MultipatchField&lt;ValuesOnPatch, Patches...&gt;</definition>
        <argsstring></argsstring>
        <name>MultipatchValues</name>
        <qualifiedname>MultipatchSplineBuilder::MultipatchValues</qualifiedname>
        <briefdescription>
<para>The type of the values at the batched interpolation points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="118" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchSplineBuilder_1ac2beee27eb8660a81001ac4b23d02e1b" prot="private" static="no">
        <type><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref>&lt; DerivsOnPatch, Patches... &gt;</type>
        <definition>using MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::MultipatchDerivs =  MultipatchField&lt;DerivsOnPatch, Patches...&gt;</definition>
        <argsstring></argsstring>
        <name>MultipatchDerivs</name>
        <qualifiedname>MultipatchSplineBuilder::MultipatchDerivs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="120" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMultipatchSplineBuilder_1a3ddf2a10028615ba5382aa74703b4864" prot="private" static="no">
        <type>std::tuple&lt; BuilderOnPatch&lt; Patches &gt; const  &amp;... &gt;</type>
        <definition>using MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::BuilderTuple =  std::tuple&lt;BuilderOnPatch&lt;Patches&gt; const&amp;...&gt;</definition>
        <argsstring></argsstring>
        <name>BuilderTuple</name>
        <qualifiedname>MultipatchSplineBuilder::BuilderTuple</qualifiedname>
        <briefdescription>
<para>The type of the internal storage of the SplineBuilders. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="123" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classMultipatchSplineBuilder_1ada07053cca6c38b2555b352d396037f7" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::n_patches</definition>
        <argsstring></argsstring>
        <name>n_patches</name>
        <qualifiedname>MultipatchSplineBuilder::n_patches</qualifiedname>
        <initializer>= ddc::type_seq_size_v&lt;PatchOrdering&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="69" column="34" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMultipatchSplineBuilder_1a2b9cf7c63375c9b6aa30e91e266130d4" prot="private" static="no" mutable="no">
        <type>BuilderTuple const</type>
        <definition>BuilderTuple const MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::m_builders</definition>
        <argsstring></argsstring>
        <name>m_builders</name>
        <qualifiedname>MultipatchSplineBuilder::m_builders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="126" column="24" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classMultipatchSplineBuilder_1ac8053b8716c29448279c875a1bd4e3e9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="structPatch" kindref="compound">Patch</ref></type>
          </param>
        </templateparamlist>
        <type>std::optional&lt; DerivsOnPatch&lt; <ref refid="structPatch" kindref="compound">Patch</ref> &gt; &gt;</type>
        <definition>std::optional&lt; DerivsOnPatch&lt; Patch &gt; &gt; MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::get_deriv_value</definition>
        <argsstring>(std::optional&lt; MultipatchDerivs &gt; derivs) const</argsstring>
        <name>get_deriv_value</name>
        <qualifiedname>MultipatchSplineBuilder::get_deriv_value</qualifiedname>
        <param>
          <type>std::optional&lt; <ref refid="classMultipatchField" kindref="compound">MultipatchDerivs</ref> &gt;</type>
          <declname>derivs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="130" column="19" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="130" bodyend="138"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classMultipatchSplineBuilder_1a97386a9ec4fdbaddc567d3486f06317d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::MultipatchSplineBuilder</definition>
        <argsstring>(BuilderOnPatch&lt; Patches &gt; const &amp;... builders)</argsstring>
        <name>MultipatchSplineBuilder</name>
        <qualifiedname>MultipatchSplineBuilder::MultipatchSplineBuilder</qualifiedname>
        <param>
          <type>BuilderOnPatch&lt; Patches &gt; const &amp;...</type>
          <declname>builders</declname>
        </param>
        <briefdescription>
<para>Instantiate the <ref refid="classMultipatchSplineBuilder" kindref="compound">MultipatchSplineBuilder</ref> from a std::tuple of all the builder on each patch. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>The builders have to be sorted in the same order as the patches in the tuple.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builders</parametername>
</parameternamelist>
<parameterdescription>
<para>Spline builders for each patch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="150" column="14" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="150" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classMultipatchSplineBuilder_1acb6518219b8a1e835784c9010e5aafcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::~MultipatchSplineBuilder</definition>
        <argsstring>()=default</argsstring>
        <name>~MultipatchSplineBuilder</name>
        <qualifiedname>MultipatchSplineBuilder::~MultipatchSplineBuilder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="154" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classMultipatchSplineBuilder_1a0292da3c87a8bd59c429f1bc076051c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MultipatchSplineBuilder&lt; ExecSpace, MemorySpace, BSplineOnPatch, GridOnPatch, BcLower, BcUpper, BcTransition, Connectivity, Solver, ValuesOnPatch, Patches &gt;::operator()</definition>
        <argsstring>(MultipatchSplineCoeffs splines, MultipatchValues const &amp;values, std::optional&lt; MultipatchDerivs &gt; derivs_xmin=std::nullopt, std::optional&lt; MultipatchDerivs &gt; derivs_xmax=std::nullopt) const</argsstring>
        <name>operator()</name>
        <qualifiedname>MultipatchSplineBuilder::operator()</qualifiedname>
        <param>
          <type><ref refid="classMultipatchField" kindref="compound">MultipatchSplineCoeffs</ref></type>
          <declname>splines</declname>
        </param>
        <param>
          <type><ref refid="classMultipatchField" kindref="compound">MultipatchValues</ref> const &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classMultipatchField" kindref="compound">MultipatchDerivs</ref> &gt;</type>
          <declname>derivs_xmin</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classMultipatchField" kindref="compound">MultipatchDerivs</ref> &gt;</type>
          <declname>derivs_xmax</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Build the spline representation of each given function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>splines</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref> of all the Fields pointing to the spline representations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref> of all the Fields pointing to the function values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>derivs_xmin</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref> of all the ConstFields describing the function derivatives at the lower bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>derivs_xmax</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMultipatchField" kindref="compound">MultipatchField</ref> of all the ConstFields describing the function derivatives at the upper bound. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="164" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="164" bodyend="176"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class to call all the builders of all the patches once. </para>
    </briefdescription>
    <detaileddescription>
<para>We need to instantiate all the builders for all the patches in the main code. We process the same way for the Fields containing the spline coefficients and the values of the function on each patch. The Fields are stored in <ref refid="classMultipatchField" kindref="compound">MultipatchField</ref> objects. The builders are stored in this class. This class is instantiated with all the builders. The operator() allows to call all the builders stored in the member of this class in one single line.</para>
<para>This function is useful to avoid calling all the builders individually, especially in a multipatch geometry with several patches.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ExecSpace</parametername>
</parameternamelist>
<parameterdescription>
<para>The space (CPU/GPU) where the calculations are carried out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MemorySpace</parametername>
</parameternamelist>
<parameterdescription>
<para>The space (CPU/GPU) where the coefficients and values are stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BSplineOnPatch</parametername>
</parameternamelist>
<parameterdescription>
<para>A type alias which provides the BSpline type along which the splines are built. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GridOnPatch</parametername>
</parameternamelist>
<parameterdescription>
<para>A type alias which provides the Grid type along which the interpolation points of the splines are found. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BcLower</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower boundary condition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BcUpper</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper boundary condition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BcTransition</parametername>
</parameternamelist>
<parameterdescription>
<para>The boundary condition used at the interface between 2 patches. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Connectivity</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classMultipatchConnectivity" kindref="compound">MultipatchConnectivity</ref> object describing the interfaces between patches. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Solver</parametername>
</parameternamelist>
<parameterdescription>
<para>The SplineSolver giving the backend used to perform the spline approximation. See DDC for more details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValuesOnPatch</parametername>
</parameternamelist>
<parameterdescription>
<para>A type alias which provides the field type which will be used to pass the values of the function at the interpolation points. The index range of this field type should contain any batch dimensions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" line="55" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/multipatch/spline/multipatch_spline_builder.hpp" bodystart="56" bodyend="177"/>
    <listofallmembers>
      <member refid="classMultipatchSplineBuilder_1a9d60b55d1563b2b47ecc70d837270c62" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>BuilderOnPatch</name></member>
      <member refid="classMultipatchSplineBuilder_1a3ddf2a10028615ba5382aa74703b4864" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>BuilderTuple</name></member>
      <member refid="classMultipatchSplineBuilder_1ada42cf6e6ad8b45a9bfc89bd4f53778e" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>DerivsOnPatch</name></member>
      <member refid="classMultipatchSplineBuilder_1ac8053b8716c29448279c875a1bd4e3e9" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>get_deriv_value</name></member>
      <member refid="classMultipatchSplineBuilder_1a2b9cf7c63375c9b6aa30e91e266130d4" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>m_builders</name></member>
      <member refid="classMultipatchSplineBuilder_1ac2beee27eb8660a81001ac4b23d02e1b" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>MultipatchDerivs</name></member>
      <member refid="classMultipatchSplineBuilder_1a97386a9ec4fdbaddc567d3486f06317d" prot="public" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>MultipatchSplineBuilder</name></member>
      <member refid="classMultipatchSplineBuilder_1acc238bf7b40a82b2dba5c5f769d7afd4" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>MultipatchSplineCoeffs</name></member>
      <member refid="classMultipatchSplineBuilder_1ab494e5989c596c67bf498c5e1b0bbbaa" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>MultipatchValues</name></member>
      <member refid="classMultipatchSplineBuilder_1ada07053cca6c38b2555b352d396037f7" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>n_patches</name></member>
      <member refid="classMultipatchSplineBuilder_1a0292da3c87a8bd59c429f1bc076051c3" prot="public" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>operator()</name></member>
      <member refid="classMultipatchSplineBuilder_1acb65941100d3d033aa2ac7ebf5b7caf0" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>PatchOrdering</name></member>
      <member refid="classMultipatchSplineBuilder_1a09bad09fdc0b9fa8ea17d13e50573877" prot="private" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>SplineOnPatch</name></member>
      <member refid="classMultipatchSplineBuilder_1acb6518219b8a1e835784c9010e5aafcf" prot="public" virt="non-virtual"><scope>MultipatchSplineBuilder</scope><name>~MultipatchSplineBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
