<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classLeviCivitaTensor" kind="class" language="C++" prot="public">
    <compoundname>LeviCivitaTensor</compoundname>
    <includes refid="static__tensors_8hpp" local="no">static_tensors.hpp</includes>
    <templateparamlist>
      <param>
        <type>class ElementType</type>
      </param>
      <param>
        <type>class ValidIndexSet</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classLeviCivitaTensor_1a75ae281b08da04242aa4b8fe07a61c67" prot="public" static="no">
        <type>ElementType</type>
        <definition>using LeviCivitaTensor&lt; ElementType, ValidIndexSet &gt;::element_type =  ElementType</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <qualifiedname>LeviCivitaTensor::element_type</qualifiedname>
        <briefdescription>
<para>The type of the elements of the tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" line="103" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classLeviCivitaTensor_1ae7830c67e0842b80b8b9566fe83fc7b0" prot="public" static="no">
        <type>type_seq_duplicate_t&lt; ValidIndexSet, <ref refid="classLeviCivitaTensor_1a861d4050938002b7643f5d106da33054" kindref="member">rank</ref>()&gt;</type>
        <definition>using LeviCivitaTensor&lt; ElementType, ValidIndexSet &gt;::index_set =  type_seq_duplicate_t&lt;ValidIndexSet, rank()&gt;</definition>
        <argsstring></argsstring>
        <name>index_set</name>
        <qualifiedname>LeviCivitaTensor::index_set</qualifiedname>
        <briefdescription>
<para>The TensorIndexSet describing the possible indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" line="129" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classLeviCivitaTensor_1a0e1c1e6577d4c49cceaf6f338361084f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>ValidIndexSet</type>
        <definition>using LeviCivitaTensor&lt; ElementType, ValidIndexSet &gt;::vector_index_set_t =  ValidIndexSet</definition>
        <argsstring></argsstring>
        <name>vector_index_set_t</name>
        <qualifiedname>LeviCivitaTensor::vector_index_set_t</qualifiedname>
        <briefdescription>
<para>A helper type alias to get all possible indices along a specified dimension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of interest (0 &lt;= dim &lt; <ref refid="classLeviCivitaTensor_1a861d4050938002b7643f5d106da33054" kindref="member">rank()</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" line="161" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classLeviCivitaTensor_1a861d4050938002b7643f5d106da33054" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION constexpr std::size_t</type>
        <definition>static KOKKOS_FUNCTION constexpr std::size_t LeviCivitaTensor&lt; ElementType, ValidIndexSet &gt;::rank</definition>
        <argsstring>()</argsstring>
        <name>rank</name>
        <qualifiedname>LeviCivitaTensor::rank</qualifiedname>
        <briefdescription>
<para>The rank of the tensor. This is equivalent to the number of indices required to access an element of the tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The rank of the tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" line="112" column="50" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classLeviCivitaTensor_1a9d2c687cdde551ff289df0020e0d5dc7" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION constexpr std::size_t</type>
        <definition>static KOKKOS_FUNCTION constexpr std::size_t LeviCivitaTensor&lt; ElementType, ValidIndexSet &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>LeviCivitaTensor::size</qualifiedname>
        <briefdescription>
<para>The size of the tensor. This is the number of elements in the tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of elements in the tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" line="123" column="50" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classLeviCivitaTensor_1a9f9c8c9bbbbe3356be9837195a510b43" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class QueryTensorIndexElement</type>
          </param>
        </templateparamlist>
        <type>constexpr KOKKOS_FUNCTION ElementType</type>
        <definition>static constexpr KOKKOS_FUNCTION ElementType LeviCivitaTensor&lt; ElementType, ValidIndexSet &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>LeviCivitaTensor::get</qualifiedname>
        <briefdescription>
<para>Get an element of the tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QueryIndexTag</parametername>
</parameternamelist>
<parameterdescription>
<para>A type describing the relevant index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The relevant element of the tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" line="142" column="50" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" bodystart="142" bodyend="153"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classLeviCivitaTensor_1afdc799fa85d9418c2b5490feb24f948e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION LeviCivitaTensor&lt; ElementType, ValidIndexSet &gt;::LeviCivitaTensor</definition>
        <argsstring>()=default</argsstring>
        <name>LeviCivitaTensor</name>
        <qualifiedname>LeviCivitaTensor::LeviCivitaTensor</qualifiedname>
        <briefdescription>
<para>Construct an uninitialised tensor object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" line="134" column="31"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A class containing only static constexpr methods which describes the Levi-Civita tensor. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ElementType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements of the tensor (usually double/complex). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValidIndexSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The indices that can be used along any of the dimensions of the tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" line="97" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/static_tensors.hpp" bodystart="98" bodyend="162"/>
    <listofallmembers>
      <member refid="classLeviCivitaTensor_1a75ae281b08da04242aa4b8fe07a61c67" prot="public" virt="non-virtual"><scope>LeviCivitaTensor</scope><name>element_type</name></member>
      <member refid="classLeviCivitaTensor_1a9f9c8c9bbbbe3356be9837195a510b43" prot="public" virt="non-virtual"><scope>LeviCivitaTensor</scope><name>get</name></member>
      <member refid="classLeviCivitaTensor_1ae7830c67e0842b80b8b9566fe83fc7b0" prot="public" virt="non-virtual"><scope>LeviCivitaTensor</scope><name>index_set</name></member>
      <member refid="classLeviCivitaTensor_1afdc799fa85d9418c2b5490feb24f948e" prot="public" virt="non-virtual"><scope>LeviCivitaTensor</scope><name>LeviCivitaTensor</name></member>
      <member refid="classLeviCivitaTensor_1a861d4050938002b7643f5d106da33054" prot="public" virt="non-virtual"><scope>LeviCivitaTensor</scope><name>rank</name></member>
      <member refid="classLeviCivitaTensor_1a9d2c687cdde551ff289df0020e0d5dc7" prot="public" virt="non-virtual"><scope>LeviCivitaTensor</scope><name>size</name></member>
      <member refid="classLeviCivitaTensor_1a0e1c1e6577d4c49cceaf6f338361084f" prot="public" virt="non-virtual"><scope>LeviCivitaTensor</scope><name>vector_index_set_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
