<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structConstPolarSpline" kind="struct" language="C++" prot="public">
    <compoundname>ConstPolarSpline</compoundname>
    <includes refid="polar__spline_8hpp" local="no">polar_spline.hpp</includes>
    <templateparamlist>
      <param>
        <type>class PolarBSplinesType</type>
      </param>
      <param>
        <type>class MemSpace</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structConstPolarSpline_1abb8ad3be7f39e385d8fa90e991437648" prot="public" static="no">
        <type>typename PolarBSplinesType::BSplinesR_tag</type>
        <definition>using ConstPolarSpline&lt; PolarBSplinesType, MemSpace &gt;::BSplinesR =  typename PolarBSplinesType::BSplinesR_tag</definition>
        <argsstring></argsstring>
        <name>BSplinesR</name>
        <qualifiedname>ConstPolarSpline::BSplinesR</qualifiedname>
        <briefdescription>
<para>The radial bspline from which the polar B-splines are constructed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" line="177" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structConstPolarSpline_1a45b2e9a326fa2fcfac0a2ef640be63f2" prot="public" static="no">
        <type>typename PolarBSplinesType::BSplinesTheta_tag</type>
        <definition>using ConstPolarSpline&lt; PolarBSplinesType, MemSpace &gt;::BSplinesTheta =  typename PolarBSplinesType::BSplinesTheta_tag</definition>
        <argsstring></argsstring>
        <name>BSplinesTheta</name>
        <qualifiedname>ConstPolarSpline::BSplinesTheta</qualifiedname>
        <briefdescription>
<para>The poloidal bspline from which the polar B-splines are constructed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" line="179" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structConstPolarSpline_1aedd7d1c4f010858e8f1e6a3bd59e4619" prot="public" static="no" mutable="no">
        <type>DConstField&lt; IdxRange&lt; <ref refid="structConstPolarSpline_1abb8ad3be7f39e385d8fa90e991437648" kindref="member">BSplinesR</ref>, <ref refid="structConstPolarSpline_1a45b2e9a326fa2fcfac0a2ef640be63f2" kindref="member">BSplinesTheta</ref> &gt;, MemSpace &gt; const</type>
        <definition>DConstField&lt;IdxRange&lt;BSplinesR, BSplinesTheta&gt;, MemSpace&gt; const ConstPolarSpline&lt; PolarBSplinesType, MemSpace &gt;::spline_coef</definition>
        <argsstring></argsstring>
        <name>spline_coef</name>
        <qualifiedname>ConstPolarSpline::spline_coef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A ConstField containing the coefficients in front of the b-spline elements which can be expressed as a tensor product of 1D B-splines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" line="186" column="23" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structConstPolarSpline_1ad65bed77b967e94437734b18bfcb8e49" prot="public" static="no" mutable="no">
        <type>DConstField&lt; IdxRange&lt; PolarBSplinesType &gt;, MemSpace &gt; const</type>
        <definition>DConstField&lt;IdxRange&lt;PolarBSplinesType&gt;, MemSpace&gt; const ConstPolarSpline&lt; PolarBSplinesType, MemSpace &gt;::singular_spline_coef</definition>
        <argsstring></argsstring>
        <name>singular_spline_coef</name>
        <qualifiedname>ConstPolarSpline::singular_spline_coef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A ConstField containing the coefficients in front of the b-spline elements near the singular point which cannot be expressed as a tensor product of 1D B-splines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" line="192" column="23" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structConstPolarSpline_1a74afaef9d251406fbd5641314d68ae4c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ConstPolarSpline&lt; PolarBSplinesType, MemSpace &gt;::ConstPolarSpline</definition>
        <argsstring>(PolarSplineMem&lt; PolarBSplinesType, MemSpace &gt; const &amp;spl)</argsstring>
        <name>ConstPolarSpline</name>
        <qualifiedname>ConstPolarSpline::ConstPolarSpline</qualifiedname>
        <param>
          <type><ref refid="structPolarSplineMem" kindref="compound">PolarSplineMem</ref>&lt; PolarBSplinesType, MemSpace &gt; const &amp;</type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a constant reference to a <ref refid="structPolarSplineMem" kindref="compound">PolarSplineMem</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spl</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structPolarSplineMem" kindref="compound">PolarSplineMem</ref> being referenced. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" line="192" column="23" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="structConstPolarSpline_1a3706681ce3128cf3dd1fa50c021567f4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ConstPolarSpline&lt; PolarBSplinesType, MemSpace &gt;::ConstPolarSpline</definition>
        <argsstring>(PolarSpline&lt; PolarBSplinesType, MemSpace &gt; const &amp;spl)</argsstring>
        <name>ConstPolarSpline</name>
        <qualifiedname>ConstPolarSpline::ConstPolarSpline</qualifiedname>
        <param>
          <type><ref refid="structPolarSpline" kindref="compound">PolarSpline</ref>&lt; PolarBSplinesType, MemSpace &gt; const &amp;</type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a constant reference to a <ref refid="structPolarSplineMem" kindref="compound">PolarSplineMem</ref> from a <ref refid="structPolarSpline" kindref="compound">PolarSpline</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spl</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structPolarSplineMem" kindref="compound">PolarSplineMem</ref> being referenced. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" line="192" column="23" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" bodystart="212" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="structConstPolarSpline_1a8c2f3cdd5149357884a6593f3b5fcfae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structPolarSpline" kindref="compound">PolarSpline</ref>&lt; PolarBSplinesType, MemSpace &gt;</type>
        <definition>PolarSpline&lt; PolarBSplinesType, MemSpace &gt; ConstPolarSpline&lt; PolarBSplinesType, MemSpace &gt;::span_view</definition>
        <argsstring>() const</argsstring>
        <name>span_view</name>
        <qualifiedname>ConstPolarSpline::span_view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a reference to the polar spline referenced by this polar spline view.</para>
<para><simplesect kind="return"><para>A reference to a polar spline. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" line="224" column="17" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="structConstPolarSpline_1a0f27d945fdb363714fd90bbb9a2d4f31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structConstPolarSpline" kindref="compound">ConstPolarSpline</ref>&lt; PolarBSplinesType, MemSpace &gt;</type>
        <definition>ConstPolarSpline&lt; PolarBSplinesType, MemSpace &gt; ConstPolarSpline&lt; PolarBSplinesType, MemSpace &gt;::span_cview</definition>
        <argsstring>() const</argsstring>
        <name>span_cview</name>
        <qualifiedname>ConstPolarSpline::span_cview</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a constant reference to the polar spline referenced by this polar spline view.</para>
<para><simplesect kind="return"><para>A constant reference to a polar spline. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" line="234" column="22" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" bodystart="234" bodyend="237"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A structure containing the two ConstFields necessary to define a constant reference to a spline on a set of polar basis splines. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolarBSplinesType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the polar B-splines on which this spline is defined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" line="173" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_spline.hpp" bodystart="174" bodyend="238"/>
    <listofallmembers>
      <member refid="structConstPolarSpline_1abb8ad3be7f39e385d8fa90e991437648" prot="public" virt="non-virtual"><scope>ConstPolarSpline</scope><name>BSplinesR</name></member>
      <member refid="structConstPolarSpline_1a45b2e9a326fa2fcfac0a2ef640be63f2" prot="public" virt="non-virtual"><scope>ConstPolarSpline</scope><name>BSplinesTheta</name></member>
      <member refid="structConstPolarSpline_1a74afaef9d251406fbd5641314d68ae4c" prot="public" virt="non-virtual"><scope>ConstPolarSpline</scope><name>ConstPolarSpline</name></member>
      <member refid="structConstPolarSpline_1a3706681ce3128cf3dd1fa50c021567f4" prot="public" virt="non-virtual"><scope>ConstPolarSpline</scope><name>ConstPolarSpline</name></member>
      <member refid="structConstPolarSpline_1ad65bed77b967e94437734b18bfcb8e49" prot="public" virt="non-virtual"><scope>ConstPolarSpline</scope><name>singular_spline_coef</name></member>
      <member refid="structConstPolarSpline_1a0f27d945fdb363714fd90bbb9a2d4f31" prot="public" virt="non-virtual"><scope>ConstPolarSpline</scope><name>span_cview</name></member>
      <member refid="structConstPolarSpline_1a8c2f3cdd5149357884a6593f3b5fcfae" prot="public" virt="non-virtual"><scope>ConstPolarSpline</scope><name>span_view</name></member>
      <member refid="structConstPolarSpline_1aedd7d1c4f010858e8f1e6a3bd59e4619" prot="public" virt="non-virtual"><scope>ConstPolarSpline</scope><name>spline_coef</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
