<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structCollisionsIntra_1_1GhostedVx" kind="struct" language="C++" prot="public">
    <compoundname>CollisionsIntra::GhostedVx</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::conditional_t&lt; uniform_edge_v, UniformGridBase&lt; Vx &gt;, NonUniformGridBase&lt; Vx &gt; &gt;</basecompoundref>
    <includes refid="collisions__intra_8hpp" local="no">collisions_intra.hpp</includes>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A conditional type representing either a uniform or a non-uniform ghosted vx mesh. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CollisionsIntra::GhostedVx</label>
        <link refid="structCollisionsIntra_1_1GhostedVx"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::conditional_t&lt; uniform_edge_v, UniformGridBase&lt; Vx &gt;, NonUniformGridBase&lt; Vx &gt; &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CollisionsIntra::GhostedVx</label>
        <link refid="structCollisionsIntra_1_1GhostedVx"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::conditional_t&lt; uniform_edge_v, UniformGridBase&lt; Vx &gt;, NonUniformGridBase&lt; Vx &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/rhs/collisions_intra.hpp" line="47" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/rhs/collisions_intra.hpp" bodystart="49" bodyend="50"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
