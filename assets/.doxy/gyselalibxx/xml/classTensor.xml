<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classTensor" kind="class" language="C++" prot="public">
    <compoundname>Tensor</compoundname>
    <basecompoundref refid="classTensorCommon" prot="public" virt="non-virtual">TensorCommon&lt; detail::TensorDataInnards&lt; ElementType,(ddc::type_seq_size_v&lt; ValidIndexSet &gt; *... *ddc::type_seq_size_v&lt; ValidIndexSetFirstDim &gt;)&gt;, ValidIndexSetFirstDim, ValidIndexSet... &gt;</basecompoundref>
    <includes refid="tensor_8hpp" local="no">tensor.hpp</includes>
    <templateparamlist>
      <param>
        <type>class ElementType</type>
      </param>
      <param>
        <type>class ValidIndexSetFirstDim</type>
      </param>
      <param>
        <type>class...</type>
        <declname>ValidIndexSet</declname>
        <defname>ValidIndexSet</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classTensor_1a90babc948cc76e5741f04a45395c0498" prot="private" static="no">
        <type><ref refid="classTensorCommon" kindref="compound">TensorCommon</ref>&lt; detail::TensorDataInnards&lt; ElementType,(ddc::type_seq_size_v&lt; ValidIndexSet &gt; *... *ddc::type_seq_size_v&lt; ValidIndexSetFirstDim &gt;)&gt;, ValidIndexSetFirstDim, ValidIndexSet... &gt;</type>
        <definition>using Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::base_type =  TensorCommon&lt; detail::TensorDataInnards&lt; ElementType, (ddc::type_seq_size_v&lt;ValidIndexSet&gt; * ... * ddc::type_seq_size_v&lt;ValidIndexSetFirstDim&gt;)&gt;, ValidIndexSetFirstDim, ValidIndexSet...&gt;</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <qualifiedname>Tensor::base_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="61" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTensor_1a4c6e65e8f6674042fe4cac88479330d1" prot="private" static="no" mutable="no">
        <type>std::array&lt; ElementType, <ref refid="classTensorCommon_1a576aa8abdcff0bd9a24f793a41807fc1" kindref="member">s_n_elements</ref> &gt;</type>
        <definition>std::array&lt;ElementType, s_n_elements&gt; Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::m_data_alloc</definition>
        <argsstring></argsstring>
        <name>m_data_alloc</name>
        <qualifiedname>Tensor::m_data_alloc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="77" column="16" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classTensor_1a4a47cd908de66325add93143756fb97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::Tensor</definition>
        <argsstring>()=default</argsstring>
        <name>Tensor</name>
        <qualifiedname>Tensor::Tensor</qualifiedname>
        <briefdescription>
<para>Construct an uninitialised tensor object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="84" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classTensor_1a489f7ef71c36797a6b710794cd2a30d5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::Tensor</definition>
        <argsstring>(ElementType fill_value)</argsstring>
        <name>Tensor</name>
        <qualifiedname>Tensor::Tensor</qualifiedname>
        <param>
          <type>ElementType</type>
          <declname>fill_value</declname>
        </param>
        <briefdescription>
<para>Construct a tensor object initialised with a value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fill_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value with which the tensor should be filled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="90" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classTensor_1a1f97f16958ee4928665a38df7d129a98" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;(std::is_convertible_v&lt;Params, ElementType&gt; &amp;&amp; ...)&gt;</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;                    sizeof...(Params) == <ref refid="classTensorCommon_1a6b4297c4947e2dd7413dfb9cbb27878b" kindref="member">base_type::size</ref>() &amp;&amp; sizeof...(Params) != 1&gt;</defval>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::Tensor</definition>
        <argsstring>(Params... elements)</argsstring>
        <name>Tensor</name>
        <qualifiedname>Tensor::Tensor</qualifiedname>
        <param>
          <type>Params...</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
<para>Construct a 1D tensor object by providing the elements that should be saved in the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>The elements of the tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="108" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" bodystart="108" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classTensor_1a706ab53bc12245f195db879d9ce4cec6" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Dims</declname>
            <defname>Dims</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::Tensor</definition>
        <argsstring>(Coord&lt; Dims... &gt; coord) noexcept</argsstring>
        <name>Tensor</name>
        <qualifiedname>Tensor::Tensor</qualifiedname>
        <param>
          <type>Coord&lt; Dims... &gt;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Construct a 1D tensor object from a coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="123" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" bodystart="123" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classTensor_1a7e4279d6af9d2290c6bb4c5556e02ead" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OTensorType</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; is_tensor_type_v&lt; OTensorType &gt;, bool &gt;</type>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::Tensor</definition>
        <argsstring>(const OTensorType &amp;o_tensor) noexcept</argsstring>
        <name>Tensor</name>
        <qualifiedname>Tensor::Tensor</qualifiedname>
        <param>
          <type>const OTensorType &amp;</type>
          <declname>o_tensor</declname>
        </param>
        <briefdescription>
<para>Construct a tensor object by copying an existing compatible tensor. A tensor is compatible if it is defined on the same dimensions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The tensor to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="141" column="30" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classTensor_1a2adcf14b0c73758f9d7a4530699f5f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::Tensor</definition>
        <argsstring>(Tensor const &amp;o_tensor)=default</argsstring>
        <name>Tensor</name>
        <qualifiedname>Tensor::Tensor</qualifiedname>
        <param>
          <type><ref refid="classTensor" kindref="compound">Tensor</ref> const &amp;</type>
          <declname>o_tensor</declname>
        </param>
        <briefdescription>
<para>Construct a tensor object by copying an existing tensor of exactly the same type. This method can be called implicitly. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The tensor to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="157" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classTensor_1a12e2b6f5f2fc74784794a91bc6675670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::Tensor</definition>
        <argsstring>(Tensor &amp;&amp;o_tensor)=default</argsstring>
        <name>Tensor</name>
        <qualifiedname>Tensor::Tensor</qualifiedname>
        <param>
          <type><ref refid="classTensor" kindref="compound">Tensor</ref> &amp;&amp;</type>
          <declname>o_tensor</declname>
        </param>
        <briefdescription>
<para>Construct a tensor object by moving an existing tensor of exactly the same type. This method can be called implicitly. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The tensor to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="165" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classTensor_1af6e516caedbe34eacbd831697ec9ee42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION <ref refid="classTensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Tensor &amp; Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::operator=</definition>
        <argsstring>(Tensor const &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Tensor::operator=</qualifiedname>
        <param>
          <type><ref refid="classTensor" kindref="compound">Tensor</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>A copy assign operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The tensor to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the current tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="172" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classTensor_1a5c8a0f4e6be0c24c592985595e05e219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION <ref refid="classTensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Tensor &amp; Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;::operator=</definition>
        <argsstring>(Tensor &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Tensor::operator=</qualifiedname>
        <param>
          <type><ref refid="classTensor" kindref="compound">Tensor</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>A move assign operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The tensor to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A r-value reference to the current tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="179" column="38"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class representing a <ref refid="classTensor" kindref="compound">Tensor</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ElementType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements of the tensor (usually double/complex). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValidIndexSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The indices that can be used along each dimension of the tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;</label>
        <link refid="classTensor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TensorCommon&lt; detail::TensorDataInnards&lt; ElementType,(ddc::type_seq_size_v&lt; ValidIndexSet &gt; *... *ddc::type_seq_size_v&lt; ValidIndexSetFirstDim &gt;)&gt;, ValidIndexSetFirstDim, ValidIndexSet... &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Tensor&lt; ElementType, ValidIndexSetFirstDim, ValidIndexSet &gt;</label>
        <link refid="classTensor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TensorCommon&lt; detail::TensorDataInnards&lt; ElementType,(ddc::type_seq_size_v&lt; ValidIndexSet &gt; *... *ddc::type_seq_size_v&lt; ValidIndexSetFirstDim &gt;)&gt;, ValidIndexSetFirstDim, ValidIndexSet... &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>detail::TensorDataInnards&lt; ElementType,(ddc::type_seq_size_v&lt; ValidIndexSet &gt; *... *ddc::type_seq_size_v&lt; ValidIndexSetFirstDim &gt;)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" line="52" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/tensor.hpp" bodystart="60" bodyend="180"/>
    <listofallmembers>
      <member refid="classTensor_1a90babc948cc76e5741f04a45395c0498" prot="private" virt="non-virtual"><scope>Tensor</scope><name>base_type</name></member>
      <member refid="classTensor_1a4c6e65e8f6674042fe4cac88479330d1" prot="private" virt="non-virtual"><scope>Tensor</scope><name>m_data_alloc</name></member>
      <member refid="classTensor_1af6e516caedbe34eacbd831697ec9ee42" prot="public" virt="non-virtual"><scope>Tensor</scope><name>operator=</name></member>
      <member refid="classTensor_1a5c8a0f4e6be0c24c592985595e05e219" prot="public" virt="non-virtual"><scope>Tensor</scope><name>operator=</name></member>
      <member refid="classTensor_1a4a47cd908de66325add93143756fb97f" prot="public" virt="non-virtual"><scope>Tensor</scope><name>Tensor</name></member>
      <member refid="classTensor_1a489f7ef71c36797a6b710794cd2a30d5" prot="public" virt="non-virtual"><scope>Tensor</scope><name>Tensor</name></member>
      <member refid="classTensor_1a1f97f16958ee4928665a38df7d129a98" prot="public" virt="non-virtual"><scope>Tensor</scope><name>Tensor</name></member>
      <member refid="classTensor_1a706ab53bc12245f195db879d9ce4cec6" prot="public" virt="non-virtual"><scope>Tensor</scope><name>Tensor</name></member>
      <member refid="classTensor_1a7e4279d6af9d2290c6bb4c5556e02ead" prot="public" virt="non-virtual"><scope>Tensor</scope><name>Tensor</name></member>
      <member refid="classTensor_1a2adcf14b0c73758f9d7a4530699f5f28" prot="public" virt="non-virtual"><scope>Tensor</scope><name>Tensor</name></member>
      <member refid="classTensor_1a12e2b6f5f2fc74784794a91bc6675670" prot="public" virt="non-virtual"><scope>Tensor</scope><name>Tensor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
