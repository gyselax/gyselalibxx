<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classPolarBSplines" kind="class" language="C++" prot="public">
    <compoundname>PolarBSplines</compoundname>
    <includes refid="polar__bsplines_8hpp" local="no">polar_bsplines.hpp</includes>
    <innerclass refid="structPolarBSplines_1_1eval__deriv__type" prot="private">PolarBSplines::eval_deriv_type</innerclass>
    <innerclass refid="structPolarBSplines_1_1eval__type" prot="private">PolarBSplines::eval_type</innerclass>
    <innerclass refid="classPolarBSplines_1_1Impl" prot="public">PolarBSplines::Impl</innerclass>
    <templateparamlist>
      <param>
        <type>class <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref></type>
      </param>
      <param>
        <type>class <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref></type>
      </param>
      <param>
        <type>int</type>
        <declname>C</declname>
        <defname>C</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classPolarBSplines_1af53c68e9827efcffeee27e353ac3ef7e" prot="public" static="no">
        <type><ref refid="structBSplinesR" kindref="compound">BSplinesR</ref></type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::BSplinesR_tag =  BSplinesR</definition>
        <argsstring></argsstring>
        <name>BSplinesR_tag</name>
        <qualifiedname>PolarBSplines::BSplinesR_tag</qualifiedname>
        <briefdescription>
<para>The radial bspline from which the polar B-splines are constructed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="50" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1a7c93c1bedcf655bff666950a59eff9ea" prot="public" static="no">
        <type><ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref></type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::BSplinesTheta_tag =  BSplinesTheta</definition>
        <argsstring></argsstring>
        <name>BSplinesTheta_tag</name>
        <qualifiedname>PolarBSplines::BSplinesTheta_tag</qualifiedname>
        <briefdescription>
<para>The poloidal bspline from which the polar B-splines are constructed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="53" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1acdb7056a76b2985ddced01f3ca5610f2" prot="public" static="no">
        <type>typename BSplinesR::continuous_dimension_type</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::DimR =  typename BSplinesR::continuous_dimension_type</definition>
        <argsstring></argsstring>
        <name>DimR</name>
        <qualifiedname>PolarBSplines::DimR</qualifiedname>
        <briefdescription>
<para>The tag for the radial direction of the B-splines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="57" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1a963f3ab10c79d029e0908ee597bc41dd" prot="public" static="no">
        <type>typename BSplinesTheta::continuous_dimension_type</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::DimTheta =  typename BSplinesTheta::continuous_dimension_type</definition>
        <argsstring></argsstring>
        <name>DimTheta</name>
        <qualifiedname>PolarBSplines::DimTheta</qualifiedname>
        <briefdescription>
<para>The tag for the poloidal direction of the B-splines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="60" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1a3781a1ef42e396315cd2912e0f128c8b" prot="public" static="no">
        <type><ref refid="classPolarBSplines" kindref="compound">PolarBSplines</ref></type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::discrete_dimension_type =  PolarBSplines</definition>
        <argsstring></argsstring>
        <name>discrete_dimension_type</name>
        <qualifiedname>PolarBSplines::discrete_dimension_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The tag denoting the discrete dimension described by this class.</para>
<para>This is the tag which should be used to create a Field whose contents are each associated with a PolarBSpline. In other words a spline defined on this basis would have the type: DField&lt;IdxRange&lt;PolarBSplines&gt;; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="74" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1a9d78494d89fbe4d9abea58a61619fae8" prot="public" static="no">
        <type>Idx&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref>, <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::tensor_product_index_type =  Idx&lt;BSplinesR, BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>tensor_product_index_type</name>
        <qualifiedname>PolarBSplines::tensor_product_index_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of a 2D index for the subset of the polar B-splines which can be expressed as a tensor product of 1D B-splines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="80" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1a84ea418aed020ad1396d3283aba7904e" prot="public" static="no">
        <type>IdxRange&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref>, <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::tensor_product_idx_range_type =  IdxRange&lt;BSplinesR, BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>tensor_product_idx_range_type</name>
        <qualifiedname>PolarBSplines::tensor_product_idx_range_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of the 2D idx_range for the subset of the polar B-splines which can be expressed as a tensor product of 1D B-splines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="86" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1a6b1ab0ce3118e3bb0172d9a70ce7ccca" prot="public" static="no">
        <type>IdxStep&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref>, <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::tensor_product_idx_step_type =  IdxStep&lt;BSplinesR, BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>tensor_product_idx_step_type</name>
        <qualifiedname>PolarBSplines::tensor_product_idx_step_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of a 2D vector for the subset of the polar B-splines which can be expressed as a tensor product of 1D B-splines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="92" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classPolarBSplines_1a542cf47afea7ce56f7d15d843f4865c7" prot="private" static="no">
        <type>Idx&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref> &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::IdxR =  Idx&lt;BSplinesR&gt;</definition>
        <argsstring></argsstring>
        <name>IdxR</name>
        <qualifiedname>PolarBSplines::IdxR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="95" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1aabb3c9905855382caf10609c1ae20aaf" prot="private" static="no">
        <type>Idx&lt; <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::IdxTheta =  Idx&lt;BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxTheta</name>
        <qualifiedname>PolarBSplines::IdxTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="96" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1a7d5b70183f7ac4cb4acd8dd076025996" prot="private" static="no">
        <type>IdxStep&lt; <ref refid="structBSplinesR" kindref="compound">BSplinesR</ref> &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::IdxStepR =  IdxStep&lt;BSplinesR&gt;</definition>
        <argsstring></argsstring>
        <name>IdxStepR</name>
        <qualifiedname>PolarBSplines::IdxStepR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="97" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolarBSplines_1adf2fa6196b0b4d07cf5f93d8f61e744c" prot="private" static="no">
        <type>IdxStep&lt; <ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref> &gt;</type>
        <definition>using PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::IdxStepTheta =  IdxStep&lt;BSplinesTheta&gt;</definition>
        <argsstring></argsstring>
        <name>IdxStepTheta</name>
        <qualifiedname>PolarBSplines::IdxStepTheta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="98" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classPolarBSplines_1ae4895a87f3e1ed953614a3546c319762" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>int constexpr</type>
        <definition>int constexpr PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::continuity</definition>
        <argsstring></argsstring>
        <name>continuity</name>
        <qualifiedname>PolarBSplines::continuity</qualifiedname>
        <initializer>= C</initializer>
        <briefdescription>
<para>The continuity enforced by the B-splines at the singular point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="64" column="26" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classPolarBSplines_1a9254ee09fe5fce248ae80efac56c82c3" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>static constexpr std::size_t PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::n_singular_basis</definition>
        <argsstring>()</argsstring>
        <name>n_singular_basis</name>
        <qualifiedname>PolarBSplines::n_singular_basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of singular B-splines i.e. B-splines which traverse the singular point.</para>
<para><simplesect kind="return"><para>The number of B-splines which traverse the singular point. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="106" column="34" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1ae4bb250b0904ab8a72c3f1fc029cb2fc" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DDim</type>
          </param>
        </templateparamlist>
        <type>constexpr IdxRange&lt; DDim &gt;</type>
        <definition>static constexpr IdxRange&lt; DDim &gt; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::singular_idx_range</definition>
        <argsstring>()</argsstring>
        <name>singular_idx_range</name>
        <qualifiedname>PolarBSplines::singular_idx_range</qualifiedname>
        <briefdescription>
<para>Get the IdxRange containing the indices of the b-splines which traverse the singular point. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The IdxRange containing the indices of the b-splines which traverse the singular point. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="120" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1ab295d737e634cd296d1fdbb3a76c2e4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DDim</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION Idx&lt; DDim &gt;</type>
        <definition>static KOKKOS_FUNCTION Idx&lt; DDim &gt; PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::get_polar_index</definition>
        <argsstring>(tensor_product_index_type const &amp;idx)</argsstring>
        <name>get_polar_index</name>
        <qualifiedname>PolarBSplines::get_polar_index</qualifiedname>
        <param>
          <type><ref refid="classPolarBSplines_1a9d78494d89fbe4d9abea58a61619fae8" kindref="member">tensor_product_index_type</ref> const &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the index of the polar bspline which, when evaluated at the same point, returns the same values as the 2D tensor product bspline indicated by the index passed as an argument.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of a 2D BSpline which is expressed as a tensor product of 1D BSplines.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index of the basis spline in the PolarBSpline index range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="134" column="32" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="134" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classPolarBSplines_1a8ad5514f78dabdfe57bbfa3c487fa808" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DDim</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION <ref refid="classPolarBSplines_1a9d78494d89fbe4d9abea58a61619fae8" kindref="member">tensor_product_index_type</ref></type>
        <definition>static KOKKOS_FUNCTION tensor_product_index_type PolarBSplines&lt; BSplinesR, BSplinesTheta, C &gt;::get_2d_index</definition>
        <argsstring>(Idx&lt; DDim &gt; const &amp;idx)</argsstring>
        <name>get_2d_index</name>
        <qualifiedname>PolarBSplines::get_2d_index</qualifiedname>
        <param>
          <type>Idx&lt; DDim &gt; const &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the 2D index of the tensor product bspline which, when evaluated at the same point, returns the same values as the polar bspline indicated by the index passed as an argument.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the basis spline in the PolarBSpline index range.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index of the equivalent 2D BSpline expressed as a 2D tensor product of 1D BSplines. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="154" column="54" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="154" bodyend="163"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A class containing all information describing polar B-splines.</para>
<para>Polar B-splines are 2D B-splines with a special treatment for the central singular point of a polar domain. At this singular point new B-splines are created which traverse the singular point and ensure the desired continuity condition.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="structBSplinesR" kindref="compound">BSplinesR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The basis of radial B-splines from which the polar B-splines are constructed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structBSplinesTheta" kindref="compound">BSplinesTheta</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The poloidal bspline from which the polar B-splines are constructed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>The continuity condition. The resulting splines will be continuously differentiable C times. If C == -1 then the resulting spline representation will be discontinuous at the singular point. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" line="30" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/interpolation/polar_splines/polar_bsplines.hpp" bodystart="31" bodyend="543"/>
    <listofallmembers>
      <member refid="classPolarBSplines_1af53c68e9827efcffeee27e353ac3ef7e" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>BSplinesR_tag</name></member>
      <member refid="classPolarBSplines_1a7c93c1bedcf655bff666950a59eff9ea" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>BSplinesTheta_tag</name></member>
      <member refid="classPolarBSplines_1ae4895a87f3e1ed953614a3546c319762" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>continuity</name></member>
      <member refid="classPolarBSplines_1acdb7056a76b2985ddced01f3ca5610f2" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>DimR</name></member>
      <member refid="classPolarBSplines_1a963f3ab10c79d029e0908ee597bc41dd" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>DimTheta</name></member>
      <member refid="classPolarBSplines_1a3781a1ef42e396315cd2912e0f128c8b" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>discrete_dimension_type</name></member>
      <member refid="classPolarBSplines_1a8ad5514f78dabdfe57bbfa3c487fa808" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>get_2d_index</name></member>
      <member refid="classPolarBSplines_1ab295d737e634cd296d1fdbb3a76c2e4e" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>get_polar_index</name></member>
      <member refid="classPolarBSplines_1a542cf47afea7ce56f7d15d843f4865c7" prot="private" virt="non-virtual"><scope>PolarBSplines</scope><name>IdxR</name></member>
      <member refid="classPolarBSplines_1a7d5b70183f7ac4cb4acd8dd076025996" prot="private" virt="non-virtual"><scope>PolarBSplines</scope><name>IdxStepR</name></member>
      <member refid="classPolarBSplines_1adf2fa6196b0b4d07cf5f93d8f61e744c" prot="private" virt="non-virtual"><scope>PolarBSplines</scope><name>IdxStepTheta</name></member>
      <member refid="classPolarBSplines_1aabb3c9905855382caf10609c1ae20aaf" prot="private" virt="non-virtual"><scope>PolarBSplines</scope><name>IdxTheta</name></member>
      <member refid="classPolarBSplines_1a9254ee09fe5fce248ae80efac56c82c3" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>n_singular_basis</name></member>
      <member refid="classPolarBSplines_1ae4bb250b0904ab8a72c3f1fc029cb2fc" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>singular_idx_range</name></member>
      <member refid="classPolarBSplines_1a84ea418aed020ad1396d3283aba7904e" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>tensor_product_idx_range_type</name></member>
      <member refid="classPolarBSplines_1a6b1ab0ce3118e3bb0172d9a70ce7ccca" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>tensor_product_idx_step_type</name></member>
      <member refid="classPolarBSplines_1a9d78494d89fbe4d9abea58a61619fae8" prot="public" virt="non-virtual"><scope>PolarBSplines</scope><name>tensor_product_index_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
