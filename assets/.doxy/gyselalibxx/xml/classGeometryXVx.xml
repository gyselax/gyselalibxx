<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classGeometryXVx" kind="class" language="C++" prot="public">
    <compoundname>GeometryXVx</compoundname>
    <includes refid="geometryXVx_2geometry_2geometry_8hpp" local="no">geometry.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGeometryXVx_1a23b86e4306321373542bf91b8858dfc1" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class <ref refid="structT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>std::conditional_t&lt; std::is_same_v&lt; <ref refid="structT" kindref="compound">T</ref>, <ref refid="structGridX" kindref="compound">GridX</ref> &gt;, <ref refid="structGridVx" kindref="compound">GridVx</ref>, void &gt;</type>
        <definition>using GeometryXVx::velocity_dim_for =  std::conditional_t&lt;std::is_same_v&lt;T, GridX&gt;, GridVx, void&gt;</definition>
        <argsstring></argsstring>
        <name>velocity_dim_for</name>
        <qualifiedname>GeometryXVx::velocity_dim_for</qualifiedname>
        <briefdescription>
<para>A templated type giving the velocity discretised dimension type associated to a spatial discretised dimension type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" line="410" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGeometryXVx_1a801a3e9956431568cae987d46f81b968" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class <ref refid="structT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>std::conditional_t&lt; std::is_same_v&lt; <ref refid="structT" kindref="compound">T</ref>, <ref refid="structGridVx" kindref="compound">GridVx</ref> &gt;, <ref refid="structGridX" kindref="compound">GridX</ref>, void &gt;</type>
        <definition>using GeometryXVx::spatial_dim_for =  std::conditional_t&lt;std::is_same_v&lt;T, GridVx&gt;, GridX, void&gt;</definition>
        <argsstring></argsstring>
        <name>spatial_dim_for</name>
        <qualifiedname>GeometryXVx::spatial_dim_for</qualifiedname>
        <briefdescription>
<para>A templated type giving the spatial discretised dimension type associated to a velocity discretised dimension type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" line="416" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGeometryXVx_1a0e14480d4976661b66acb462e3beb309" prot="public" static="no">
        <type>IdxRangeX</type>
        <definition>using GeometryXVx::IdxRangeSpatial =  IdxRangeX</definition>
        <argsstring></argsstring>
        <name>IdxRangeSpatial</name>
        <qualifiedname>GeometryXVx::IdxRangeSpatial</qualifiedname>
        <briefdescription>
<para>An alias for the spatial discrete index range type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" line="421" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGeometryXVx_1a8903d9f025308985617b427783801967" prot="public" static="no">
        <type>IdxRangeVx</type>
        <definition>using GeometryXVx::IdxRangeVelocity =  IdxRangeVx</definition>
        <argsstring></argsstring>
        <name>IdxRangeVelocity</name>
        <qualifiedname>GeometryXVx::IdxRangeVelocity</qualifiedname>
        <briefdescription>
<para>An alias for the velocity discrete index range type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" line="426" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGeometryXVx_1afca0714427d19b4e591abd6f7b0656e8" prot="public" static="no">
        <type>IdxRangeSpXVx</type>
        <definition>using GeometryXVx::IdxRangeFdistribu =  IdxRangeSpXVx</definition>
        <argsstring></argsstring>
        <name>IdxRangeFdistribu</name>
        <qualifiedname>GeometryXVx::IdxRangeFdistribu</qualifiedname>
        <briefdescription>
<para>An alias for the whole distribution function discrete index range type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" line="433" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" bodystart="433" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class providing aliases for useful subindex ranges of the geometry. It is used as template parameter for generic dimensionality-agnostic operators such as advections. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" line="403" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/geometryXVx/geometry/geometry.hpp" bodystart="404" bodyend="434"/>
    <listofallmembers>
      <member refid="classGeometryXVx_1afca0714427d19b4e591abd6f7b0656e8" prot="public" virt="non-virtual"><scope>GeometryXVx</scope><name>IdxRangeFdistribu</name></member>
      <member refid="classGeometryXVx_1a0e14480d4976661b66acb462e3beb309" prot="public" virt="non-virtual"><scope>GeometryXVx</scope><name>IdxRangeSpatial</name></member>
      <member refid="classGeometryXVx_1a8903d9f025308985617b427783801967" prot="public" virt="non-virtual"><scope>GeometryXVx</scope><name>IdxRangeVelocity</name></member>
      <member refid="classGeometryXVx_1a801a3e9956431568cae987d46f81b968" prot="public" virt="non-virtual"><scope>GeometryXVx</scope><name>spatial_dim_for</name></member>
      <member refid="classGeometryXVx_1a23b86e4306321373542bf91b8858dfc1" prot="public" virt="non-virtual"><scope>GeometryXVx</scope><name>velocity_dim_for</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
