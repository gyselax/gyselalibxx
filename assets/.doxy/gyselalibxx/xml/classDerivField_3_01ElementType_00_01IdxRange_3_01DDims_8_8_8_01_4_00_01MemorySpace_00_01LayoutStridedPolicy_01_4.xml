<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4" kind="class" language="C++" prot="public">
    <compoundname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</compoundname>
    <basecompoundref refid="classDerivFieldCommon" prot="public" virt="non-virtual">DerivFieldCommon&lt; Field&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;, IdxRange&lt; DDims... &gt; &gt;</basecompoundref>
    <includes refid="derivative__field_8hpp" local="no">derivative_field.hpp</includes>
    <templateparamlist>
      <param>
        <type>class ElementType</type>
      </param>
      <param>
        <type>class...</type>
        <declname>DDims</declname>
        <defname>DDims</defname>
      </param>
      <param>
        <type>class MemorySpace</type>
      </param>
      <param>
        <type>class LayoutStridedPolicy</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a80f7894a089915c53af8b9526cd54f36" prot="private" static="no">
        <type><ref refid="classDerivFieldCommon" kindref="compound">DerivFieldCommon</ref>&lt; Field&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;, IdxRange&lt; DDims... &gt; &gt;</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::base_type =  DerivFieldCommon&lt; Field&lt;ElementType, IdxRange&lt;DDims...&gt;, MemorySpace, LayoutStridedPolicy&gt;, IdxRange&lt;DDims...&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::base_type</qualifiedname>
        <briefdescription>
<para>The class from which this object inherits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="110" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ad21d2967a8bc54612ea2bbc9e80616c1" prot="private" static="no">
        <type>typename base_type::discrete_deriv_idx_range_type</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::discrete_deriv_idx_range_type =  typename base_type::discrete_deriv_idx_range_type</definition>
        <argsstring></argsstring>
        <name>discrete_deriv_idx_range_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::discrete_deriv_idx_range_type</qualifiedname>
        <briefdescription>
<para>The IdxRange which describes the derivatives present on each chunk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="166" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a64ecbf1f362f16ddfc6cffc7b9e9e531" prot="private" static="no">
        <type>typename base_type::discrete_deriv_index_type</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::discrete_deriv_index_type =  typename base_type::discrete_deriv_index_type</definition>
        <argsstring></argsstring>
        <name>discrete_deriv_index_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::discrete_deriv_index_type</qualifiedname>
        <briefdescription>
<para>The Idx which describes the order of the derivatives in each dimension. (e.g. second-order derivative). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="171" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ad4ddc3aa0d58b7298246fd58c3d800ec" prot="private" static="no">
        <type>typename chunk_type::reference</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::reference =  typename chunk_type::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::reference</qualifiedname>
        <briefdescription>
<para>The type of a reference to an element of the mdspan. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="174" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a11cfbe470116c190df197c7ded0ac20b" prot="public" static="no">
        <type>typename base_type::element_type</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::element_type =  typename base_type::element_type</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::element_type</qualifiedname>
        <briefdescription>
<para>The type of the elements in the chunks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="116" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a8cf8cc00d98621cc57aaa83a4e2a839f" prot="public" static="no">
        <type>typename base_type::discrete_domain_type</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::discrete_domain_type =  typename base_type::discrete_domain_type</definition>
        <argsstring></argsstring>
        <name>discrete_domain_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::discrete_domain_type</qualifiedname>
        <briefdescription>
<para>The IdxRange on which the chunks in this object are defined. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a DDC keyword used to make this class interchangeable with Field. In DDC IdxRange types are referred to as DiscreteDomain types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="124" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a8976a7b20051721b99a646045565c0bb" prot="public" static="no">
        <type>typename base_type::index_range_type</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::index_range_type =  typename base_type::index_range_type</definition>
        <argsstring></argsstring>
        <name>index_range_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::index_range_type</qualifiedname>
        <briefdescription>
<para>The IdxRange on which the fields in this object are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="126" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ab6e4ea937f142c7ea00a7a043f6a7cdb" prot="public" static="no">
        <type>typename base_type::discrete_element_type</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::discrete_element_type =  typename base_type::discrete_element_type</definition>
        <argsstring></argsstring>
        <name>discrete_element_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::discrete_element_type</qualifiedname>
        <briefdescription>
<para>The Idx which can be used to index this object. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a DDC keyword used to make this class interchangeable with Field. In DDC Idx types are referred to as DiscreteElement types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="134" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a4a8c28ecdbdafa3a98db2a87983376f8" prot="public" static="no">
        <type>typename base_type::deriv_tags</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::deriv_tags =  typename base_type::deriv_tags</definition>
        <argsstring></argsstring>
        <name>deriv_tags</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::deriv_tags</qualifiedname>
        <briefdescription>
<para>A type sequence containing all derivatives present in this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="137" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a1a59c609f8176e9e863f28225be845e3" prot="public" static="no">
        <type>typename detail::strip_deriv_t&lt; <ref refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a4a8c28ecdbdafa3a98db2a87983376f8" kindref="member">deriv_tags</ref> &gt;</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::physical_deriv_grids =  typename detail::strip_deriv_t&lt;deriv_tags&gt;</definition>
        <argsstring></argsstring>
        <name>physical_deriv_grids</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::physical_deriv_grids</qualifiedname>
        <briefdescription>
<para>A type sequence containing all grid types for which derivatives are present in this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="140" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ac66f4fa6a6631822097cc8109f763589" prot="public" static="no">
        <type>typename base_type::physical_grids</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::physical_grids =  typename base_type::physical_grids</definition>
        <argsstring></argsstring>
        <name>physical_grids</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::physical_grids</qualifiedname>
        <briefdescription>
<para>A type sequence containing all the grids on which the fields are defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="143" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ab114b0980a48e579fc99134b40c9f22d" prot="public" static="no">
        <type>typename base_type::physical_idx_range_type</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::physical_idx_range_type =  typename base_type::physical_idx_range_type</definition>
        <argsstring></argsstring>
        <name>physical_idx_range_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::physical_idx_range_type</qualifiedname>
        <briefdescription>
<para>The physical index range on which the field is defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="146" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a87a55b42526619bb91be37de6f6e416f" prot="public" static="no">
        <type>typename base_type::chunk_type</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::chunk_type =  typename base_type::chunk_type</definition>
        <argsstring></argsstring>
        <name>chunk_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::chunk_type</qualifiedname>
        <briefdescription>
<para>The type of the field stored in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a DDC keyword used to make this class interchangeable with Field. In DDC FieldMem types are referred to as Chunk types and Field types are referred to as ChunkSpan/ChunkView. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="155" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ad4c88b591e1de7d100a400f9fd0203ad" prot="public" static="no">
        <type><ref refid="classDerivField" kindref="compound">DerivField</ref>&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::span_type =  DerivField&lt;ElementType, IdxRange&lt;DDims...&gt;, MemorySpace, LayoutStridedPolicy&gt;</definition>
        <argsstring></argsstring>
        <name>span_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::span_type</qualifiedname>
        <briefdescription>
<para>The type of a modifiable span of this field. This is a DDC keyword used to make this class interchangeable with Field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="158" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a695e683f3937dbfc72c277b00347274a" prot="public" static="no">
        <type><ref refid="classDerivField" kindref="compound">DerivField</ref>&lt; ElementType const, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</type>
        <definition>using DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::view_type =  DerivField&lt;ElementType const, IdxRange&lt;DDims...&gt;, MemorySpace, LayoutStridedPolicy&gt;</definition>
        <argsstring></argsstring>
        <name>view_type</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::view_type</qualifiedname>
        <briefdescription>
<para>The type of a constant view of this field. This is a DDC keyword used to make this class interchangeable with Field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="161" column="5" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a55eb05690ea5d86bfd6fe4256b4e6dad" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>ArrayIndex</declname>
            <defname>ArrayIndex</defname>
          </param>
          <param>
            <type>class Tag</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr Idx&lt; Tag &gt;</type>
        <definition>KOKKOS_FUNCTION constexpr Idx&lt; Tag &gt; DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::get_chunk_subidx_range_1d_idx</definition>
        <argsstring>()</argsstring>
        <name>get_chunk_subidx_range_1d_idx</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::get_chunk_subidx_range_1d_idx</qualifiedname>
        <briefdescription>
<para>Get the subindex range to be extracted from a <ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref> to build the internal_chunk at position ArrayIndex along dimension Tag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="184" column="35" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="184" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a5715833cb4d3a008b509a5760f272094" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>ArrayIndex</declname>
            <defname>ArrayIndex</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr discrete_deriv_index_type</type>
        <definition>KOKKOS_FUNCTION constexpr discrete_deriv_index_type DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::get_chunk_subidx_range_idx</definition>
        <argsstring>()</argsstring>
        <name>get_chunk_subidx_range_idx</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::get_chunk_subidx_range_idx</qualifiedname>
        <briefdescription>
<para>Get the subindex range to be extracted from a <ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref> to build the internal_chunk at position ArrayIndex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="204" column="57" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ab026f2f41036bfda6c6e6c06c8223670" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Field</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>ArrayIndex</declname>
            <defname>ArrayIndex</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr void</type>
        <definition>KOKKOS_FUNCTION constexpr void DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::initialise_fields</definition>
        <argsstring>(Field const &amp;chunks, std::index_sequence&lt; ArrayIndex... &gt;)</argsstring>
        <name>initialise_fields</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::initialise_fields</qualifiedname>
        <param>
          <type>Field const &amp;</type>
          <declname>chunks</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; ArrayIndex... &gt;</type>
        </param>
        <briefdescription>
<para>Initialise fields inside internal_fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="211" column="36" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="211" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1aea01e036a1639d070d35df387ec85b34" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::get_kokkos_view_from_internal_chunk</definition>
        <argsstring>(int index)</argsstring>
        <name>get_kokkos_view_from_internal_chunk</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::get_kokkos_view_from_internal_chunk</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="220" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="220" bodyend="231"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a02015c41d0fbed1c9329699b583fe11f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION constexpr</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION constexpr DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</definition>
        <argsstring>(DerivField const &amp;other)=default</argsstring>
        <name>DerivField</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</qualifiedname>
        <param>
          <type><ref refid="classDerivField" kindref="compound">DerivField</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy-construct a <ref refid="classDerivField" kindref="compound">DerivField</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classDerivField" kindref="compound">DerivField</ref> being copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="239" column="41"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1af1f36e186cf5cdf4050442c18105ea22" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION constexpr</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION constexpr DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</definition>
        <argsstring>(DerivField &amp;&amp;other)=default</argsstring>
        <name>DerivField</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</qualifiedname>
        <param>
          <type><ref refid="classDerivField" kindref="compound">DerivField</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move-construct a <ref refid="classDerivField" kindref="compound">DerivField</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classDerivField" kindref="compound">DerivField</ref> being moved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="246" column="41"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ab745a7772a5a73b63e275a4887c00ec6" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>int</type>
            <declname>NDerivs</declname>
            <defname>NDerivs</defname>
          </param>
          <param>
            <type>class Allocator</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::is_same_v&lt;typename Allocator::memory_space, MemorySpace&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</definition>
        <argsstring>(DerivFieldMem&lt; OElementType, index_range_type, NDerivs, Allocator &gt; &amp;field)</argsstring>
        <name>DerivField</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</qualifiedname>
        <param>
          <type><ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref>&lt; OElementType, <ref refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a8976a7b20051721b99a646045565c0bb" kindref="member">index_range_type</ref>, NDerivs, Allocator &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classDerivField" kindref="compound">DerivField</ref> containing a modifiable view on the data in a <ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref> to view. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="258" column="24" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="258" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1aca911b432b83e28114781e8fbf062eee" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>class SFINAEElementType</type>
            <defval>ElementType</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::is_const_v&lt;SFINAEElementType&gt;&gt;</defval>
          </param>
          <param>
            <type>int</type>
            <declname>NDerivs</declname>
            <defname>NDerivs</defname>
          </param>
          <param>
            <type>class Allocator</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::is_same_v&lt;typename Allocator::memory_space, MemorySpace&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</definition>
        <argsstring>(DerivFieldMem&lt; OElementType, index_range_type, NDerivs, Allocator &gt; const &amp;field)</argsstring>
        <name>DerivField</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</qualifiedname>
        <param>
          <type><ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref>&lt; OElementType, <ref refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a8976a7b20051721b99a646045565c0bb" kindref="member">index_range_type</ref>, NDerivs, Allocator &gt; const &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classDerivField" kindref="compound">DerivField</ref> containing a constant view on the data in a <ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classDerivFieldMem" kindref="compound">DerivFieldMem</ref> to view. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="281" column="24" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="281" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1aa7e25d8a63289256c1957f6b4b48ab62" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr</type>
        <definition>KOKKOS_FUNCTION constexpr DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</definition>
        <argsstring>(DerivField&lt; OElementType, index_range_type, MemorySpace, LayoutStridedPolicy &gt; const &amp;field)</argsstring>
        <name>DerivField</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::DerivField</qualifiedname>
        <param>
          <type><ref refid="classDerivField" kindref="compound">DerivField</ref>&lt; OElementType, <ref refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a8976a7b20051721b99a646045565c0bb" kindref="member">index_range_type</ref>, MemorySpace, LayoutStridedPolicy &gt; const &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Copy construct a <ref refid="classDerivField" kindref="compound">DerivField</ref>. The element type may be changed to a complatible type. (e.g. double -&gt; const double). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classDerivField" kindref="compound">DerivField</ref> to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="298" column="31" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="298" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1aff344a2cabdff7ca3284427c7757f5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::~DerivField</definition>
        <argsstring>()=default</argsstring>
        <name>~DerivField</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::~DerivField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="309" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a5c73fc7d3e23f0dc0b8cfe0c352495f2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION constexpr <ref refid="classDerivField" kindref="compound">DerivField</ref> &amp;</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION constexpr DerivField &amp; DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::operator=</definition>
        <argsstring>(DerivField const &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classDerivField" kindref="compound">DerivField</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy-assigns a new value to this <ref refid="classDerivField" kindref="compound">DerivField</ref>, yields a new view to the same data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classDerivField" kindref="compound">DerivField</ref> to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>*this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="315" column="52"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a16496ea9865d678f0cc111ab934849a3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION constexpr <ref refid="classDerivField" kindref="compound">DerivField</ref> &amp;</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION constexpr DerivField &amp; DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::operator=</definition>
        <argsstring>(DerivField &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classDerivField" kindref="compound">DerivField</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move-assigns a new value to this <ref refid="classDerivField" kindref="compound">DerivField</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classDerivField" kindref="compound">DerivField</ref> to move </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>*this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="321" column="52"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a86f232e462344ee0dbc33c7bbf2d7b57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>class OLayoutStridedPolicy</type>
          </param>
          <param>
            <type>class OMemorySpace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::deepcopy</definition>
        <argsstring>(DerivField&lt; OElementType, index_range_type, OMemorySpace, OLayoutStridedPolicy &gt; src)</argsstring>
        <name>deepcopy</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::deepcopy</qualifiedname>
        <param>
          <type><ref refid="classDerivField" kindref="compound">DerivField</ref>&lt; OElementType, <ref refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a8976a7b20051721b99a646045565c0bb" kindref="member">index_range_type</ref>, OMemorySpace, OLayoutStridedPolicy &gt;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy the source <ref refid="classDerivField" kindref="compound">DerivField</ref> into this <ref refid="classDerivField" kindref="compound">DerivField</ref> using Kokkos::deep_copy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classDerivField" kindref="compound">DerivField</ref> containing the data to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="329" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="329" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a86babf139eeb18c97f045852b155a613" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecSpace</type>
          </param>
          <param>
            <type>class OElementType</type>
          </param>
          <param>
            <type>class OMemorySpace</type>
          </param>
          <param>
            <type>class OLayoutStridedPolicy</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::deepcopy</definition>
        <argsstring>(ExecSpace const &amp;execution_space, DerivField&lt; OElementType, index_range_type, OMemorySpace, OLayoutStridedPolicy &gt; src)</argsstring>
        <name>deepcopy</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::deepcopy</qualifiedname>
        <param>
          <type>ExecSpace const &amp;</type>
          <declname>execution_space</declname>
        </param>
        <param>
          <type><ref refid="classDerivField" kindref="compound">DerivField</ref>&lt; OElementType, <ref refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a8976a7b20051721b99a646045565c0bb" kindref="member">index_range_type</ref>, OMemorySpace, OLayoutStridedPolicy &gt;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy the source <ref refid="classDerivField" kindref="compound">DerivField</ref> into this <ref refid="classDerivField" kindref="compound">DerivField</ref> using Kokkos::deep_copy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>execution_space</parametername>
</parameternamelist>
<parameterdescription>
<para>The execution space on which the copy will be carried out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classDerivField" kindref="compound">DerivField</ref> containing the data to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="346" column="10" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="346" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a11d7a0ef77df2e057a0f56d2555fe582" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>DElem</declname>
            <defname>DElem</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION constexpr reference</type>
        <definition>KOKKOS_FUNCTION constexpr reference DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::operator()</definition>
        <argsstring>(DElem... elems) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::operator()</qualifiedname>
        <param>
          <type>DElem...</type>
          <declname>elems</declname>
        </param>
        <briefdescription>
<para>Get an element from a constant field. An Idx describes the element of interest. If information about the derivatives is missing then it is assumed that the 0-th order derivative is requested. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elems</parametername>
</parameternamelist>
<parameterdescription>
<para>The element of interest.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The requested element. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="367" column="41" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="367" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a224a54ac31ccb912b93b7c9fdddda745" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION constexpr <ref refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a695e683f3937dbfc72c277b00347274a" kindref="member">view_type</ref></type>
        <definition>KOKKOS_FUNCTION constexpr view_type DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::span_cview</definition>
        <argsstring>() const</argsstring>
        <name>span_cview</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::span_cview</qualifiedname>
        <briefdescription>
<para>Get a constant <ref refid="classDerivField" kindref="compound">DerivField</ref> of this field. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is designed to match the equivalent function in DDC. In Gysela it should not be called directly. Instead the global function get_const_field should be used.</para>
<para><simplesect kind="return"><para>A constant span of this field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="383" column="41" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="383" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a81ddb73448316e11b70fab4feb0c6350" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION constexpr <ref refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ad4c88b591e1de7d100a400f9fd0203ad" kindref="member">span_type</ref></type>
        <definition>KOKKOS_FUNCTION constexpr span_type DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::span_view</definition>
        <argsstring>() const</argsstring>
        <name>span_view</name>
        <qualifiedname>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;::span_view</qualifiedname>
        <briefdescription>
<para>Get a modifiable <ref refid="classDerivField" kindref="compound">DerivField</ref> of this field. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is designed to match the equivalent function in DDC. In Gysela it should not be called directly. Instead the global function get_field should be used.</para>
<para><simplesect kind="return"><para>A span of this field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="396" column="41" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="396" bodyend="399"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class which holds references to chunks of memory describing a field and its derivatives. </para>
    </briefdescription>
    <detaileddescription>
<para>The values of the field and the derivatives may be defined on different index ranges, but the underlying mesh must be the same for both.</para>
<para><anchor id="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1DerivFieldImplementation"/> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ElementType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements inside the chunks. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IdxRange&lt;DDims...&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>The index range on which the internal fields are defined. This index range is the physical index range on which the values are defined combined with the index range of the derivatives of interest (e.g. IdxRange&lt;Deriv&lt;X&gt;, <ref refid="structGridX" kindref="compound">GridX</ref>, <ref refid="structGridY" kindref="compound">GridY</ref>&gt;). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MemorySpace</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory space where the data is saved (CPU/GPU). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LayoutStridedPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The way in which the memory is laid out in memory (contiguous in the leading/trailing dimension, strided, etc). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</label>
        <link refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>DerivFieldCommon&lt; Field&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;, IdxRange&lt; DDims... &gt; &gt;</label>
        <link refid="classDerivFieldCommon"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</label>
        <link refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>DerivFieldCommon&lt; Field&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;, IdxRange&lt; DDims... &gt; &gt;</label>
        <link refid="classDerivFieldCommon"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" line="103" column="1" bodyfile="/home/runner/work/gyselalibxx/gyselalibxx/code_branch/src/data_types/derivative_field.hpp" bodystart="107" bodyend="400"/>
    <listofallmembers>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a80f7894a089915c53af8b9526cd54f36" prot="private" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>base_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a87a55b42526619bb91be37de6f6e416f" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>chunk_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a86f232e462344ee0dbc33c7bbf2d7b57" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>deepcopy</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a86babf139eeb18c97f045852b155a613" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>deepcopy</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a4a8c28ecdbdafa3a98db2a87983376f8" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>deriv_tags</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a02015c41d0fbed1c9329699b583fe11f" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>DerivField</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1af1f36e186cf5cdf4050442c18105ea22" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>DerivField</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ab745a7772a5a73b63e275a4887c00ec6" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>DerivField</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1aca911b432b83e28114781e8fbf062eee" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>DerivField</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1aa7e25d8a63289256c1957f6b4b48ab62" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>DerivField</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ad21d2967a8bc54612ea2bbc9e80616c1" prot="private" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>discrete_deriv_idx_range_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a64ecbf1f362f16ddfc6cffc7b9e9e531" prot="private" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>discrete_deriv_index_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a8cf8cc00d98621cc57aaa83a4e2a839f" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>discrete_domain_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ab6e4ea937f142c7ea00a7a043f6a7cdb" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>discrete_element_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a11cfbe470116c190df197c7ded0ac20b" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>element_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a55eb05690ea5d86bfd6fe4256b4e6dad" prot="private" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>get_chunk_subidx_range_1d_idx</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a5715833cb4d3a008b509a5760f272094" prot="private" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>get_chunk_subidx_range_idx</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1aea01e036a1639d070d35df387ec85b34" prot="private" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>get_kokkos_view_from_internal_chunk</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a8976a7b20051721b99a646045565c0bb" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>index_range_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ab026f2f41036bfda6c6e6c06c8223670" prot="private" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>initialise_fields</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a11d7a0ef77df2e057a0f56d2555fe582" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>operator()</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a5c73fc7d3e23f0dc0b8cfe0c352495f2" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>operator=</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a16496ea9865d678f0cc111ab934849a3" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>operator=</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a1a59c609f8176e9e863f28225be845e3" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>physical_deriv_grids</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ac66f4fa6a6631822097cc8109f763589" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>physical_grids</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ab114b0980a48e579fc99134b40c9f22d" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>physical_idx_range_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ad4ddc3aa0d58b7298246fd58c3d800ec" prot="private" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>reference</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a224a54ac31ccb912b93b7c9fdddda745" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>span_cview</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1ad4c88b591e1de7d100a400f9fd0203ad" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>span_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a81ddb73448316e11b70fab4feb0c6350" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>span_view</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1a695e683f3937dbfc72c277b00347274a" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>view_type</name></member>
      <member refid="classDerivField_3_01ElementType_00_01IdxRange_3_01DDims_8_8_8_01_4_00_01MemorySpace_00_01LayoutStridedPolicy_01_4_1aff344a2cabdff7ca3284427c7757f5ee" prot="public" virt="non-virtual"><scope>DerivField&lt; ElementType, IdxRange&lt; DDims... &gt;, MemorySpace, LayoutStridedPolicy &gt;</scope><name>~DerivField</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
