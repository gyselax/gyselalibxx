#!/bin/bash
# SPDX-License-Identifier: MIT

set -e -o errexit -o noclobber -o nounset -o pipefail
set -x

cd "$(dirname "$0")"
cd ..
SRC_DIR="$PWD"

cd "$(mktemp --tmpdir -d)"
SSH_DIR="$PWD"
cp "${GITHUB_MIRROR_PRIVKEY}" "${SSH_DIR}/id_rsa"
chmod -R go-rwx "${SSH_DIR}"

git config --global --add safe.directory "${SRC_DIR}"

cd "$(mktemp --tmpdir -d)"
WK_DIR="$PWD"

git config --global advice.detachedHead false
git clone "$SRC_DIR" clone
cd clone
NEWSRC_DIR="$PWD"

git config user.email "${GITLAB_USER_EMAIL}"
git config user.name "${GITLAB_USER_NAME}"
git remote set-url origin "https://root:${SELF_COMMIT_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"

git fetch -p origin public
git switch -c public origin/public
git merge origin/public

git rm -rf .
find "$SRC_DIR" -maxdepth 1 -mindepth 1 '!' -name .git -exec cp -a -t "$NEWSRC_DIR" '{}' '+'
find . -name .private -print0 | xargs -r0 dirname -z | xargs -r0 rm -rf
git config -f .gitmodules --get-regexp '^submodule\..*\.path$' | while read path_key path_val
do
    url_key="$(echo $path_key | sed 's/\.path/.url/')"
    url="$(git config -f .gitmodules --get "$url_key")"
    commit_sha1="$(git -C "${SRC_DIR}/${path_val}" rev-parse --verify HEAD)"
    rm -r "$path_val"
    git submodule add "$url" "$path_val"
    git submodule update --init -- "${path_val}"
    git -C "${path_val}" checkout "${commit_sha1}"
    git add -A "${path_val}"
done
git add -A .
git commit -m "${CI_COMMIT_MESSAGE}" || true

git fetch -p origin public
git merge origin/public
git push origin "HEAD:public"

export GIT_SSH_COMMAND="ssh -i ${SSH_DIR}/id_rsa -o IdentitiesOnly=yes -o StrictHostKeyChecking=accept-new"
git push -f git@github.com:gyselax/gyselalibxx.git "HEAD:main"
